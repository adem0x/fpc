#
#   Makefile.fpc for TDataSet for FCL
#

[package]
name=fcl-web
version=2.5.1

[require]
packages=rtl fpmkunit

[default]
fpcdir=../..

[prerules]
# If no fpmake exists and clean is called, do not try to build fpmake, it will
# most often fail because the dependencies are cleared. So simply skip the
# clean by replacing the command with 'echo'
FPMAKE_BIN_CLEAN=$(wildcard ./fpmake$(SRCEXEEXT))
ifeq ($(FPMAKE_BIN_CLEAN),)
FPMAKE_BIN_CLEAN=$(ECHO)
endif
ifdef OS_TARGET
FPC_TARGETOPT+=--os=$(OS_TARGET)
endif
ifdef CPU_TARGET
FPC_TARGETOPT+=--cpu=$(CPU_TARGET)
endif

[rules]
fpmake: fpmake.pp
	$(FPC) fpmake.pp $(FPCOPT)
all:	fpmake
	./fpmake build --localunitdir=../.. --globalunitdir=.. $(FPC_TARGETOPT) $(addprefix -o ,$(FPCOPT)) --compiler=$(FPC)
smart:	fpmake
	./fpmake build --localunitdir=../.. --globalunitdir=.. $(FPC_TARGETOPT) $(addprefix -o ,$(FPCOPT)) --compiler=$(FPC) -o "-XX -CX"
release:	fpmake
	./fpmake build --localunitdir=../.. --globalunitdir=.. $(FPC_TARGETOPT) $(addprefix -o ,$(FPCOPT)) --compiler=$(FPC) -o "-dRELEASE"
debug:	fpmake
	./fpmake build --localunitdir=../.. --globalunitdir=.. $(FPC_TARGETOPT) $(addprefix -o ,$(FPCOPT)) --compiler=$(FPC) -o "-dDEBUG"
clean:	
	$(FPMAKE_BIN_CLEAN) clean --localunitdir=../.. --globalunitdir=.. $(FPC_TARGETOPT) $(addprefix -o ,$(FPCOPT)) --compiler=$(FPC)
install:	fpmake
	./fpmake install --localunitdir=../.. --globalunitdir=.. $(FPC_TARGETOPT) $(addprefix -o ,$(FPCOPT)) --compiler=$(FPC) --prefix=$(PREFIX)

