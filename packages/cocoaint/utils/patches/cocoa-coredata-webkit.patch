--- /Data/dev/cocoa/parsedheaders/newheaders3/appkit/NSWorkspace.inc	2010-09-22 20:20:31.000000000 +0200
+++ cocoa-skel/src/appkit/NSWorkspace.inc	2010-09-22 23:57:57.000000000 +0200
@@ -26,7 +26,7 @@
   NSWorkspaceLaunchNewInstance = $00080000;
   NSWorkspaceLaunchAndHide = $00100000;
   NSWorkspaceLaunchAndHideOthers = $00200000;
-  NSWorkspaceLaunchAllowingClassicStartup = 2097153;
+  NSWorkspaceLaunchDefault = NSWorkspaceLaunchAsync or NSWorkspaceLaunchAllowingClassicStartup;
 
 const
   NSExcludeQuickDrawElementsIconCreationOption = 1 shl 1;
--- /Data/dev/cocoa/parsedheaders/newheaders3/foundation/NSGeometry.inc	2010-09-22 20:21:06.000000000 +0200
+++ cocoa-skel/src/foundation/NSGeometry.inc	2010-09-22 23:57:57.000000000 +0200
@@ -6,57 +6,51 @@
 {$ifndef NSGEOMETRY_PAS_T}
 {$define NSGEOMETRY_PAS_T}
 
+{$if defined(cpu64) or defined(cpuarm) or defined(win32)}
 { Types }
 type
   NSPoint = CGPoint;
   NSPointPtr = ^NSPoint;
-  NSPointPointer = ^NSPoint;
-  NSPointPointerPtr = ^NSPointPointer;
+  NSPointPointer = ^NSPointPtr;
   NSPointArray = ^NSPoint;
-  NSPointArrayPtr = ^NSPointArray;
   NSSize = CGSize;
   NSSizePtr = ^NSSize;
-  NSSizePointer = ^NSSize;
-  NSSizePointerPtr = ^NSSizePointer;
+  NSSizePointer = NSSizePtr;
   NSSizeArray = ^NSSize;
-  NSSizeArrayPtr = ^NSSizeArray;
   NSRect = CGRect;
   NSRectPtr = ^NSRect;
-  NSRectPointer = ^NSRect;
-  NSRectPointerPtr = ^NSRectPointer;
+  NSRectPointer = NSRectPtr;
   NSRectArray = ^NSRect;
-  NSRectArrayPtr = ^NSRectArray;
-  NSRectEdge = NSUInteger;
-  NSRectEdgePtr = ^NSRectEdge;
-  NSPointPointer = ^NSPoint;
-  NSPointPointerPtr = ^NSPointPointer;
-  NSPointArray = ^NSPoint;
-  NSPointArrayPtr = ^NSPointArray;
-  NSSizePointer = ^NSSize;
-  NSSizePointerPtr = ^NSSizePointer;
-  NSSizeArray = ^NSSize;
-  NSSizeArrayPtr = ^NSSizeArray;
-  NSRectPointer = ^NSRect;
-  NSRectPointerPtr = ^NSRectPointer;
-  NSRectArray = ^NSRect;
-  NSRectArrayPtr = ^NSRectArray;
 
 { Defines }
-const
-  NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES = 1;
+{$define  NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
+
+{$endif cpu64 or cpuarm or win32}
 
 { Types }
 type
-  
+{$ifdef NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
+  NSRectEdge = NSUInteger;
+{$else}
   NSRectEdge = culong;
+{$endif}
+  NSRectEdgePtr = ^NSRectEdge;
 
 { Constants }
+{$ifdef NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
+const
+  NSMinXEdge = CGRectMinXEdge;
+  NSMinYEdge = CGRectMinYEdge;
+  NSMaxXEdge = CGRectMaxXEdge;
+  NSMaxYEdge = CGRectMaxYEdge;
 
+{$else NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
 const
   NSMinXEdge = 0;
   NSMinYEdge = 1;
   NSMaxXEdge = 2;
   NSMaxYEdge = 3;
+{$endif NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
 
 {$endif}
 {$endif}
@@ -66,30 +60,37 @@
 {$define NSGEOMETRY_PAS_R}
 
 { Records }
+{$ifndef NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
 type
   _NSPoint = record
     x: CGFloat;
     y: CGFloat;
   end;
-NSPoint = _NSPoint;
-_NSPointPtr = ^_NSPoint;
+  NSPoint = _NSPoint;
+  NSPointPtr = ^NSPoint;
+  NSPointPointer = NSPointPtr;
+  NSPointArray = ^NSPoint;
 
 type
   _NSSize = record
     width: CGFloat;
     height: CGFloat;
   end;
-NSSize = _NSSize;
-_NSSizePtr = ^_NSSize;
+  NSSize = _NSSize;
+  NSSizePtr = ^NSSize;
+  NSSizePointer = NSSizePtr;
+  NSSizeArray = ^NSSize;
 
 type
   _NSRect = record
     origin: NSPoint;
     size: NSSize;
   end;
-NSRect = _NSRect;
-_NSRectPtr = ^_NSRect;
-
+  NSRect = _NSRect;
+  NSRectPtr = ^NSRect;
+  NSRectPointer = NSRectPtr;
+  NSRectArray = ^NSRect;
+{$endif not NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES}
 
 {$endif}
 {$endif}
--- /Data/dev/cocoa/parsedheaders/newheaders3/foundation/NSObjCRuntime.inc	2010-09-22 20:21:06.000000000 +0200
+++ cocoa-skel/src/foundation/NSObjCRuntime.inc	2010-09-22 23:57:57.000000000 +0200
@@ -8,7 +8,6 @@
 
 { Defines }
 const
-  NS_BLOCKS_AVAILABLE = 1;
   NS_BLOCKS_AVAILABLE = 0;
   NSFoundationVersionNumber10_0 = 397.40;
   NSFoundationVersionNumber10_1 = 425.00;
@@ -62,16 +61,21 @@
 
 { Types }
 type
+{$if defined(cpu64) or defined(cpuarm) or defined(win32)}
   NSInteger = clong;
-  NSIntegerPtr = ^NSInteger;
   NSUInteger = culong;
-  NSUIntegerPtr = ^NSUInteger;
+{$else}
   NSInteger = cint;
-  NSIntegerPtr = ^NSInteger;
   NSUInteger = cuint;
+{$endif}
+  NSIntegerPtr = ^NSInteger;
   NSUIntegerPtr = ^NSUInteger;
   NSComparisonResult = NSInteger;
   NSComparisonResultPtr = ^NSComparisonResult;
+  NSEnumerationOptions = NSUInteger;
+  NSEnumerationOptionsPtr = ^NSEnumerationOptions;
+  NSSortOptions = NSUInteger;
+  NSSortOptionsPtr = ^NSSortOptions;
 
 { Constants }
 
@@ -81,6 +85,18 @@
   NSOrderedDescending = 1;
 
 const
+  NSEnumerationConcurrent = 1 shl 0;
+  NSEnumerationReverse = 1 shl 1;
+
+const
+  NSSortConcurrent = 1 shl 0;
+  NSSortStable = 1 shl 4;
+
+const
+  NSIntegerMax = high(NSInteger);
+  NSIntegerMin = low(NSInteger);
+  NSUIntegerMin = low(NSUinteger);
+  NSUIntegerMax = high(NSUinteger);
   NSNotFound = NSIntegerMax;
 
 {$endif}
--- /Data/dev/cocoa/parsedheaders/newheaders3/foundation/NSPointerFunctions.inc	2010-09-22 20:21:06.000000000 +0200
+++ cocoa-skel/src/foundation/NSPointerFunctions.inc	2010-09-22 23:57:57.000000000 +0200
@@ -25,7 +25,8 @@
 { Types }
 type
   NSPointerFunctionsOptions = NSUInteger;
-  NSPointerFunctionsOptionsPtr = ^NSPointerFunctionsOptions;
+  NSPointerFunctionsOptionsPointer = ^NSPointerFunctionsOptions;
+  NSPointerFunctionsOptionsPtr = NSPointerFunctionsOptionsPointer;
 
 {$endif}
 {$endif}
@@ -53,8 +54,7 @@
 
 {$ifdef FORWARD}
   NSPointerFunctions = objcclass;
-  NSPointerFunctionsPointer = ^NSPointerFunctions;
-  NSPointerFunctionsPtr = NSPointerFunctionsPointer;
+  NSPointerFunctionsPtr = ^NSPointerFunctions;
 
 {$endif}
 
@@ -70,6 +70,7 @@
 
     function initWithOptions(options: NSPointerFunctionsOptions): id; message 'initWithOptions:';
     class function pointerFunctionsWithOptions(options: NSPointerFunctionsOptions): id; message 'pointerFunctionsWithOptions:';
+(*
     procedure setItem (newValue: NSUInteger); message 'setItem:';
     function item: NSUInteger; message 'item';
     procedure setItem1 (newValue: Boolean); message 'setItem1:';
@@ -80,6 +81,7 @@
     function : NSUInteger; message '';
     procedure setSrc (newValue: Pointer); message 'setSrc:';
     function src: Pointer; message 'src';
+*)
     procedure setUsesStrongWriteBarrier (newValue: Boolean); message 'setUsesStrongWriteBarrier:';
     function usesStrongWriteBarrier: Boolean; message 'usesStrongWriteBarrier';
     procedure setUsesWeakReadAndWriteBarriers (newValue: Boolean); message 'setUsesWeakReadAndWriteBarriers:';
--- /Data/dev/cocoa/parsedheaders/newheaders3/foundation/NSRange.inc	2010-09-22 20:21:06.000000000 +0200
+++ cocoa-skel/src/foundation/NSRange.inc	2010-09-22 23:57:57.000000000 +0200
@@ -6,11 +6,6 @@
 {$ifndef NSRANGE_PAS_T}
 {$define NSRANGE_PAS_T}
 
-{ Types }
-type
-  NSRangePointer = ^NSRange;
-  NSRangePointerPtr = ^NSRangePointer;
-
 {$endif}
 {$endif}
 
@@ -25,7 +20,8 @@
     length: NSUInteger;
   end;
 NSRange = _NSRange;
-_NSRangePtr = ^_NSRange;
+NSRangePtr = ^NSRange;
+NSRangePointer = NSRangePtr;
 
 
 {$endif}
