#
# Don't edit, this file is generated by FPCMake Version 2.0.0 [2008/01/26]
#
default: all
MAKEFILETARGETS=i386-linux i386-go32v2 i386-win32 i386-os2 i386-freebsd i386-beos i386-netbsd i386-solaris i386-qnx i386-netware i386-openbsd i386-wdosx i386-darwin i386-emx i386-watcom i386-netwlibc i386-wince i386-embedded i386-symbian m68k-linux m68k-freebsd m68k-netbsd m68k-amiga m68k-atari m68k-openbsd m68k-palmos m68k-embedded powerpc-linux powerpc-netbsd powerpc-amiga powerpc-macos powerpc-darwin powerpc-morphos powerpc-embedded sparc-linux sparc-netbsd sparc-solaris sparc-embedded x86_64-linux x86_64-freebsd x86_64-darwin x86_64-win64 x86_64-embedded arm-linux arm-palmos arm-wince arm-gba arm-nds arm-embedded arm-symbian powerpc64-linux powerpc64-darwin powerpc64-embedded
BSDs = freebsd netbsd openbsd darwin
UNIXs = linux $(BSDs) solaris qnx
LIMIT83fs = go32v2 os2 emx watcom
OSNeedsComspecToRunBatch = go32v2 watcom
FORCE:
.PHONY: FORCE
override PATH:=$(patsubst %/,%,$(subst \,/,$(PATH)))
ifneq ($(findstring darwin,$(OSTYPE)),)
inUnix=1 #darwin
SEARCHPATH:=$(filter-out .,$(subst :, ,$(PATH)))
else
ifeq ($(findstring ;,$(PATH)),)
inUnix=1
SEARCHPATH:=$(filter-out .,$(subst :, ,$(PATH)))
else
SEARCHPATH:=$(subst ;, ,$(PATH))
endif
endif
SEARCHPATH+=$(patsubst %/,%,$(subst \,/,$(dir $(MAKE))))
PWD:=$(strip $(wildcard $(addsuffix /pwd.exe,$(SEARCHPATH))))
ifeq ($(PWD),)
PWD:=$(strip $(wildcard $(addsuffix /pwd,$(SEARCHPATH))))
ifeq ($(PWD),)
$(error You need the GNU utils package to use this Makefile)
else
PWD:=$(firstword $(PWD))
SRCEXEEXT=
endif
else
PWD:=$(firstword $(PWD))
SRCEXEEXT=.exe
endif
ifndef inUnix
ifeq ($(OS),Windows_NT)
inWinNT=1
else
ifdef OS2_SHELL
inOS2=1
endif
endif
else
ifneq ($(findstring cygdrive,$(PATH)),)
inCygWin=1
endif
endif
ifdef inUnix
SRCBATCHEXT=.sh
else
ifdef inOS2
SRCBATCHEXT=.cmd
else
SRCBATCHEXT=.bat
endif
endif
ifdef COMSPEC
ifneq ($(findstring $(OS_SOURCE),$(OSNeedsComspecToRunBatch)),)
RUNBATCH=$(COMSPEC) /C
endif
endif
ifdef inUnix
PATHSEP=/
else
PATHSEP:=$(subst /,\,/)
ifdef inCygWin
PATHSEP=/
endif
endif
ifdef PWD
BASEDIR:=$(subst \,/,$(shell $(PWD)))
ifdef inCygWin
ifneq ($(findstring /cygdrive/,$(BASEDIR)),)
BASENODIR:=$(patsubst /cygdrive%,%,$(BASEDIR))
BASEDRIVE:=$(firstword $(subst /, ,$(BASENODIR)))
BASEDIR:=$(subst /cygdrive/$(BASEDRIVE)/,$(BASEDRIVE):/,$(BASEDIR))
endif
endif
else
BASEDIR=.
endif
ifdef inOS2
ifndef ECHO
ECHO:=$(strip $(wildcard $(addsuffix /gecho$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO:=$(strip $(wildcard $(addsuffix /echo$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO=echo
else
ECHO:=$(firstword $(ECHO))
endif
else
ECHO:=$(firstword $(ECHO))
endif
endif
export ECHO
endif
override DEFAULT_FPCDIR=..
ifndef FPC
ifdef PP
FPC=$(PP)
endif
endif
ifndef FPC
FPCPROG:=$(strip $(wildcard $(addsuffix /fpc$(SRCEXEEXT),$(SEARCHPATH))))
ifneq ($(FPCPROG),)
FPCPROG:=$(firstword $(FPCPROG))
ifneq ($(CPU_TARGET),)
FPC:=$(shell $(FPCPROG) -P$(CPU_TARGET) -PB)
else
FPC:=$(shell $(FPCPROG) -PB)
endif
ifneq ($(findstring Error,$(FPC)),)
override FPC=$(firstword $(strip $(wildcard $(addsuffix /ppc386$(SRCEXEEXT),$(SEARCHPATH)))))
endif
else
override FPC=$(firstword $(strip $(wildcard $(addsuffix /ppc386$(SRCEXEEXT),$(SEARCHPATH)))))
endif
endif
override FPC:=$(subst $(SRCEXEEXT),,$(FPC))
override FPC:=$(subst \,/,$(FPC))$(SRCEXEEXT)
FOUNDFPC:=$(strip $(wildcard $(FPC)))
ifeq ($(FOUNDFPC),)
FOUNDFPC=$(strip $(wildcard $(addsuffix /$(FPC),$(SEARCHPATH))))
ifeq ($(FOUNDFPC),)
$(error Compiler $(FPC) not found)
endif
endif
ifndef FPC_COMPILERINFO
FPC_COMPILERINFO:=$(shell $(FPC) -iVSPTPSOTO)
endif
ifndef FPC_VERSION
FPC_VERSION:=$(word 1,$(FPC_COMPILERINFO))
endif
export FPC FPC_VERSION FPC_COMPILERINFO
unexport CHECKDEPEND ALLDEPENDENCIES
ifndef CPU_TARGET
ifdef CPU_TARGET_DEFAULT
CPU_TARGET=$(CPU_TARGET_DEFAULT)
endif
endif
ifndef OS_TARGET
ifdef OS_TARGET_DEFAULT
OS_TARGET=$(OS_TARGET_DEFAULT)
endif
endif
ifneq ($(words $(FPC_COMPILERINFO)),5)
FPC_COMPILERINFO+=$(shell $(FPC) -iSP)
FPC_COMPILERINFO+=$(shell $(FPC) -iTP)
FPC_COMPILERINFO+=$(shell $(FPC) -iSO)
FPC_COMPILERINFO+=$(shell $(FPC) -iTO)
endif
ifndef CPU_SOURCE
CPU_SOURCE:=$(word 2,$(FPC_COMPILERINFO))
endif
ifndef CPU_TARGET
CPU_TARGET:=$(word 3,$(FPC_COMPILERINFO))
endif
ifndef OS_SOURCE
OS_SOURCE:=$(word 4,$(FPC_COMPILERINFO))
endif
ifndef OS_TARGET
OS_TARGET:=$(word 5,$(FPC_COMPILERINFO))
endif
FULL_TARGET=$(CPU_TARGET)-$(OS_TARGET)
FULL_SOURCE=$(CPU_SOURCE)-$(OS_SOURCE)
ifneq ($(findstring $(OS_SOURCE),$(LIMIT83fs)),)
TARGETSUFFIX=$(OS_TARGET)
SOURCESUFFIX=$(OS_SOURCE)
else
TARGETSUFFIX=$(FULL_TARGET)
SOURCESUFFIX=$(FULL_SOURCE)
endif
ifneq ($(FULL_TARGET),$(FULL_SOURCE))
CROSSCOMPILE=1
endif
ifeq ($(findstring makefile,$(MAKECMDGOALS)),)
ifeq ($(findstring $(FULL_TARGET),$(MAKEFILETARGETS)),)
$(error The Makefile doesn't support target $(FULL_TARGET), please run fpcmake first)
endif
endif
ifneq ($(findstring $(OS_TARGET),$(BSDs)),)
BSDhier=1
endif
ifeq ($(OS_TARGET),linux)
linuxHier=1
endif
export OS_TARGET OS_SOURCE CPU_TARGET CPU_SOURCE FULL_TARGET FULL_SOURCE TARGETSUFFIX SOURCESUFFIX CROSSCOMPILE
ifdef FPCDIR
override FPCDIR:=$(subst \,/,$(FPCDIR))
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR=wrong
endif
else
override FPCDIR=wrong
endif
ifdef DEFAULT_FPCDIR
ifeq ($(FPCDIR),wrong)
override FPCDIR:=$(subst \,/,$(DEFAULT_FPCDIR))
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR=wrong
endif
endif
endif
ifeq ($(FPCDIR),wrong)
ifdef inUnix
override FPCDIR=/usr/local/lib/fpc/$(FPC_VERSION)
ifeq ($(wildcard $(FPCDIR)/units),)
override FPCDIR=/usr/lib/fpc/$(FPC_VERSION)
endif
else
override FPCDIR:=$(subst /$(FPC),,$(firstword $(strip $(wildcard $(addsuffix /$(FPC),$(SEARCHPATH))))))
override FPCDIR:=$(FPCDIR)/..
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR:=$(FPCDIR)/..
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR:=$(BASEDIR)
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR=c:/pp
endif
endif
endif
endif
endif
ifndef CROSSBINDIR
CROSSBINDIR:=$(wildcard $(FPCDIR)/bin/$(TARGETSUFFIX))
endif
ifndef BINUTILSPREFIX
ifndef CROSSBINDIR
ifdef CROSSCOMPILE
BINUTILSPREFIX=$(CPU_TARGET)-$(OS_TARGET)-
endif
endif
endif
UNITSDIR:=$(wildcard $(FPCDIR)/units/$(TARGETSUFFIX))
ifeq ($(UNITSDIR),)
UNITSDIR:=$(wildcard $(FPCDIR)/units/$(OS_TARGET))
endif
PACKAGESDIR:=$(wildcard $(FPCDIR) $(FPCDIR)/packages $(FPCDIR)/packages/base $(FPCDIR)/packages/extra)
ifeq ($(FULL_TARGET),i386-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk  libc  unixutil
endif
ifeq ($(FULL_TARGET),i386-go32v2)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),i386-win32)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  winunits-base winunits-jedi fcl-web ibase mysql zlib oracle odbc postgres sqlite imagemagick gdbint libpng mad tcl opengl gtk2 a52 cdrom fpgtk
endif
ifeq ($(FULL_TARGET),i386-os2)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  zlib libpng x11 tcl fpgtk
endif
ifeq ($(FULL_TARGET),i386-freebsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),i386-beos)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),i386-netbsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),i386-solaris)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),i386-qnx)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),i386-netware)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  zlib
endif
ifeq ($(FULL_TARGET),i386-openbsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc  postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),i386-wdosx)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),i386-darwin)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),i386-emx)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  zlib  libpng x11 tcl fpgtk
endif
ifeq ($(FULL_TARGET),i386-watcom)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),i386-netwlibc)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  zlib
endif
ifeq ($(FULL_TARGET),i386-wince)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web ibase mysql tcl
endif
ifeq ($(FULL_TARGET),i386-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),i386-symbian)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),m68k-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),m68k-freebsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),m68k-netbsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),m68k-amiga)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),m68k-atari)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),m68k-openbsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc  postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),m68k-palmos)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),m68k-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),powerpc-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),powerpc-netbsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),powerpc-amiga)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),powerpc-macos)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),powerpc-darwin)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),powerpc-morphos)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),powerpc-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),sparc-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),sparc-netbsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),sparc-solaris)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),sparc-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),x86_64-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),x86_64-freebsd)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),x86_64-darwin)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),x86_64-win64)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  winunits-base winunits-jedi fcl-web ibase mysql zlib oracle odbc postgres sqlite imagemagick gdbint tcl opengl gtk2 fpgtk
endif
ifeq ($(FULL_TARGET),x86_64-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),arm-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),arm-palmos)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),arm-wince)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web ibase mysql tcl
endif
ifeq ($(FULL_TARGET),arm-gba)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),arm-nds)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),arm-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),arm-symbian)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
ifeq ($(FULL_TARGET),powerpc64-linux)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl cairo gtk2 a52 bfd aspell svgalib newt cdrom users hermes imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),powerpc64-darwin)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm  fcl-web fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk2 bfd aspell svgalib imlib utmp hermes fpgtk
endif
ifeq ($(FULL_TARGET),powerpc64-embedded)
override TARGET_DIRS+=base fv hash pasjpeg paszlib fpmkunit fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-xml fcl-fpcunit fcl-json extra fcl-process unzip regexpr chm
endif
override INSTALL_FPCPACKAGE=y
override INSTALL_FPCSUBDIR=packages
ifdef REQUIRE_UNITSDIR
override UNITSDIR+=$(REQUIRE_UNITSDIR)
endif
ifdef REQUIRE_PACKAGESDIR
override PACKAGESDIR+=$(REQUIRE_PACKAGESDIR)
endif
ifdef ZIPINSTALL
ifneq ($(findstring $(OS_TARGET),$(UNIXs)),)
UNIXHier=1
endif
else
ifneq ($(findstring $(OS_SOURCE),$(UNIXs)),)
UNIXHier=1
endif
endif
ifndef INSTALL_PREFIX
ifdef PREFIX
INSTALL_PREFIX=$(PREFIX)
endif
endif
ifndef INSTALL_PREFIX
ifdef UNIXHier
INSTALL_PREFIX=/usr/local
else
ifdef INSTALL_FPCPACKAGE
INSTALL_BASEDIR:=/pp
else
INSTALL_BASEDIR:=/$(PACKAGE_NAME)
endif
endif
endif
export INSTALL_PREFIX
ifdef INSTALL_FPCSUBDIR
export INSTALL_FPCSUBDIR
endif
ifndef DIST_DESTDIR
DIST_DESTDIR:=$(BASEDIR)
endif
export DIST_DESTDIR
ifndef COMPILER_UNITTARGETDIR
ifdef PACKAGEDIR_MAIN
COMPILER_UNITTARGETDIR=$(PACKAGEDIR_MAIN)/units/$(TARGETSUFFIX)
else
COMPILER_UNITTARGETDIR=units/$(TARGETSUFFIX)
endif
endif
ifndef COMPILER_TARGETDIR
COMPILER_TARGETDIR=.
endif
ifndef INSTALL_BASEDIR
ifdef UNIXHier
ifdef INSTALL_FPCPACKAGE
INSTALL_BASEDIR:=$(INSTALL_PREFIX)/lib/fpc/$(FPC_VERSION)
else
INSTALL_BASEDIR:=$(INSTALL_PREFIX)/lib/$(PACKAGE_NAME)
endif
else
INSTALL_BASEDIR:=$(INSTALL_PREFIX)
endif
endif
ifndef INSTALL_BINDIR
ifdef UNIXHier
INSTALL_BINDIR:=$(INSTALL_PREFIX)/bin
else
INSTALL_BINDIR:=$(INSTALL_BASEDIR)/bin
ifdef INSTALL_FPCPACKAGE
ifdef CROSSCOMPILE
ifdef CROSSINSTALL
INSTALL_BINDIR:=$(INSTALL_BINDIR)/$(SOURCESUFFIX)
else
INSTALL_BINDIR:=$(INSTALL_BINDIR)/$(TARGETSUFFIX)
endif
else
INSTALL_BINDIR:=$(INSTALL_BINDIR)/$(TARGETSUFFIX)
endif
endif
endif
endif
ifndef INSTALL_UNITDIR
INSTALL_UNITDIR:=$(INSTALL_BASEDIR)/units/$(TARGETSUFFIX)
ifdef INSTALL_FPCPACKAGE
ifdef PACKAGE_NAME
INSTALL_UNITDIR:=$(INSTALL_UNITDIR)/$(PACKAGE_NAME)
endif
endif
endif
ifndef INSTALL_LIBDIR
ifdef UNIXHier
INSTALL_LIBDIR:=$(INSTALL_PREFIX)/lib
else
INSTALL_LIBDIR:=$(INSTALL_UNITDIR)
endif
endif
ifndef INSTALL_SOURCEDIR
ifdef UNIXHier
ifdef BSDhier
SRCPREFIXDIR=share/src
else
ifdef linuxHier
SRCPREFIXDIR=share/src
else
SRCPREFIXDIR=src
endif
endif
ifdef INSTALL_FPCPACKAGE
ifdef INSTALL_FPCSUBDIR
INSTALL_SOURCEDIR:=$(INSTALL_PREFIX)/$(SRCPREFIXDIR)/fpc-$(FPC_VERSION)/$(INSTALL_FPCSUBDIR)/$(PACKAGE_NAME)
else
INSTALL_SOURCEDIR:=$(INSTALL_PREFIX)/$(SRCPREFIXDIR)/fpc-$(FPC_VERSION)/$(PACKAGE_NAME)
endif
else
INSTALL_SOURCEDIR:=$(INSTALL_PREFIX)/$(SRCPREFIXDIR)/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
endif
else
ifdef INSTALL_FPCPACKAGE
ifdef INSTALL_FPCSUBDIR
INSTALL_SOURCEDIR:=$(INSTALL_BASEDIR)/source/$(INSTALL_FPCSUBDIR)/$(PACKAGE_NAME)
else
INSTALL_SOURCEDIR:=$(INSTALL_BASEDIR)/source/$(PACKAGE_NAME)
endif
else
INSTALL_SOURCEDIR:=$(INSTALL_BASEDIR)/source
endif
endif
endif
ifndef INSTALL_DOCDIR
ifdef UNIXHier
ifdef BSDhier
DOCPREFIXDIR=share/doc
else
ifdef linuxHier
DOCPREFIXDIR=share/doc
else
DOCPREFIXDIR=doc
endif
endif
ifdef INSTALL_FPCPACKAGE
INSTALL_DOCDIR:=$(INSTALL_PREFIX)/$(DOCPREFIXDIR)/fpc-$(FPC_VERSION)/$(PACKAGE_NAME)
else
INSTALL_DOCDIR:=$(INSTALL_PREFIX)/$(DOCPREFIXDIR)/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
endif
else
ifdef INSTALL_FPCPACKAGE
INSTALL_DOCDIR:=$(INSTALL_BASEDIR)/doc/$(PACKAGE_NAME)
else
INSTALL_DOCDIR:=$(INSTALL_BASEDIR)/doc
endif
endif
endif
ifndef INSTALL_EXAMPLEDIR
ifdef UNIXHier
ifdef INSTALL_FPCPACKAGE
ifdef BSDhier
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/share/examples/fpc-$(FPC_VERSION)/$(PACKAGE_NAME)
else
ifdef linuxHier
INSTALL_EXAMPLEDIR:=$(INSTALL_DOCDIR)/examples
else
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/doc/fpc-$(FPC_VERSION)/examples/$(PACKAGE_NAME)
endif
endif
else
ifdef BSDhier
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/share/examples/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
else
ifdef linuxHier
INSTALL_EXAMPLEDIR:=$(INSTALL_DOCDIR)/examples/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
else
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/doc/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
endif
endif
endif
else
ifdef INSTALL_FPCPACKAGE
INSTALL_EXAMPLEDIR:=$(INSTALL_BASEDIR)/examples/$(PACKAGE_NAME)
else
INSTALL_EXAMPLEDIR:=$(INSTALL_BASEDIR)/examples
endif
endif
endif
ifndef INSTALL_DATADIR
INSTALL_DATADIR=$(INSTALL_BASEDIR)
endif
ifndef INSTALL_SHAREDDIR
INSTALL_SHAREDDIR=$(INSTALL_PREFIX)/lib
endif
ifdef CROSSCOMPILE
ifndef CROSSBINDIR
CROSSBINDIR:=$(wildcard $(CROSSTARGETDIR)/bin/$(SOURCESUFFIX))
ifeq ($(CROSSBINDIR),)
CROSSBINDIR:=$(wildcard $(INSTALL_BASEDIR)/cross/$(TARGETSUFFIX)/bin/$(FULL_SOURCE))
endif
endif
else
CROSSBINDIR=
endif
BATCHEXT=.bat
LOADEREXT=.as
EXEEXT=.exe
PPLEXT=.ppl
PPUEXT=.ppu
OEXT=.o
ASMEXT=.s
SMARTEXT=.sl
STATICLIBEXT=.a
SHAREDLIBEXT=.so
SHAREDLIBPREFIX=libfp
STATICLIBPREFIX=libp
IMPORTLIBPREFIX=libimp
RSTEXT=.rst
ifeq ($(findstring 1.0.,$(FPC_VERSION)),)
ifeq ($(OS_TARGET),go32v1)
STATICLIBPREFIX=
SHORTSUFFIX=v1
endif
ifeq ($(OS_TARGET),go32v2)
STATICLIBPREFIX=
SHORTSUFFIX=dos
endif
ifeq ($(OS_TARGET),watcom)
STATICLIBPREFIX=
OEXT=.obj
ASMEXT=.asm
SHAREDLIBEXT=.dll
SHORTSUFFIX=wat
endif
ifeq ($(OS_TARGET),linux)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=lnx
endif
ifeq ($(OS_TARGET),freebsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=fbs
endif
ifeq ($(OS_TARGET),netbsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=nbs
endif
ifeq ($(OS_TARGET),openbsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=obs
endif
ifeq ($(OS_TARGET),win32)
SHAREDLIBEXT=.dll
SHORTSUFFIX=w32
endif
ifeq ($(OS_TARGET),os2)
BATCHEXT=.cmd
AOUTEXT=.out
STATICLIBPREFIX=
SHAREDLIBEXT=.dll
SHORTSUFFIX=os2
ECHO=echo
endif
ifeq ($(OS_TARGET),emx)
BATCHEXT=.cmd
AOUTEXT=.out
STATICLIBPREFIX=
SHAREDLIBEXT=.dll
SHORTSUFFIX=emx
ECHO=echo
endif
ifeq ($(OS_TARGET),amiga)
EXEEXT=
SHAREDLIBEXT=.library
SHORTSUFFIX=amg
endif
ifeq ($(OS_TARGET),morphos)
EXEEXT=
SHAREDLIBEXT=.library
SHORTSUFFIX=mos
endif
ifeq ($(OS_TARGET),atari)
EXEEXT=.ttp
SHORTSUFFIX=ata
endif
ifeq ($(OS_TARGET),beos)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=be
endif
ifeq ($(OS_TARGET),solaris)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=sun
endif
ifeq ($(OS_TARGET),qnx)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=qnx
endif
ifeq ($(OS_TARGET),netware)
EXEEXT=.nlm
STATICLIBPREFIX=
SHORTSUFFIX=nw
endif
ifeq ($(OS_TARGET),netwlibc)
EXEEXT=.nlm
STATICLIBPREFIX=
SHORTSUFFIX=nwl
endif
ifeq ($(OS_TARGET),macos)
BATCHEXT=
EXEEXT=
DEBUGSYMEXT=.xcoff
SHORTSUFFIX=mac
endif
ifeq ($(OS_TARGET),darwin)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=dwn
endif
ifeq ($(OS_TARGET),gba)
EXEEXT=.gba
SHAREDLIBEXT=.so
SHORTSUFFIX=gba
endif
ifeq ($(OS_TARGET),symbian)
SHAREDLIBEXT=.dll
SHORTSUFFIX=symbian
endif
else
ifeq ($(OS_TARGET),go32v1)
PPUEXT=.pp1
OEXT=.o1
ASMEXT=.s1
SMARTEXT=.sl1
STATICLIBEXT=.a1
SHAREDLIBEXT=.so1
STATICLIBPREFIX=
SHORTSUFFIX=v1
endif
ifeq ($(OS_TARGET),go32v2)
STATICLIBPREFIX=
SHORTSUFFIX=dos
endif
ifeq ($(OS_TARGET),watcom)
STATICLIBPREFIX=
SHORTSUFFIX=wat
endif
ifeq ($(OS_TARGET),linux)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=lnx
endif
ifeq ($(OS_TARGET),freebsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=fbs
endif
ifeq ($(OS_TARGET),netbsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=nbs
endif
ifeq ($(OS_TARGET),openbsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=obs
endif
ifeq ($(OS_TARGET),win32)
PPUEXT=.ppw
OEXT=.ow
ASMEXT=.sw
SMARTEXT=.slw
STATICLIBEXT=.aw
SHAREDLIBEXT=.dll
SHORTSUFFIX=w32
endif
ifeq ($(OS_TARGET),os2)
BATCHEXT=.cmd
PPUEXT=.ppo
ASMEXT=.so2
OEXT=.oo2
AOUTEXT=.out
SMARTEXT=.sl2
STATICLIBPREFIX=
STATICLIBEXT=.ao2
SHAREDLIBEXT=.dll
SHORTSUFFIX=os2
ECHO=echo
endif
ifeq ($(OS_TARGET),amiga)
EXEEXT=
PPUEXT=.ppu
ASMEXT=.s
OEXT=.o
SMARTEXT=.sl
STATICLIBEXT=.a
SHAREDLIBEXT=.library
SHORTSUFFIX=amg
endif
ifeq ($(OS_TARGET),atari)
PPUEXT=.ppu
ASMEXT=.s
OEXT=.o
SMARTEXT=.sl
STATICLIBEXT=.a
EXEEXT=.ttp
SHORTSUFFIX=ata
endif
ifeq ($(OS_TARGET),beos)
BATCHEXT=.sh
PPUEXT=.ppu
ASMEXT=.s
OEXT=.o
SMARTEXT=.sl
STATICLIBEXT=.a
EXEEXT=
SHORTSUFFIX=be
endif
ifeq ($(OS_TARGET),solaris)
BATCHEXT=.sh
PPUEXT=.ppu
ASMEXT=.s
OEXT=.o
SMARTEXT=.sl
STATICLIBEXT=.a
EXEEXT=
SHORTSUFFIX=sun
endif
ifeq ($(OS_TARGET),qnx)
BATCHEXT=.sh
PPUEXT=.ppu
ASMEXT=.s
OEXT=.o
SMARTEXT=.sl
STATICLIBEXT=.a
EXEEXT=
SHORTSUFFIX=qnx
endif
ifeq ($(OS_TARGET),netware)
STATICLIBPREFIX=
PPUEXT=.ppu
OEXT=.o
ASMEXT=.s
SMARTEXT=.sl
STATICLIBEXT=.a
SHAREDLIBEXT=.nlm
EXEEXT=.nlm
SHORTSUFFIX=nw
endif
ifeq ($(OS_TARGET),netwlibc)
STATICLIBPREFIX=
PPUEXT=.ppu
OEXT=.o
ASMEXT=.s
SMARTEXT=.sl
STATICLIBEXT=.a
SHAREDLIBEXT=.nlm
EXEEXT=.nlm
SHORTSUFFIX=nwl
endif
ifeq ($(OS_TARGET),macos)
BATCHEXT=
PPUEXT=.ppu
ASMEXT=.s
OEXT=.o
SMARTEXT=.sl
STATICLIBEXT=.a
EXEEXT=
DEBUGSYMEXT=.xcoff
SHORTSUFFIX=mac
endif
endif
ifneq ($(findstring $(OS_SOURCE),$(LIMIT83fs)),)
FPCMADE=fpcmade.$(SHORTSUFFIX)
ZIPSUFFIX=$(SHORTSUFFIX)
ZIPCROSSPREFIX=
ZIPSOURCESUFFIX=src
ZIPEXAMPLESUFFIX=exm
else
FPCMADE=fpcmade.$(TARGETSUFFIX)
ZIPSOURCESUFFIX=.source
ZIPEXAMPLESUFFIX=.examples
ifdef CROSSCOMPILE
ZIPSUFFIX=.$(SOURCESUFFIX)
ZIPCROSSPREFIX=$(TARGETSUFFIX)-
else
ZIPSUFFIX=.$(TARGETSUFFIX)
ZIPCROSSPREFIX=
endif
endif
ifndef ECHO
ECHO:=$(strip $(wildcard $(addsuffix /gecho$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO:=$(strip $(wildcard $(addsuffix /echo$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO= __missing_command_ECHO
else
ECHO:=$(firstword $(ECHO))
endif
else
ECHO:=$(firstword $(ECHO))
endif
endif
export ECHO
ifndef DATE
DATE:=$(strip $(wildcard $(addsuffix /gdate$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(DATE),)
DATE:=$(strip $(wildcard $(addsuffix /date$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(DATE),)
DATE= __missing_command_DATE
else
DATE:=$(firstword $(DATE))
endif
else
DATE:=$(firstword $(DATE))
endif
endif
export DATE
ifndef GINSTALL
GINSTALL:=$(strip $(wildcard $(addsuffix /ginstall$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(GINSTALL),)
GINSTALL:=$(strip $(wildcard $(addsuffix /install$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(GINSTALL),)
GINSTALL= __missing_command_GINSTALL
else
GINSTALL:=$(firstword $(GINSTALL))
endif
else
GINSTALL:=$(firstword $(GINSTALL))
endif
endif
export GINSTALL
ifndef CPPROG
CPPROG:=$(strip $(wildcard $(addsuffix /cp$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(CPPROG),)
CPPROG= __missing_command_CPPROG
else
CPPROG:=$(firstword $(CPPROG))
endif
endif
export CPPROG
ifndef RMPROG
RMPROG:=$(strip $(wildcard $(addsuffix /rm$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(RMPROG),)
RMPROG= __missing_command_RMPROG
else
RMPROG:=$(firstword $(RMPROG))
endif
endif
export RMPROG
ifndef MVPROG
MVPROG:=$(strip $(wildcard $(addsuffix /mv$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(MVPROG),)
MVPROG= __missing_command_MVPROG
else
MVPROG:=$(firstword $(MVPROG))
endif
endif
export MVPROG
ifndef MKDIRPROG
MKDIRPROG:=$(strip $(wildcard $(addsuffix /gmkdir$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(MKDIRPROG),)
MKDIRPROG:=$(strip $(wildcard $(addsuffix /mkdir$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(MKDIRPROG),)
MKDIRPROG= __missing_command_MKDIRPROG
else
MKDIRPROG:=$(firstword $(MKDIRPROG))
endif
else
MKDIRPROG:=$(firstword $(MKDIRPROG))
endif
endif
export MKDIRPROG
ifndef ECHOREDIR
ifndef inUnix
ECHOREDIR=echo
else
ECHOREDIR=$(ECHO)
endif
endif
ifndef COPY
COPY:=$(CPPROG) -fp
endif
ifndef COPYTREE
COPYTREE:=$(CPPROG) -Rfp
endif
ifndef MKDIRTREE
MKDIRTREE:=$(MKDIRPROG) -p
endif
ifndef MOVE
MOVE:=$(MVPROG) -f
endif
ifndef DEL
DEL:=$(RMPROG) -f
endif
ifndef DELTREE
DELTREE:=$(RMPROG) -rf
endif
ifndef INSTALL
ifdef inUnix
INSTALL:=$(GINSTALL) -c -m 644
else
INSTALL:=$(COPY)
endif
endif
ifndef INSTALLEXE
ifdef inUnix
INSTALLEXE:=$(GINSTALL) -c -m 755
else
INSTALLEXE:=$(COPY)
endif
endif
ifndef MKDIR
MKDIR:=$(GINSTALL) -m 755 -d
endif
export ECHOREDIR COPY COPYTREE MOVE DEL DELTREE INSTALL INSTALLEXE MKDIR
ifndef PPUMOVE
PPUMOVE:=$(strip $(wildcard $(addsuffix /ppumove$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(PPUMOVE),)
PPUMOVE= __missing_command_PPUMOVE
else
PPUMOVE:=$(firstword $(PPUMOVE))
endif
endif
export PPUMOVE
ifndef FPCMAKE
FPCMAKE:=$(strip $(wildcard $(addsuffix /fpcmake$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(FPCMAKE),)
FPCMAKE= __missing_command_FPCMAKE
else
FPCMAKE:=$(firstword $(FPCMAKE))
endif
endif
export FPCMAKE
ifndef ZIPPROG
ZIPPROG:=$(strip $(wildcard $(addsuffix /zip$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ZIPPROG),)
ZIPPROG= __missing_command_ZIPPROG
else
ZIPPROG:=$(firstword $(ZIPPROG))
endif
endif
export ZIPPROG
ifndef TARPROG
TARPROG:=$(strip $(wildcard $(addsuffix /gtar$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(TARPROG),)
TARPROG:=$(strip $(wildcard $(addsuffix /tar$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(TARPROG),)
TARPROG= __missing_command_TARPROG
else
TARPROG:=$(firstword $(TARPROG))
endif
else
TARPROG:=$(firstword $(TARPROG))
endif
endif
export TARPROG
ASNAME=$(BINUTILSPREFIX)as
LDNAME=$(BINUTILSPREFIX)ld
ARNAME=$(BINUTILSPREFIX)ar
RCNAME=$(BINUTILSPREFIX)rc
ifneq ($(findstring 1.0.,$(FPC_VERSION)),)
ifeq ($(OS_TARGET),win32)
ifeq ($(CROSSBINDIR),)
ASNAME=asw
LDNAME=ldw
ARNAME=arw
endif
endif
endif
ifndef ASPROG
ifdef CROSSBINDIR
ASPROG=$(CROSSBINDIR)/$(ASNAME)$(SRCEXEEXT)
else
ASPROG=$(ASNAME)
endif
endif
ifndef LDPROG
ifdef CROSSBINDIR
LDPROG=$(CROSSBINDIR)/$(LDNAME)$(SRCEXEEXT)
else
LDPROG=$(LDNAME)
endif
endif
ifndef RCPROG
ifdef CROSSBINDIR
RCPROG=$(CROSSBINDIR)/$(RCNAME)$(SRCEXEEXT)
else
RCPROG=$(RCNAME)
endif
endif
ifndef ARPROG
ifdef CROSSBINDIR
ARPROG=$(CROSSBINDIR)/$(ARNAME)$(SRCEXEEXT)
else
ARPROG=$(ARNAME)
endif
endif
AS=$(ASPROG)
LD=$(LDPROG)
RC=$(RCPROG)
AR=$(ARPROG)
PPAS=ppas$(SRCBATCHEXT)
ifdef inUnix
LDCONFIG=ldconfig
else
LDCONFIG=
endif
ifdef DATE
DATESTR:=$(shell $(DATE) +%Y%m%d)
else
DATESTR=
endif
ifndef UPXPROG
ifeq ($(OS_TARGET),go32v2)
UPXPROG:=1
endif
ifeq ($(OS_TARGET),win32)
UPXPROG:=1
endif
ifdef UPXPROG
UPXPROG:=$(strip $(wildcard $(addsuffix /upx$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(UPXPROG),)
UPXPROG=
else
UPXPROG:=$(firstword $(UPXPROG))
endif
else
UPXPROG=
endif
endif
export UPXPROG
ZIPOPT=-9
ZIPEXT=.zip
ifeq ($(USETAR),bz2)
TAROPT=vj
TAREXT=.tar.bz2
else
TAROPT=vz
TAREXT=.tar.gz
endif
ifndef NOCPUDEF
override FPCOPTDEF=$(CPU_TARGET)
endif
ifneq ($(OS_TARGET),$(OS_SOURCE))
override FPCOPT+=-T$(OS_TARGET)
endif
ifneq ($(CPU_TARGET),$(CPU_SOURCE))
override FPCOPT+=-P$(CPU_TARGET)
endif
ifeq ($(OS_SOURCE),openbsd)
override FPCOPT+=-FD$(NEW_BINUTILS_PATH)
endif
ifndef CROSSBOOTSTRAP
ifneq ($(BINUTILSPREFIX),)
override FPCOPT+=-XP$(BINUTILSPREFIX)
endif
ifneq ($(BINUTILSPREFIX),)
override FPCOPT+=-Xr$(RLINKPATH)
endif
endif
ifdef UNITDIR
override FPCOPT+=$(addprefix -Fu,$(UNITDIR))
endif
ifdef LIBDIR
override FPCOPT+=$(addprefix -Fl,$(LIBDIR))
endif
ifdef OBJDIR
override FPCOPT+=$(addprefix -Fo,$(OBJDIR))
endif
ifdef INCDIR
override FPCOPT+=$(addprefix -Fi,$(INCDIR))
endif
ifdef LINKSMART
override FPCOPT+=-XX
endif
ifdef CREATESMART
override FPCOPT+=-CX
endif
ifdef DEBUG
override FPCOPT+=-gl
override FPCOPTDEF+=DEBUG
endif
ifdef RELEASE
ifneq ($(findstring 2.0.,$(FPC_VERSION)),)
ifeq ($(CPU_TARGET),i386)
FPCCPUOPT:=-OG2p3
endif
ifeq ($(CPU_TARGET),powerpc)
FPCCPUOPT:=-O1r
endif
else
FPCCPUOPT:=-O2
endif
override FPCOPT+=-Ur -Xs $(FPCCPUOPT) -n
override FPCOPTDEF+=RELEASE
endif
ifdef STRIP
override FPCOPT+=-Xs
endif
ifdef OPTIMIZE
override FPCOPT+=-O2
endif
ifdef VERBOSE
override FPCOPT+=-vwni
endif
ifdef COMPILER_OPTIONS
override FPCOPT+=$(COMPILER_OPTIONS)
endif
ifdef COMPILER_UNITDIR
override FPCOPT+=$(addprefix -Fu,$(COMPILER_UNITDIR))
endif
ifdef COMPILER_LIBRARYDIR
override FPCOPT+=$(addprefix -Fl,$(COMPILER_LIBRARYDIR))
endif
ifdef COMPILER_OBJECTDIR
override FPCOPT+=$(addprefix -Fo,$(COMPILER_OBJECTDIR))
endif
ifdef COMPILER_INCLUDEDIR
override FPCOPT+=$(addprefix -Fi,$(COMPILER_INCLUDEDIR))
endif
ifdef CROSSBINDIR
override FPCOPT+=-FD$(CROSSBINDIR)
endif
ifdef COMPILER_TARGETDIR
override FPCOPT+=-FE$(COMPILER_TARGETDIR)
ifeq ($(COMPILER_TARGETDIR),.)
override TARGETDIRPREFIX=
else
override TARGETDIRPREFIX=$(COMPILER_TARGETDIR)/
endif
endif
ifdef COMPILER_UNITTARGETDIR
override FPCOPT+=-FU$(COMPILER_UNITTARGETDIR)
ifeq ($(COMPILER_UNITTARGETDIR),.)
override UNITTARGETDIRPREFIX=
else
override UNITTARGETDIRPREFIX=$(COMPILER_UNITTARGETDIR)/
endif
else
ifdef COMPILER_TARGETDIR
override COMPILER_UNITTARGETDIR=$(COMPILER_TARGETDIR)
override UNITTARGETDIRPREFIX=$(TARGETDIRPREFIX)
endif
endif
ifdef CREATESHARED
override FPCOPT+=-Cg
ifeq ($(CPU_TARGET),i386)
override FPCOPT+=-Aas
endif
endif
ifeq ($(findstring 2.0.,$(FPC_VERSION)),)
ifeq ($(OS_TARGET),linux)
ifeq ($(CPU_TARGET),x86_64)
override FPCOPT+=-Cg
endif
endif
endif
ifdef LINKSHARED
endif
ifdef OPT
override FPCOPT+=$(OPT)
endif
ifdef FPCOPTDEF
override FPCOPT+=$(addprefix -d,$(FPCOPTDEF))
endif
ifdef CFGFILE
override FPCOPT+=@$(CFGFILE)
endif
ifdef USEENV
override FPCEXTCMD:=$(FPCOPT)
override FPCOPT:=!FPCEXTCMD
export FPCEXTCMD
endif
override AFULL_TARGET=$(CPU_TARGET)-$(OS_TARGET)
override AFULL_SOURCE=$(CPU_SOURCE)-$(OS_SOURCE)
ifneq ($(AFULL_TARGET),$(AFULL_SOURCE))
override ACROSSCOMPILE=1
endif
ifdef ACROSSCOMPILE
override FPCOPT+=$(CROSSOPT)
endif
override COMPILER:=$(FPC) $(FPCOPT)
ifeq (,$(findstring -s ,$(COMPILER)))
EXECPPAS=
else
ifeq ($(FULL_SOURCE),$(FULL_TARGET))
ifdef RUNBATCH
EXECPPAS:=@$(RUNBATCH) $(PPAS)
else
EXECPPAS:=@$(PPAS)
endif
endif
endif
ifdef TARGET_RSTS
override RSTFILES=$(addsuffix $(RSTEXT),$(TARGET_RSTS))
override CLEANRSTFILES+=$(RSTFILES)
endif
.PHONY: fpc_clean fpc_cleanall fpc_distclean
ifdef EXEFILES
override CLEANEXEFILES:=$(addprefix $(TARGETDIRPREFIX),$(CLEANEXEFILES))
endif
ifdef CLEAN_UNITS
override CLEANPPUFILES+=$(addsuffix $(PPUEXT),$(CLEAN_UNITS))
endif
ifdef CLEANPPUFILES
override CLEANPPULINKFILES:=$(subst $(PPUEXT),$(OEXT),$(CLEANPPUFILES)) $(addprefix $(STATICLIBPREFIX),$(subst $(PPUEXT),$(STATICLIBEXT),$(CLEANPPUFILES))) $(addprefix $(IMPORTLIBPREFIX),$(subst $(PPUEXT),$(STATICLIBEXT),$(CLEANPPUFILES)))
ifdef DEBUGSYMEXT
override CLEANPPULINKFILES+=$(subst $(PPUEXT),$(DEBUGSYMEXT),$(CLEANPPUFILES))
endif
override CLEANPPUFILES:=$(addprefix $(UNITTARGETDIRPREFIX),$(CLEANPPUFILES))
override CLEANPPULINKFILES:=$(wildcard $(addprefix $(UNITTARGETDIRPREFIX),$(CLEANPPULINKFILES)))
endif
fpc_clean: $(CLEANTARGET)
ifdef CLEANEXEFILES
	-$(DEL) $(CLEANEXEFILES)
endif
ifdef CLEANPPUFILES
	-$(DEL) $(CLEANPPUFILES)
endif
ifneq ($(CLEANPPULINKFILES),)
	-$(DEL) $(CLEANPPULINKFILES)
endif
ifdef CLEANRSTFILES
	-$(DEL) $(addprefix $(UNITTARGETDIRPREFIX),$(CLEANRSTFILES))
endif
ifdef CLEAN_FILES
	-$(DEL) $(CLEAN_FILES)
endif
ifdef LIB_NAME
	-$(DEL) $(LIB_NAME) $(LIB_FULLNAME)
endif
	-$(DEL) $(FPCMADE) Package.fpc $(PPAS) script.res link.res $(FPCEXTFILE) $(REDIRFILE)
	-$(DEL) *$(ASMEXT) *_ppas$(BATCHEXT)
fpc_cleanall: $(CLEANTARGET)
ifdef CLEANEXEFILES
	-$(DEL) $(CLEANEXEFILES)
endif
ifdef COMPILER_UNITTARGETDIR
ifdef CLEANPPUFILES
	-$(DEL) $(CLEANPPUFILES)
endif
ifneq ($(CLEANPPULINKFILES),)
	-$(DEL) $(CLEANPPULINKFILES)
endif
ifdef CLEANRSTFILES
	-$(DEL) $(addprefix $(UNITTARGETDIRPREFIX),$(CLEANRSTFILES))
endif
endif
	-$(DELTREE) units
	-$(DEL) *$(OEXT) *$(PPUEXT) *$(RSTEXT) *$(ASMEXT) *$(STATICLIBEXT) *$(SHAREDLIBEXT) *$(PPLEXT)
ifneq ($(PPUEXT),.ppu)
	-$(DEL) *.o *.ppu *.a
endif
	-$(DELTREE) *$(SMARTEXT)
	-$(DEL) fpcmade.* Package.fpc $(PPAS) script.res link.res $(FPCEXTFILE) $(REDIRFILE)
	-$(DEL) *_ppas$(BATCHEXT)
ifdef AOUTEXT
	-$(DEL) *$(AOUTEXT)
endif
ifdef DEBUGSYMEXT
	-$(DEL) *$(DEBUGSYMEXT)
endif
fpc_distclean: cleanall
.PHONY: fpc_baseinfo
override INFORULES+=fpc_baseinfo
fpc_baseinfo:
	@$(ECHO)
	@$(ECHO)  == Package info ==
	@$(ECHO)  Package Name..... $(PACKAGE_NAME)
	@$(ECHO)  Package Version.. $(PACKAGE_VERSION)
	@$(ECHO)
	@$(ECHO)  == Configuration info ==
	@$(ECHO)
	@$(ECHO)  FPC.......... $(FPC)
	@$(ECHO)  FPC Version.. $(FPC_VERSION)
	@$(ECHO)  Source CPU... $(CPU_SOURCE)
	@$(ECHO)  Target CPU... $(CPU_TARGET)
	@$(ECHO)  Source OS.... $(OS_SOURCE)
	@$(ECHO)  Target OS.... $(OS_TARGET)
	@$(ECHO)  Full Source.. $(FULL_SOURCE)
	@$(ECHO)  Full Target.. $(FULL_TARGET)
	@$(ECHO)  SourceSuffix. $(SOURCESUFFIX)
	@$(ECHO)  TargetSuffix. $(TARGETSUFFIX)
	@$(ECHO)
	@$(ECHO)  == Directory info ==
	@$(ECHO)
	@$(ECHO)  Required pkgs... $(REQUIRE_PACKAGES)
	@$(ECHO)
	@$(ECHO)  Basedir......... $(BASEDIR)
	@$(ECHO)  FPCDir.......... $(FPCDIR)
	@$(ECHO)  CrossBinDir..... $(CROSSBINDIR)
	@$(ECHO)  UnitsDir........ $(UNITSDIR)
	@$(ECHO)  PackagesDir..... $(PACKAGESDIR)
	@$(ECHO)
	@$(ECHO)  GCC library..... $(GCCLIBDIR)
	@$(ECHO)  Other library... $(OTHERLIBDIR)
	@$(ECHO)
	@$(ECHO)  == Tools info ==
	@$(ECHO)
	@$(ECHO)  As........ $(AS)
	@$(ECHO)  Ld........ $(LD)
	@$(ECHO)  Ar........ $(AR)
	@$(ECHO)  Rc........ $(RC)
	@$(ECHO)
	@$(ECHO)  Mv........ $(MVPROG)
	@$(ECHO)  Cp........ $(CPPROG)
	@$(ECHO)  Rm........ $(RMPROG)
	@$(ECHO)  GInstall.. $(GINSTALL)
	@$(ECHO)  Echo...... $(ECHO)
	@$(ECHO)  Shell..... $(SHELL)
	@$(ECHO)  Date...... $(DATE)
	@$(ECHO)  FPCMake... $(FPCMAKE)
	@$(ECHO)  PPUMove... $(PPUMOVE)
	@$(ECHO)  Upx....... $(UPXPROG)
	@$(ECHO)  Zip....... $(ZIPPROG)
	@$(ECHO)
	@$(ECHO)  == Object info ==
	@$(ECHO)
	@$(ECHO)  Target Loaders........ $(TARGET_LOADERS)
	@$(ECHO)  Target Units.......... $(TARGET_UNITS)
	@$(ECHO)  Target Implicit Units. $(TARGET_IMPLICITUNITS)
	@$(ECHO)  Target Programs....... $(TARGET_PROGRAMS)
	@$(ECHO)  Target Dirs........... $(TARGET_DIRS)
	@$(ECHO)  Target Examples....... $(TARGET_EXAMPLES)
	@$(ECHO)  Target ExampleDirs.... $(TARGET_EXAMPLEDIRS)
	@$(ECHO)
	@$(ECHO)  Clean Units......... $(CLEAN_UNITS)
	@$(ECHO)  Clean Files......... $(CLEAN_FILES)
	@$(ECHO)
	@$(ECHO)  Install Units....... $(INSTALL_UNITS)
	@$(ECHO)  Install Files....... $(INSTALL_FILES)
	@$(ECHO)
	@$(ECHO)  == Install info ==
	@$(ECHO)
	@$(ECHO)  DateStr.............. $(DATESTR)
	@$(ECHO)  ZipName.............. $(ZIPNAME)
	@$(ECHO)  ZipPrefix............ $(ZIPPREFIX)
	@$(ECHO)  ZipCrossPrefix....... $(ZIPCROSSPREFIX)
	@$(ECHO)  ZipSuffix............ $(ZIPSUFFIX)
	@$(ECHO)  FullZipName.......... $(FULLZIPNAME)
	@$(ECHO)  Install FPC Package.. $(INSTALL_FPCPACKAGE)
	@$(ECHO)
	@$(ECHO)  Install base dir..... $(INSTALL_BASEDIR)
	@$(ECHO)  Install binary dir... $(INSTALL_BINDIR)
	@$(ECHO)  Install library dir.. $(INSTALL_LIBDIR)
	@$(ECHO)  Install units dir.... $(INSTALL_UNITDIR)
	@$(ECHO)  Install source dir... $(INSTALL_SOURCEDIR)
	@$(ECHO)  Install doc dir...... $(INSTALL_DOCDIR)
	@$(ECHO)  Install example dir.. $(INSTALL_EXAMPLEDIR)
	@$(ECHO)  Install data dir..... $(INSTALL_DATADIR)
	@$(ECHO)
	@$(ECHO)  Dist destination dir. $(DIST_DESTDIR)
	@$(ECHO)  Dist zip name........ $(DIST_ZIPNAME)
	@$(ECHO)
.PHONY: fpc_info
fpc_info: $(INFORULES)
.PHONY: fpc_makefile fpc_makefiles fpc_makefile_sub1 fpc_makefile_sub2 \
	fpc_makefile_dirs
fpc_makefile:
	$(FPCMAKE) -w -T$(OS_TARGET) Makefile.fpc
fpc_makefile_sub1:
ifdef TARGET_DIRS
	$(FPCMAKE) -w -T$(OS_TARGET) $(addsuffix /Makefile.fpc,$(TARGET_DIRS))
endif
ifdef TARGET_EXAMPLEDIRS
	$(FPCMAKE) -w -T$(OS_TARGET) $(addsuffix /Makefile.fpc,$(TARGET_EXAMPLEDIRS))
endif
fpc_makefile_sub2: $(addsuffix _makefile_dirs,$(TARGET_DIRS) $(TARGET_EXAMPLEDIRS))
fpc_makefile_dirs: fpc_makefile_sub1 fpc_makefile_sub2
fpc_makefiles: fpc_makefile fpc_makefile_dirs
ifeq ($(FULL_TARGET),i386-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_LIBC=1
TARGET_DIRS_UNIXUTIL=1
endif
ifeq ($(FULL_TARGET),i386-go32v2)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),i386-win32)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_WINUNITS-BASE=1
TARGET_DIRS_WINUNITS-JEDI=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_MAD=1
TARGET_DIRS_TCL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-os2)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_TCL=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-freebsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-beos)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),i386-netbsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-solaris)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-qnx)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),i386-netware)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_ZLIB=1
endif
ifeq ($(FULL_TARGET),i386-openbsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-wdosx)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),i386-darwin)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-emx)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_TCL=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),i386-watcom)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),i386-netwlibc)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_ZLIB=1
endif
ifeq ($(FULL_TARGET),i386-wince)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_TCL=1
endif
ifeq ($(FULL_TARGET),i386-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),i386-symbian)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),m68k-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),m68k-freebsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),m68k-netbsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),m68k-amiga)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),m68k-atari)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),m68k-openbsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),m68k-palmos)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),m68k-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),powerpc-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),powerpc-netbsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),powerpc-amiga)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),powerpc-macos)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),powerpc-darwin)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),powerpc-morphos)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),powerpc-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),sparc-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),sparc-netbsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),sparc-solaris)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),sparc-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),x86_64-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),x86_64-freebsd)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),x86_64-darwin)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),x86_64-win64)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_WINUNITS-BASE=1
TARGET_DIRS_WINUNITS-JEDI=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_TCL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),x86_64-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),arm-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),arm-palmos)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),arm-wince)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_TCL=1
endif
ifeq ($(FULL_TARGET),arm-gba)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),arm-nds)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),arm-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),arm-symbian)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifeq ($(FULL_TARGET),powerpc64-linux)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),powerpc64-darwin)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPGTK=1
endif
ifeq ($(FULL_TARGET),powerpc64-embedded)
TARGET_DIRS_BASE=1
TARGET_DIRS_FV=1
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_EXTRA=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
endif
ifdef TARGET_DIRS_BASE
base_all:
	$(MAKE) -C base all
base_debug:
	$(MAKE) -C base debug
base_smart:
	$(MAKE) -C base smart
base_release:
	$(MAKE) -C base release
base_units:
	$(MAKE) -C base units
base_examples:
	$(MAKE) -C base examples
base_shared:
	$(MAKE) -C base shared
base_install:
	$(MAKE) -C base install
base_sourceinstall:
	$(MAKE) -C base sourceinstall
base_exampleinstall:
	$(MAKE) -C base exampleinstall
base_distinstall:
	$(MAKE) -C base distinstall
base_zipinstall:
	$(MAKE) -C base zipinstall
base_zipsourceinstall:
	$(MAKE) -C base zipsourceinstall
base_zipexampleinstall:
	$(MAKE) -C base zipexampleinstall
base_zipdistinstall:
	$(MAKE) -C base zipdistinstall
base_clean:
	$(MAKE) -C base clean
base_distclean:
	$(MAKE) -C base distclean
base_cleanall:
	$(MAKE) -C base cleanall
base_info:
	$(MAKE) -C base info
base_makefiles:
	$(MAKE) -C base makefiles
base:
	$(MAKE) -C base all
.PHONY: base_all base_debug base_smart base_release base_units base_examples base_shared base_install base_sourceinstall base_exampleinstall base_distinstall base_zipinstall base_zipsourceinstall base_zipexampleinstall base_zipdistinstall base_clean base_distclean base_cleanall base_info base_makefiles base
endif
ifdef TARGET_DIRS_FV
fv_all:
	$(MAKE) -C fv all
fv_debug:
	$(MAKE) -C fv debug
fv_smart:
	$(MAKE) -C fv smart
fv_release:
	$(MAKE) -C fv release
fv_units:
	$(MAKE) -C fv units
fv_examples:
	$(MAKE) -C fv examples
fv_shared:
	$(MAKE) -C fv shared
fv_install:
	$(MAKE) -C fv install
fv_sourceinstall:
	$(MAKE) -C fv sourceinstall
fv_exampleinstall:
	$(MAKE) -C fv exampleinstall
fv_distinstall:
	$(MAKE) -C fv distinstall
fv_zipinstall:
	$(MAKE) -C fv zipinstall
fv_zipsourceinstall:
	$(MAKE) -C fv zipsourceinstall
fv_zipexampleinstall:
	$(MAKE) -C fv zipexampleinstall
fv_zipdistinstall:
	$(MAKE) -C fv zipdistinstall
fv_clean:
	$(MAKE) -C fv clean
fv_distclean:
	$(MAKE) -C fv distclean
fv_cleanall:
	$(MAKE) -C fv cleanall
fv_info:
	$(MAKE) -C fv info
fv_makefiles:
	$(MAKE) -C fv makefiles
fv:
	$(MAKE) -C fv all
.PHONY: fv_all fv_debug fv_smart fv_release fv_units fv_examples fv_shared fv_install fv_sourceinstall fv_exampleinstall fv_distinstall fv_zipinstall fv_zipsourceinstall fv_zipexampleinstall fv_zipdistinstall fv_clean fv_distclean fv_cleanall fv_info fv_makefiles fv
endif
ifdef TARGET_DIRS_HASH
hash_all:
	$(MAKE) -C hash all
hash_debug:
	$(MAKE) -C hash debug
hash_smart:
	$(MAKE) -C hash smart
hash_release:
	$(MAKE) -C hash release
hash_units:
	$(MAKE) -C hash units
hash_examples:
	$(MAKE) -C hash examples
hash_shared:
	$(MAKE) -C hash shared
hash_install:
	$(MAKE) -C hash install
hash_sourceinstall:
	$(MAKE) -C hash sourceinstall
hash_exampleinstall:
	$(MAKE) -C hash exampleinstall
hash_distinstall:
	$(MAKE) -C hash distinstall
hash_zipinstall:
	$(MAKE) -C hash zipinstall
hash_zipsourceinstall:
	$(MAKE) -C hash zipsourceinstall
hash_zipexampleinstall:
	$(MAKE) -C hash zipexampleinstall
hash_zipdistinstall:
	$(MAKE) -C hash zipdistinstall
hash_clean:
	$(MAKE) -C hash clean
hash_distclean:
	$(MAKE) -C hash distclean
hash_cleanall:
	$(MAKE) -C hash cleanall
hash_info:
	$(MAKE) -C hash info
hash_makefiles:
	$(MAKE) -C hash makefiles
hash:
	$(MAKE) -C hash all
.PHONY: hash_all hash_debug hash_smart hash_release hash_units hash_examples hash_shared hash_install hash_sourceinstall hash_exampleinstall hash_distinstall hash_zipinstall hash_zipsourceinstall hash_zipexampleinstall hash_zipdistinstall hash_clean hash_distclean hash_cleanall hash_info hash_makefiles hash
endif
ifdef TARGET_DIRS_PASJPEG
pasjpeg_all:
	$(MAKE) -C pasjpeg all
pasjpeg_debug:
	$(MAKE) -C pasjpeg debug
pasjpeg_smart:
	$(MAKE) -C pasjpeg smart
pasjpeg_release:
	$(MAKE) -C pasjpeg release
pasjpeg_units:
	$(MAKE) -C pasjpeg units
pasjpeg_examples:
	$(MAKE) -C pasjpeg examples
pasjpeg_shared:
	$(MAKE) -C pasjpeg shared
pasjpeg_install:
	$(MAKE) -C pasjpeg install
pasjpeg_sourceinstall:
	$(MAKE) -C pasjpeg sourceinstall
pasjpeg_exampleinstall:
	$(MAKE) -C pasjpeg exampleinstall
pasjpeg_distinstall:
	$(MAKE) -C pasjpeg distinstall
pasjpeg_zipinstall:
	$(MAKE) -C pasjpeg zipinstall
pasjpeg_zipsourceinstall:
	$(MAKE) -C pasjpeg zipsourceinstall
pasjpeg_zipexampleinstall:
	$(MAKE) -C pasjpeg zipexampleinstall
pasjpeg_zipdistinstall:
	$(MAKE) -C pasjpeg zipdistinstall
pasjpeg_clean:
	$(MAKE) -C pasjpeg clean
pasjpeg_distclean:
	$(MAKE) -C pasjpeg distclean
pasjpeg_cleanall:
	$(MAKE) -C pasjpeg cleanall
pasjpeg_info:
	$(MAKE) -C pasjpeg info
pasjpeg_makefiles:
	$(MAKE) -C pasjpeg makefiles
pasjpeg:
	$(MAKE) -C pasjpeg all
.PHONY: pasjpeg_all pasjpeg_debug pasjpeg_smart pasjpeg_release pasjpeg_units pasjpeg_examples pasjpeg_shared pasjpeg_install pasjpeg_sourceinstall pasjpeg_exampleinstall pasjpeg_distinstall pasjpeg_zipinstall pasjpeg_zipsourceinstall pasjpeg_zipexampleinstall pasjpeg_zipdistinstall pasjpeg_clean pasjpeg_distclean pasjpeg_cleanall pasjpeg_info pasjpeg_makefiles pasjpeg
endif
ifdef TARGET_DIRS_PASZLIB
paszlib_all:
	$(MAKE) -C paszlib all
paszlib_debug:
	$(MAKE) -C paszlib debug
paszlib_smart:
	$(MAKE) -C paszlib smart
paszlib_release:
	$(MAKE) -C paszlib release
paszlib_units:
	$(MAKE) -C paszlib units
paszlib_examples:
	$(MAKE) -C paszlib examples
paszlib_shared:
	$(MAKE) -C paszlib shared
paszlib_install:
	$(MAKE) -C paszlib install
paszlib_sourceinstall:
	$(MAKE) -C paszlib sourceinstall
paszlib_exampleinstall:
	$(MAKE) -C paszlib exampleinstall
paszlib_distinstall:
	$(MAKE) -C paszlib distinstall
paszlib_zipinstall:
	$(MAKE) -C paszlib zipinstall
paszlib_zipsourceinstall:
	$(MAKE) -C paszlib zipsourceinstall
paszlib_zipexampleinstall:
	$(MAKE) -C paszlib zipexampleinstall
paszlib_zipdistinstall:
	$(MAKE) -C paszlib zipdistinstall
paszlib_clean:
	$(MAKE) -C paszlib clean
paszlib_distclean:
	$(MAKE) -C paszlib distclean
paszlib_cleanall:
	$(MAKE) -C paszlib cleanall
paszlib_info:
	$(MAKE) -C paszlib info
paszlib_makefiles:
	$(MAKE) -C paszlib makefiles
paszlib:
	$(MAKE) -C paszlib all
.PHONY: paszlib_all paszlib_debug paszlib_smart paszlib_release paszlib_units paszlib_examples paszlib_shared paszlib_install paszlib_sourceinstall paszlib_exampleinstall paszlib_distinstall paszlib_zipinstall paszlib_zipsourceinstall paszlib_zipexampleinstall paszlib_zipdistinstall paszlib_clean paszlib_distclean paszlib_cleanall paszlib_info paszlib_makefiles paszlib
endif
ifdef TARGET_DIRS_FPMKUNIT
fpmkunit_all:
	$(MAKE) -C fpmkunit all
fpmkunit_debug:
	$(MAKE) -C fpmkunit debug
fpmkunit_smart:
	$(MAKE) -C fpmkunit smart
fpmkunit_release:
	$(MAKE) -C fpmkunit release
fpmkunit_units:
	$(MAKE) -C fpmkunit units
fpmkunit_examples:
	$(MAKE) -C fpmkunit examples
fpmkunit_shared:
	$(MAKE) -C fpmkunit shared
fpmkunit_install:
	$(MAKE) -C fpmkunit install
fpmkunit_sourceinstall:
	$(MAKE) -C fpmkunit sourceinstall
fpmkunit_exampleinstall:
	$(MAKE) -C fpmkunit exampleinstall
fpmkunit_distinstall:
	$(MAKE) -C fpmkunit distinstall
fpmkunit_zipinstall:
	$(MAKE) -C fpmkunit zipinstall
fpmkunit_zipsourceinstall:
	$(MAKE) -C fpmkunit zipsourceinstall
fpmkunit_zipexampleinstall:
	$(MAKE) -C fpmkunit zipexampleinstall
fpmkunit_zipdistinstall:
	$(MAKE) -C fpmkunit zipdistinstall
fpmkunit_clean:
	$(MAKE) -C fpmkunit clean
fpmkunit_distclean:
	$(MAKE) -C fpmkunit distclean
fpmkunit_cleanall:
	$(MAKE) -C fpmkunit cleanall
fpmkunit_info:
	$(MAKE) -C fpmkunit info
fpmkunit_makefiles:
	$(MAKE) -C fpmkunit makefiles
fpmkunit:
	$(MAKE) -C fpmkunit all
.PHONY: fpmkunit_all fpmkunit_debug fpmkunit_smart fpmkunit_release fpmkunit_units fpmkunit_examples fpmkunit_shared fpmkunit_install fpmkunit_sourceinstall fpmkunit_exampleinstall fpmkunit_distinstall fpmkunit_zipinstall fpmkunit_zipsourceinstall fpmkunit_zipexampleinstall fpmkunit_zipdistinstall fpmkunit_clean fpmkunit_distclean fpmkunit_cleanall fpmkunit_info fpmkunit_makefiles fpmkunit
endif
ifdef TARGET_DIRS_FCL-BASE
fcl-base_all:
	$(MAKE) -C fcl-base all
fcl-base_debug:
	$(MAKE) -C fcl-base debug
fcl-base_smart:
	$(MAKE) -C fcl-base smart
fcl-base_release:
	$(MAKE) -C fcl-base release
fcl-base_units:
	$(MAKE) -C fcl-base units
fcl-base_examples:
	$(MAKE) -C fcl-base examples
fcl-base_shared:
	$(MAKE) -C fcl-base shared
fcl-base_install:
	$(MAKE) -C fcl-base install
fcl-base_sourceinstall:
	$(MAKE) -C fcl-base sourceinstall
fcl-base_exampleinstall:
	$(MAKE) -C fcl-base exampleinstall
fcl-base_distinstall:
	$(MAKE) -C fcl-base distinstall
fcl-base_zipinstall:
	$(MAKE) -C fcl-base zipinstall
fcl-base_zipsourceinstall:
	$(MAKE) -C fcl-base zipsourceinstall
fcl-base_zipexampleinstall:
	$(MAKE) -C fcl-base zipexampleinstall
fcl-base_zipdistinstall:
	$(MAKE) -C fcl-base zipdistinstall
fcl-base_clean:
	$(MAKE) -C fcl-base clean
fcl-base_distclean:
	$(MAKE) -C fcl-base distclean
fcl-base_cleanall:
	$(MAKE) -C fcl-base cleanall
fcl-base_info:
	$(MAKE) -C fcl-base info
fcl-base_makefiles:
	$(MAKE) -C fcl-base makefiles
fcl-base:
	$(MAKE) -C fcl-base all
.PHONY: fcl-base_all fcl-base_debug fcl-base_smart fcl-base_release fcl-base_units fcl-base_examples fcl-base_shared fcl-base_install fcl-base_sourceinstall fcl-base_exampleinstall fcl-base_distinstall fcl-base_zipinstall fcl-base_zipsourceinstall fcl-base_zipexampleinstall fcl-base_zipdistinstall fcl-base_clean fcl-base_distclean fcl-base_cleanall fcl-base_info fcl-base_makefiles fcl-base
endif
ifdef TARGET_DIRS_FCL-DB
fcl-db_all:
	$(MAKE) -C fcl-db all
fcl-db_debug:
	$(MAKE) -C fcl-db debug
fcl-db_smart:
	$(MAKE) -C fcl-db smart
fcl-db_release:
	$(MAKE) -C fcl-db release
fcl-db_units:
	$(MAKE) -C fcl-db units
fcl-db_examples:
	$(MAKE) -C fcl-db examples
fcl-db_shared:
	$(MAKE) -C fcl-db shared
fcl-db_install:
	$(MAKE) -C fcl-db install
fcl-db_sourceinstall:
	$(MAKE) -C fcl-db sourceinstall
fcl-db_exampleinstall:
	$(MAKE) -C fcl-db exampleinstall
fcl-db_distinstall:
	$(MAKE) -C fcl-db distinstall
fcl-db_zipinstall:
	$(MAKE) -C fcl-db zipinstall
fcl-db_zipsourceinstall:
	$(MAKE) -C fcl-db zipsourceinstall
fcl-db_zipexampleinstall:
	$(MAKE) -C fcl-db zipexampleinstall
fcl-db_zipdistinstall:
	$(MAKE) -C fcl-db zipdistinstall
fcl-db_clean:
	$(MAKE) -C fcl-db clean
fcl-db_distclean:
	$(MAKE) -C fcl-db distclean
fcl-db_cleanall:
	$(MAKE) -C fcl-db cleanall
fcl-db_info:
	$(MAKE) -C fcl-db info
fcl-db_makefiles:
	$(MAKE) -C fcl-db makefiles
fcl-db:
	$(MAKE) -C fcl-db all
.PHONY: fcl-db_all fcl-db_debug fcl-db_smart fcl-db_release fcl-db_units fcl-db_examples fcl-db_shared fcl-db_install fcl-db_sourceinstall fcl-db_exampleinstall fcl-db_distinstall fcl-db_zipinstall fcl-db_zipsourceinstall fcl-db_zipexampleinstall fcl-db_zipdistinstall fcl-db_clean fcl-db_distclean fcl-db_cleanall fcl-db_info fcl-db_makefiles fcl-db
endif
ifdef TARGET_DIRS_FCL-IMAGE
fcl-image_all:
	$(MAKE) -C fcl-image all
fcl-image_debug:
	$(MAKE) -C fcl-image debug
fcl-image_smart:
	$(MAKE) -C fcl-image smart
fcl-image_release:
	$(MAKE) -C fcl-image release
fcl-image_units:
	$(MAKE) -C fcl-image units
fcl-image_examples:
	$(MAKE) -C fcl-image examples
fcl-image_shared:
	$(MAKE) -C fcl-image shared
fcl-image_install:
	$(MAKE) -C fcl-image install
fcl-image_sourceinstall:
	$(MAKE) -C fcl-image sourceinstall
fcl-image_exampleinstall:
	$(MAKE) -C fcl-image exampleinstall
fcl-image_distinstall:
	$(MAKE) -C fcl-image distinstall
fcl-image_zipinstall:
	$(MAKE) -C fcl-image zipinstall
fcl-image_zipsourceinstall:
	$(MAKE) -C fcl-image zipsourceinstall
fcl-image_zipexampleinstall:
	$(MAKE) -C fcl-image zipexampleinstall
fcl-image_zipdistinstall:
	$(MAKE) -C fcl-image zipdistinstall
fcl-image_clean:
	$(MAKE) -C fcl-image clean
fcl-image_distclean:
	$(MAKE) -C fcl-image distclean
fcl-image_cleanall:
	$(MAKE) -C fcl-image cleanall
fcl-image_info:
	$(MAKE) -C fcl-image info
fcl-image_makefiles:
	$(MAKE) -C fcl-image makefiles
fcl-image:
	$(MAKE) -C fcl-image all
.PHONY: fcl-image_all fcl-image_debug fcl-image_smart fcl-image_release fcl-image_units fcl-image_examples fcl-image_shared fcl-image_install fcl-image_sourceinstall fcl-image_exampleinstall fcl-image_distinstall fcl-image_zipinstall fcl-image_zipsourceinstall fcl-image_zipexampleinstall fcl-image_zipdistinstall fcl-image_clean fcl-image_distclean fcl-image_cleanall fcl-image_info fcl-image_makefiles fcl-image
endif
ifdef TARGET_DIRS_FCL-NET
fcl-net_all:
	$(MAKE) -C fcl-net all
fcl-net_debug:
	$(MAKE) -C fcl-net debug
fcl-net_smart:
	$(MAKE) -C fcl-net smart
fcl-net_release:
	$(MAKE) -C fcl-net release
fcl-net_units:
	$(MAKE) -C fcl-net units
fcl-net_examples:
	$(MAKE) -C fcl-net examples
fcl-net_shared:
	$(MAKE) -C fcl-net shared
fcl-net_install:
	$(MAKE) -C fcl-net install
fcl-net_sourceinstall:
	$(MAKE) -C fcl-net sourceinstall
fcl-net_exampleinstall:
	$(MAKE) -C fcl-net exampleinstall
fcl-net_distinstall:
	$(MAKE) -C fcl-net distinstall
fcl-net_zipinstall:
	$(MAKE) -C fcl-net zipinstall
fcl-net_zipsourceinstall:
	$(MAKE) -C fcl-net zipsourceinstall
fcl-net_zipexampleinstall:
	$(MAKE) -C fcl-net zipexampleinstall
fcl-net_zipdistinstall:
	$(MAKE) -C fcl-net zipdistinstall
fcl-net_clean:
	$(MAKE) -C fcl-net clean
fcl-net_distclean:
	$(MAKE) -C fcl-net distclean
fcl-net_cleanall:
	$(MAKE) -C fcl-net cleanall
fcl-net_info:
	$(MAKE) -C fcl-net info
fcl-net_makefiles:
	$(MAKE) -C fcl-net makefiles
fcl-net:
	$(MAKE) -C fcl-net all
.PHONY: fcl-net_all fcl-net_debug fcl-net_smart fcl-net_release fcl-net_units fcl-net_examples fcl-net_shared fcl-net_install fcl-net_sourceinstall fcl-net_exampleinstall fcl-net_distinstall fcl-net_zipinstall fcl-net_zipsourceinstall fcl-net_zipexampleinstall fcl-net_zipdistinstall fcl-net_clean fcl-net_distclean fcl-net_cleanall fcl-net_info fcl-net_makefiles fcl-net
endif
ifdef TARGET_DIRS_FCL-PASSRC
fcl-passrc_all:
	$(MAKE) -C fcl-passrc all
fcl-passrc_debug:
	$(MAKE) -C fcl-passrc debug
fcl-passrc_smart:
	$(MAKE) -C fcl-passrc smart
fcl-passrc_release:
	$(MAKE) -C fcl-passrc release
fcl-passrc_units:
	$(MAKE) -C fcl-passrc units
fcl-passrc_examples:
	$(MAKE) -C fcl-passrc examples
fcl-passrc_shared:
	$(MAKE) -C fcl-passrc shared
fcl-passrc_install:
	$(MAKE) -C fcl-passrc install
fcl-passrc_sourceinstall:
	$(MAKE) -C fcl-passrc sourceinstall
fcl-passrc_exampleinstall:
	$(MAKE) -C fcl-passrc exampleinstall
fcl-passrc_distinstall:
	$(MAKE) -C fcl-passrc distinstall
fcl-passrc_zipinstall:
	$(MAKE) -C fcl-passrc zipinstall
fcl-passrc_zipsourceinstall:
	$(MAKE) -C fcl-passrc zipsourceinstall
fcl-passrc_zipexampleinstall:
	$(MAKE) -C fcl-passrc zipexampleinstall
fcl-passrc_zipdistinstall:
	$(MAKE) -C fcl-passrc zipdistinstall
fcl-passrc_clean:
	$(MAKE) -C fcl-passrc clean
fcl-passrc_distclean:
	$(MAKE) -C fcl-passrc distclean
fcl-passrc_cleanall:
	$(MAKE) -C fcl-passrc cleanall
fcl-passrc_info:
	$(MAKE) -C fcl-passrc info
fcl-passrc_makefiles:
	$(MAKE) -C fcl-passrc makefiles
fcl-passrc:
	$(MAKE) -C fcl-passrc all
.PHONY: fcl-passrc_all fcl-passrc_debug fcl-passrc_smart fcl-passrc_release fcl-passrc_units fcl-passrc_examples fcl-passrc_shared fcl-passrc_install fcl-passrc_sourceinstall fcl-passrc_exampleinstall fcl-passrc_distinstall fcl-passrc_zipinstall fcl-passrc_zipsourceinstall fcl-passrc_zipexampleinstall fcl-passrc_zipdistinstall fcl-passrc_clean fcl-passrc_distclean fcl-passrc_cleanall fcl-passrc_info fcl-passrc_makefiles fcl-passrc
endif
ifdef TARGET_DIRS_FCL-REGISTRY
fcl-registry_all:
	$(MAKE) -C fcl-registry all
fcl-registry_debug:
	$(MAKE) -C fcl-registry debug
fcl-registry_smart:
	$(MAKE) -C fcl-registry smart
fcl-registry_release:
	$(MAKE) -C fcl-registry release
fcl-registry_units:
	$(MAKE) -C fcl-registry units
fcl-registry_examples:
	$(MAKE) -C fcl-registry examples
fcl-registry_shared:
	$(MAKE) -C fcl-registry shared
fcl-registry_install:
	$(MAKE) -C fcl-registry install
fcl-registry_sourceinstall:
	$(MAKE) -C fcl-registry sourceinstall
fcl-registry_exampleinstall:
	$(MAKE) -C fcl-registry exampleinstall
fcl-registry_distinstall:
	$(MAKE) -C fcl-registry distinstall
fcl-registry_zipinstall:
	$(MAKE) -C fcl-registry zipinstall
fcl-registry_zipsourceinstall:
	$(MAKE) -C fcl-registry zipsourceinstall
fcl-registry_zipexampleinstall:
	$(MAKE) -C fcl-registry zipexampleinstall
fcl-registry_zipdistinstall:
	$(MAKE) -C fcl-registry zipdistinstall
fcl-registry_clean:
	$(MAKE) -C fcl-registry clean
fcl-registry_distclean:
	$(MAKE) -C fcl-registry distclean
fcl-registry_cleanall:
	$(MAKE) -C fcl-registry cleanall
fcl-registry_info:
	$(MAKE) -C fcl-registry info
fcl-registry_makefiles:
	$(MAKE) -C fcl-registry makefiles
fcl-registry:
	$(MAKE) -C fcl-registry all
.PHONY: fcl-registry_all fcl-registry_debug fcl-registry_smart fcl-registry_release fcl-registry_units fcl-registry_examples fcl-registry_shared fcl-registry_install fcl-registry_sourceinstall fcl-registry_exampleinstall fcl-registry_distinstall fcl-registry_zipinstall fcl-registry_zipsourceinstall fcl-registry_zipexampleinstall fcl-registry_zipdistinstall fcl-registry_clean fcl-registry_distclean fcl-registry_cleanall fcl-registry_info fcl-registry_makefiles fcl-registry
endif
ifdef TARGET_DIRS_FCL-XML
fcl-xml_all:
	$(MAKE) -C fcl-xml all
fcl-xml_debug:
	$(MAKE) -C fcl-xml debug
fcl-xml_smart:
	$(MAKE) -C fcl-xml smart
fcl-xml_release:
	$(MAKE) -C fcl-xml release
fcl-xml_units:
	$(MAKE) -C fcl-xml units
fcl-xml_examples:
	$(MAKE) -C fcl-xml examples
fcl-xml_shared:
	$(MAKE) -C fcl-xml shared
fcl-xml_install:
	$(MAKE) -C fcl-xml install
fcl-xml_sourceinstall:
	$(MAKE) -C fcl-xml sourceinstall
fcl-xml_exampleinstall:
	$(MAKE) -C fcl-xml exampleinstall
fcl-xml_distinstall:
	$(MAKE) -C fcl-xml distinstall
fcl-xml_zipinstall:
	$(MAKE) -C fcl-xml zipinstall
fcl-xml_zipsourceinstall:
	$(MAKE) -C fcl-xml zipsourceinstall
fcl-xml_zipexampleinstall:
	$(MAKE) -C fcl-xml zipexampleinstall
fcl-xml_zipdistinstall:
	$(MAKE) -C fcl-xml zipdistinstall
fcl-xml_clean:
	$(MAKE) -C fcl-xml clean
fcl-xml_distclean:
	$(MAKE) -C fcl-xml distclean
fcl-xml_cleanall:
	$(MAKE) -C fcl-xml cleanall
fcl-xml_info:
	$(MAKE) -C fcl-xml info
fcl-xml_makefiles:
	$(MAKE) -C fcl-xml makefiles
fcl-xml:
	$(MAKE) -C fcl-xml all
.PHONY: fcl-xml_all fcl-xml_debug fcl-xml_smart fcl-xml_release fcl-xml_units fcl-xml_examples fcl-xml_shared fcl-xml_install fcl-xml_sourceinstall fcl-xml_exampleinstall fcl-xml_distinstall fcl-xml_zipinstall fcl-xml_zipsourceinstall fcl-xml_zipexampleinstall fcl-xml_zipdistinstall fcl-xml_clean fcl-xml_distclean fcl-xml_cleanall fcl-xml_info fcl-xml_makefiles fcl-xml
endif
ifdef TARGET_DIRS_FCL-FPCUNIT
fcl-fpcunit_all:
	$(MAKE) -C fcl-fpcunit all
fcl-fpcunit_debug:
	$(MAKE) -C fcl-fpcunit debug
fcl-fpcunit_smart:
	$(MAKE) -C fcl-fpcunit smart
fcl-fpcunit_release:
	$(MAKE) -C fcl-fpcunit release
fcl-fpcunit_units:
	$(MAKE) -C fcl-fpcunit units
fcl-fpcunit_examples:
	$(MAKE) -C fcl-fpcunit examples
fcl-fpcunit_shared:
	$(MAKE) -C fcl-fpcunit shared
fcl-fpcunit_install:
	$(MAKE) -C fcl-fpcunit install
fcl-fpcunit_sourceinstall:
	$(MAKE) -C fcl-fpcunit sourceinstall
fcl-fpcunit_exampleinstall:
	$(MAKE) -C fcl-fpcunit exampleinstall
fcl-fpcunit_distinstall:
	$(MAKE) -C fcl-fpcunit distinstall
fcl-fpcunit_zipinstall:
	$(MAKE) -C fcl-fpcunit zipinstall
fcl-fpcunit_zipsourceinstall:
	$(MAKE) -C fcl-fpcunit zipsourceinstall
fcl-fpcunit_zipexampleinstall:
	$(MAKE) -C fcl-fpcunit zipexampleinstall
fcl-fpcunit_zipdistinstall:
	$(MAKE) -C fcl-fpcunit zipdistinstall
fcl-fpcunit_clean:
	$(MAKE) -C fcl-fpcunit clean
fcl-fpcunit_distclean:
	$(MAKE) -C fcl-fpcunit distclean
fcl-fpcunit_cleanall:
	$(MAKE) -C fcl-fpcunit cleanall
fcl-fpcunit_info:
	$(MAKE) -C fcl-fpcunit info
fcl-fpcunit_makefiles:
	$(MAKE) -C fcl-fpcunit makefiles
fcl-fpcunit:
	$(MAKE) -C fcl-fpcunit all
.PHONY: fcl-fpcunit_all fcl-fpcunit_debug fcl-fpcunit_smart fcl-fpcunit_release fcl-fpcunit_units fcl-fpcunit_examples fcl-fpcunit_shared fcl-fpcunit_install fcl-fpcunit_sourceinstall fcl-fpcunit_exampleinstall fcl-fpcunit_distinstall fcl-fpcunit_zipinstall fcl-fpcunit_zipsourceinstall fcl-fpcunit_zipexampleinstall fcl-fpcunit_zipdistinstall fcl-fpcunit_clean fcl-fpcunit_distclean fcl-fpcunit_cleanall fcl-fpcunit_info fcl-fpcunit_makefiles fcl-fpcunit
endif
ifdef TARGET_DIRS_FCL-JSON
fcl-json_all:
	$(MAKE) -C fcl-json all
fcl-json_debug:
	$(MAKE) -C fcl-json debug
fcl-json_smart:
	$(MAKE) -C fcl-json smart
fcl-json_release:
	$(MAKE) -C fcl-json release
fcl-json_units:
	$(MAKE) -C fcl-json units
fcl-json_examples:
	$(MAKE) -C fcl-json examples
fcl-json_shared:
	$(MAKE) -C fcl-json shared
fcl-json_install:
	$(MAKE) -C fcl-json install
fcl-json_sourceinstall:
	$(MAKE) -C fcl-json sourceinstall
fcl-json_exampleinstall:
	$(MAKE) -C fcl-json exampleinstall
fcl-json_distinstall:
	$(MAKE) -C fcl-json distinstall
fcl-json_zipinstall:
	$(MAKE) -C fcl-json zipinstall
fcl-json_zipsourceinstall:
	$(MAKE) -C fcl-json zipsourceinstall
fcl-json_zipexampleinstall:
	$(MAKE) -C fcl-json zipexampleinstall
fcl-json_zipdistinstall:
	$(MAKE) -C fcl-json zipdistinstall
fcl-json_clean:
	$(MAKE) -C fcl-json clean
fcl-json_distclean:
	$(MAKE) -C fcl-json distclean
fcl-json_cleanall:
	$(MAKE) -C fcl-json cleanall
fcl-json_info:
	$(MAKE) -C fcl-json info
fcl-json_makefiles:
	$(MAKE) -C fcl-json makefiles
fcl-json:
	$(MAKE) -C fcl-json all
.PHONY: fcl-json_all fcl-json_debug fcl-json_smart fcl-json_release fcl-json_units fcl-json_examples fcl-json_shared fcl-json_install fcl-json_sourceinstall fcl-json_exampleinstall fcl-json_distinstall fcl-json_zipinstall fcl-json_zipsourceinstall fcl-json_zipexampleinstall fcl-json_zipdistinstall fcl-json_clean fcl-json_distclean fcl-json_cleanall fcl-json_info fcl-json_makefiles fcl-json
endif
ifdef TARGET_DIRS_EXTRA
extra_all:
	$(MAKE) -C extra all
extra_debug:
	$(MAKE) -C extra debug
extra_smart:
	$(MAKE) -C extra smart
extra_release:
	$(MAKE) -C extra release
extra_units:
	$(MAKE) -C extra units
extra_examples:
	$(MAKE) -C extra examples
extra_shared:
	$(MAKE) -C extra shared
extra_install:
	$(MAKE) -C extra install
extra_sourceinstall:
	$(MAKE) -C extra sourceinstall
extra_exampleinstall:
	$(MAKE) -C extra exampleinstall
extra_distinstall:
	$(MAKE) -C extra distinstall
extra_zipinstall:
	$(MAKE) -C extra zipinstall
extra_zipsourceinstall:
	$(MAKE) -C extra zipsourceinstall
extra_zipexampleinstall:
	$(MAKE) -C extra zipexampleinstall
extra_zipdistinstall:
	$(MAKE) -C extra zipdistinstall
extra_clean:
	$(MAKE) -C extra clean
extra_distclean:
	$(MAKE) -C extra distclean
extra_cleanall:
	$(MAKE) -C extra cleanall
extra_info:
	$(MAKE) -C extra info
extra_makefiles:
	$(MAKE) -C extra makefiles
extra:
	$(MAKE) -C extra all
.PHONY: extra_all extra_debug extra_smart extra_release extra_units extra_examples extra_shared extra_install extra_sourceinstall extra_exampleinstall extra_distinstall extra_zipinstall extra_zipsourceinstall extra_zipexampleinstall extra_zipdistinstall extra_clean extra_distclean extra_cleanall extra_info extra_makefiles extra
endif
ifdef TARGET_DIRS_FCL-PROCESS
fcl-process_all:
	$(MAKE) -C fcl-process all
fcl-process_debug:
	$(MAKE) -C fcl-process debug
fcl-process_smart:
	$(MAKE) -C fcl-process smart
fcl-process_release:
	$(MAKE) -C fcl-process release
fcl-process_units:
	$(MAKE) -C fcl-process units
fcl-process_examples:
	$(MAKE) -C fcl-process examples
fcl-process_shared:
	$(MAKE) -C fcl-process shared
fcl-process_install:
	$(MAKE) -C fcl-process install
fcl-process_sourceinstall:
	$(MAKE) -C fcl-process sourceinstall
fcl-process_exampleinstall:
	$(MAKE) -C fcl-process exampleinstall
fcl-process_distinstall:
	$(MAKE) -C fcl-process distinstall
fcl-process_zipinstall:
	$(MAKE) -C fcl-process zipinstall
fcl-process_zipsourceinstall:
	$(MAKE) -C fcl-process zipsourceinstall
fcl-process_zipexampleinstall:
	$(MAKE) -C fcl-process zipexampleinstall
fcl-process_zipdistinstall:
	$(MAKE) -C fcl-process zipdistinstall
fcl-process_clean:
	$(MAKE) -C fcl-process clean
fcl-process_distclean:
	$(MAKE) -C fcl-process distclean
fcl-process_cleanall:
	$(MAKE) -C fcl-process cleanall
fcl-process_info:
	$(MAKE) -C fcl-process info
fcl-process_makefiles:
	$(MAKE) -C fcl-process makefiles
fcl-process:
	$(MAKE) -C fcl-process all
.PHONY: fcl-process_all fcl-process_debug fcl-process_smart fcl-process_release fcl-process_units fcl-process_examples fcl-process_shared fcl-process_install fcl-process_sourceinstall fcl-process_exampleinstall fcl-process_distinstall fcl-process_zipinstall fcl-process_zipsourceinstall fcl-process_zipexampleinstall fcl-process_zipdistinstall fcl-process_clean fcl-process_distclean fcl-process_cleanall fcl-process_info fcl-process_makefiles fcl-process
endif
ifdef TARGET_DIRS_UNZIP
unzip_all:
	$(MAKE) -C unzip all
unzip_debug:
	$(MAKE) -C unzip debug
unzip_smart:
	$(MAKE) -C unzip smart
unzip_release:
	$(MAKE) -C unzip release
unzip_units:
	$(MAKE) -C unzip units
unzip_examples:
	$(MAKE) -C unzip examples
unzip_shared:
	$(MAKE) -C unzip shared
unzip_install:
	$(MAKE) -C unzip install
unzip_sourceinstall:
	$(MAKE) -C unzip sourceinstall
unzip_exampleinstall:
	$(MAKE) -C unzip exampleinstall
unzip_distinstall:
	$(MAKE) -C unzip distinstall
unzip_zipinstall:
	$(MAKE) -C unzip zipinstall
unzip_zipsourceinstall:
	$(MAKE) -C unzip zipsourceinstall
unzip_zipexampleinstall:
	$(MAKE) -C unzip zipexampleinstall
unzip_zipdistinstall:
	$(MAKE) -C unzip zipdistinstall
unzip_clean:
	$(MAKE) -C unzip clean
unzip_distclean:
	$(MAKE) -C unzip distclean
unzip_cleanall:
	$(MAKE) -C unzip cleanall
unzip_info:
	$(MAKE) -C unzip info
unzip_makefiles:
	$(MAKE) -C unzip makefiles
unzip:
	$(MAKE) -C unzip all
.PHONY: unzip_all unzip_debug unzip_smart unzip_release unzip_units unzip_examples unzip_shared unzip_install unzip_sourceinstall unzip_exampleinstall unzip_distinstall unzip_zipinstall unzip_zipsourceinstall unzip_zipexampleinstall unzip_zipdistinstall unzip_clean unzip_distclean unzip_cleanall unzip_info unzip_makefiles unzip
endif
ifdef TARGET_DIRS_REGEXPR
regexpr_all:
	$(MAKE) -C regexpr all
regexpr_debug:
	$(MAKE) -C regexpr debug
regexpr_smart:
	$(MAKE) -C regexpr smart
regexpr_release:
	$(MAKE) -C regexpr release
regexpr_units:
	$(MAKE) -C regexpr units
regexpr_examples:
	$(MAKE) -C regexpr examples
regexpr_shared:
	$(MAKE) -C regexpr shared
regexpr_install:
	$(MAKE) -C regexpr install
regexpr_sourceinstall:
	$(MAKE) -C regexpr sourceinstall
regexpr_exampleinstall:
	$(MAKE) -C regexpr exampleinstall
regexpr_distinstall:
	$(MAKE) -C regexpr distinstall
regexpr_zipinstall:
	$(MAKE) -C regexpr zipinstall
regexpr_zipsourceinstall:
	$(MAKE) -C regexpr zipsourceinstall
regexpr_zipexampleinstall:
	$(MAKE) -C regexpr zipexampleinstall
regexpr_zipdistinstall:
	$(MAKE) -C regexpr zipdistinstall
regexpr_clean:
	$(MAKE) -C regexpr clean
regexpr_distclean:
	$(MAKE) -C regexpr distclean
regexpr_cleanall:
	$(MAKE) -C regexpr cleanall
regexpr_info:
	$(MAKE) -C regexpr info
regexpr_makefiles:
	$(MAKE) -C regexpr makefiles
regexpr:
	$(MAKE) -C regexpr all
.PHONY: regexpr_all regexpr_debug regexpr_smart regexpr_release regexpr_units regexpr_examples regexpr_shared regexpr_install regexpr_sourceinstall regexpr_exampleinstall regexpr_distinstall regexpr_zipinstall regexpr_zipsourceinstall regexpr_zipexampleinstall regexpr_zipdistinstall regexpr_clean regexpr_distclean regexpr_cleanall regexpr_info regexpr_makefiles regexpr
endif
ifdef TARGET_DIRS_CHM
chm_all:
	$(MAKE) -C chm all
chm_debug:
	$(MAKE) -C chm debug
chm_smart:
	$(MAKE) -C chm smart
chm_release:
	$(MAKE) -C chm release
chm_units:
	$(MAKE) -C chm units
chm_examples:
	$(MAKE) -C chm examples
chm_shared:
	$(MAKE) -C chm shared
chm_install:
	$(MAKE) -C chm install
chm_sourceinstall:
	$(MAKE) -C chm sourceinstall
chm_exampleinstall:
	$(MAKE) -C chm exampleinstall
chm_distinstall:
	$(MAKE) -C chm distinstall
chm_zipinstall:
	$(MAKE) -C chm zipinstall
chm_zipsourceinstall:
	$(MAKE) -C chm zipsourceinstall
chm_zipexampleinstall:
	$(MAKE) -C chm zipexampleinstall
chm_zipdistinstall:
	$(MAKE) -C chm zipdistinstall
chm_clean:
	$(MAKE) -C chm clean
chm_distclean:
	$(MAKE) -C chm distclean
chm_cleanall:
	$(MAKE) -C chm cleanall
chm_info:
	$(MAKE) -C chm info
chm_makefiles:
	$(MAKE) -C chm makefiles
chm:
	$(MAKE) -C chm all
.PHONY: chm_all chm_debug chm_smart chm_release chm_units chm_examples chm_shared chm_install chm_sourceinstall chm_exampleinstall chm_distinstall chm_zipinstall chm_zipsourceinstall chm_zipexampleinstall chm_zipdistinstall chm_clean chm_distclean chm_cleanall chm_info chm_makefiles chm
endif
ifdef TARGET_DIRS_FCL-WEB
fcl-web_all:
	$(MAKE) -C fcl-web all
fcl-web_debug:
	$(MAKE) -C fcl-web debug
fcl-web_smart:
	$(MAKE) -C fcl-web smart
fcl-web_release:
	$(MAKE) -C fcl-web release
fcl-web_units:
	$(MAKE) -C fcl-web units
fcl-web_examples:
	$(MAKE) -C fcl-web examples
fcl-web_shared:
	$(MAKE) -C fcl-web shared
fcl-web_install:
	$(MAKE) -C fcl-web install
fcl-web_sourceinstall:
	$(MAKE) -C fcl-web sourceinstall
fcl-web_exampleinstall:
	$(MAKE) -C fcl-web exampleinstall
fcl-web_distinstall:
	$(MAKE) -C fcl-web distinstall
fcl-web_zipinstall:
	$(MAKE) -C fcl-web zipinstall
fcl-web_zipsourceinstall:
	$(MAKE) -C fcl-web zipsourceinstall
fcl-web_zipexampleinstall:
	$(MAKE) -C fcl-web zipexampleinstall
fcl-web_zipdistinstall:
	$(MAKE) -C fcl-web zipdistinstall
fcl-web_clean:
	$(MAKE) -C fcl-web clean
fcl-web_distclean:
	$(MAKE) -C fcl-web distclean
fcl-web_cleanall:
	$(MAKE) -C fcl-web cleanall
fcl-web_info:
	$(MAKE) -C fcl-web info
fcl-web_makefiles:
	$(MAKE) -C fcl-web makefiles
fcl-web:
	$(MAKE) -C fcl-web all
.PHONY: fcl-web_all fcl-web_debug fcl-web_smart fcl-web_release fcl-web_units fcl-web_examples fcl-web_shared fcl-web_install fcl-web_sourceinstall fcl-web_exampleinstall fcl-web_distinstall fcl-web_zipinstall fcl-web_zipsourceinstall fcl-web_zipexampleinstall fcl-web_zipdistinstall fcl-web_clean fcl-web_distclean fcl-web_cleanall fcl-web_info fcl-web_makefiles fcl-web
endif
ifdef TARGET_DIRS_FCL-ASYNC
fcl-async_all:
	$(MAKE) -C fcl-async all
fcl-async_debug:
	$(MAKE) -C fcl-async debug
fcl-async_smart:
	$(MAKE) -C fcl-async smart
fcl-async_release:
	$(MAKE) -C fcl-async release
fcl-async_units:
	$(MAKE) -C fcl-async units
fcl-async_examples:
	$(MAKE) -C fcl-async examples
fcl-async_shared:
	$(MAKE) -C fcl-async shared
fcl-async_install:
	$(MAKE) -C fcl-async install
fcl-async_sourceinstall:
	$(MAKE) -C fcl-async sourceinstall
fcl-async_exampleinstall:
	$(MAKE) -C fcl-async exampleinstall
fcl-async_distinstall:
	$(MAKE) -C fcl-async distinstall
fcl-async_zipinstall:
	$(MAKE) -C fcl-async zipinstall
fcl-async_zipsourceinstall:
	$(MAKE) -C fcl-async zipsourceinstall
fcl-async_zipexampleinstall:
	$(MAKE) -C fcl-async zipexampleinstall
fcl-async_zipdistinstall:
	$(MAKE) -C fcl-async zipdistinstall
fcl-async_clean:
	$(MAKE) -C fcl-async clean
fcl-async_distclean:
	$(MAKE) -C fcl-async distclean
fcl-async_cleanall:
	$(MAKE) -C fcl-async cleanall
fcl-async_info:
	$(MAKE) -C fcl-async info
fcl-async_makefiles:
	$(MAKE) -C fcl-async makefiles
fcl-async:
	$(MAKE) -C fcl-async all
.PHONY: fcl-async_all fcl-async_debug fcl-async_smart fcl-async_release fcl-async_units fcl-async_examples fcl-async_shared fcl-async_install fcl-async_sourceinstall fcl-async_exampleinstall fcl-async_distinstall fcl-async_zipinstall fcl-async_zipsourceinstall fcl-async_zipexampleinstall fcl-async_zipdistinstall fcl-async_clean fcl-async_distclean fcl-async_cleanall fcl-async_info fcl-async_makefiles fcl-async
endif
ifdef TARGET_DIRS_IBASE
ibase_all:
	$(MAKE) -C ibase all
ibase_debug:
	$(MAKE) -C ibase debug
ibase_smart:
	$(MAKE) -C ibase smart
ibase_release:
	$(MAKE) -C ibase release
ibase_units:
	$(MAKE) -C ibase units
ibase_examples:
	$(MAKE) -C ibase examples
ibase_shared:
	$(MAKE) -C ibase shared
ibase_install:
	$(MAKE) -C ibase install
ibase_sourceinstall:
	$(MAKE) -C ibase sourceinstall
ibase_exampleinstall:
	$(MAKE) -C ibase exampleinstall
ibase_distinstall:
	$(MAKE) -C ibase distinstall
ibase_zipinstall:
	$(MAKE) -C ibase zipinstall
ibase_zipsourceinstall:
	$(MAKE) -C ibase zipsourceinstall
ibase_zipexampleinstall:
	$(MAKE) -C ibase zipexampleinstall
ibase_zipdistinstall:
	$(MAKE) -C ibase zipdistinstall
ibase_clean:
	$(MAKE) -C ibase clean
ibase_distclean:
	$(MAKE) -C ibase distclean
ibase_cleanall:
	$(MAKE) -C ibase cleanall
ibase_info:
	$(MAKE) -C ibase info
ibase_makefiles:
	$(MAKE) -C ibase makefiles
ibase:
	$(MAKE) -C ibase all
.PHONY: ibase_all ibase_debug ibase_smart ibase_release ibase_units ibase_examples ibase_shared ibase_install ibase_sourceinstall ibase_exampleinstall ibase_distinstall ibase_zipinstall ibase_zipsourceinstall ibase_zipexampleinstall ibase_zipdistinstall ibase_clean ibase_distclean ibase_cleanall ibase_info ibase_makefiles ibase
endif
ifdef TARGET_DIRS_MYSQL
mysql_all:
	$(MAKE) -C mysql all
mysql_debug:
	$(MAKE) -C mysql debug
mysql_smart:
	$(MAKE) -C mysql smart
mysql_release:
	$(MAKE) -C mysql release
mysql_units:
	$(MAKE) -C mysql units
mysql_examples:
	$(MAKE) -C mysql examples
mysql_shared:
	$(MAKE) -C mysql shared
mysql_install:
	$(MAKE) -C mysql install
mysql_sourceinstall:
	$(MAKE) -C mysql sourceinstall
mysql_exampleinstall:
	$(MAKE) -C mysql exampleinstall
mysql_distinstall:
	$(MAKE) -C mysql distinstall
mysql_zipinstall:
	$(MAKE) -C mysql zipinstall
mysql_zipsourceinstall:
	$(MAKE) -C mysql zipsourceinstall
mysql_zipexampleinstall:
	$(MAKE) -C mysql zipexampleinstall
mysql_zipdistinstall:
	$(MAKE) -C mysql zipdistinstall
mysql_clean:
	$(MAKE) -C mysql clean
mysql_distclean:
	$(MAKE) -C mysql distclean
mysql_cleanall:
	$(MAKE) -C mysql cleanall
mysql_info:
	$(MAKE) -C mysql info
mysql_makefiles:
	$(MAKE) -C mysql makefiles
mysql:
	$(MAKE) -C mysql all
.PHONY: mysql_all mysql_debug mysql_smart mysql_release mysql_units mysql_examples mysql_shared mysql_install mysql_sourceinstall mysql_exampleinstall mysql_distinstall mysql_zipinstall mysql_zipsourceinstall mysql_zipexampleinstall mysql_zipdistinstall mysql_clean mysql_distclean mysql_cleanall mysql_info mysql_makefiles mysql
endif
ifdef TARGET_DIRS_NCURSES
ncurses_all:
	$(MAKE) -C ncurses all
ncurses_debug:
	$(MAKE) -C ncurses debug
ncurses_smart:
	$(MAKE) -C ncurses smart
ncurses_release:
	$(MAKE) -C ncurses release
ncurses_units:
	$(MAKE) -C ncurses units
ncurses_examples:
	$(MAKE) -C ncurses examples
ncurses_shared:
	$(MAKE) -C ncurses shared
ncurses_install:
	$(MAKE) -C ncurses install
ncurses_sourceinstall:
	$(MAKE) -C ncurses sourceinstall
ncurses_exampleinstall:
	$(MAKE) -C ncurses exampleinstall
ncurses_distinstall:
	$(MAKE) -C ncurses distinstall
ncurses_zipinstall:
	$(MAKE) -C ncurses zipinstall
ncurses_zipsourceinstall:
	$(MAKE) -C ncurses zipsourceinstall
ncurses_zipexampleinstall:
	$(MAKE) -C ncurses zipexampleinstall
ncurses_zipdistinstall:
	$(MAKE) -C ncurses zipdistinstall
ncurses_clean:
	$(MAKE) -C ncurses clean
ncurses_distclean:
	$(MAKE) -C ncurses distclean
ncurses_cleanall:
	$(MAKE) -C ncurses cleanall
ncurses_info:
	$(MAKE) -C ncurses info
ncurses_makefiles:
	$(MAKE) -C ncurses makefiles
ncurses:
	$(MAKE) -C ncurses all
.PHONY: ncurses_all ncurses_debug ncurses_smart ncurses_release ncurses_units ncurses_examples ncurses_shared ncurses_install ncurses_sourceinstall ncurses_exampleinstall ncurses_distinstall ncurses_zipinstall ncurses_zipsourceinstall ncurses_zipexampleinstall ncurses_zipdistinstall ncurses_clean ncurses_distclean ncurses_cleanall ncurses_info ncurses_makefiles ncurses
endif
ifdef TARGET_DIRS_ZLIB
zlib_all:
	$(MAKE) -C zlib all
zlib_debug:
	$(MAKE) -C zlib debug
zlib_smart:
	$(MAKE) -C zlib smart
zlib_release:
	$(MAKE) -C zlib release
zlib_units:
	$(MAKE) -C zlib units
zlib_examples:
	$(MAKE) -C zlib examples
zlib_shared:
	$(MAKE) -C zlib shared
zlib_install:
	$(MAKE) -C zlib install
zlib_sourceinstall:
	$(MAKE) -C zlib sourceinstall
zlib_exampleinstall:
	$(MAKE) -C zlib exampleinstall
zlib_distinstall:
	$(MAKE) -C zlib distinstall
zlib_zipinstall:
	$(MAKE) -C zlib zipinstall
zlib_zipsourceinstall:
	$(MAKE) -C zlib zipsourceinstall
zlib_zipexampleinstall:
	$(MAKE) -C zlib zipexampleinstall
zlib_zipdistinstall:
	$(MAKE) -C zlib zipdistinstall
zlib_clean:
	$(MAKE) -C zlib clean
zlib_distclean:
	$(MAKE) -C zlib distclean
zlib_cleanall:
	$(MAKE) -C zlib cleanall
zlib_info:
	$(MAKE) -C zlib info
zlib_makefiles:
	$(MAKE) -C zlib makefiles
zlib:
	$(MAKE) -C zlib all
.PHONY: zlib_all zlib_debug zlib_smart zlib_release zlib_units zlib_examples zlib_shared zlib_install zlib_sourceinstall zlib_exampleinstall zlib_distinstall zlib_zipinstall zlib_zipsourceinstall zlib_zipexampleinstall zlib_zipdistinstall zlib_clean zlib_distclean zlib_cleanall zlib_info zlib_makefiles zlib
endif
ifdef TARGET_DIRS_ORACLE
oracle_all:
	$(MAKE) -C oracle all
oracle_debug:
	$(MAKE) -C oracle debug
oracle_smart:
	$(MAKE) -C oracle smart
oracle_release:
	$(MAKE) -C oracle release
oracle_units:
	$(MAKE) -C oracle units
oracle_examples:
	$(MAKE) -C oracle examples
oracle_shared:
	$(MAKE) -C oracle shared
oracle_install:
	$(MAKE) -C oracle install
oracle_sourceinstall:
	$(MAKE) -C oracle sourceinstall
oracle_exampleinstall:
	$(MAKE) -C oracle exampleinstall
oracle_distinstall:
	$(MAKE) -C oracle distinstall
oracle_zipinstall:
	$(MAKE) -C oracle zipinstall
oracle_zipsourceinstall:
	$(MAKE) -C oracle zipsourceinstall
oracle_zipexampleinstall:
	$(MAKE) -C oracle zipexampleinstall
oracle_zipdistinstall:
	$(MAKE) -C oracle zipdistinstall
oracle_clean:
	$(MAKE) -C oracle clean
oracle_distclean:
	$(MAKE) -C oracle distclean
oracle_cleanall:
	$(MAKE) -C oracle cleanall
oracle_info:
	$(MAKE) -C oracle info
oracle_makefiles:
	$(MAKE) -C oracle makefiles
oracle:
	$(MAKE) -C oracle all
.PHONY: oracle_all oracle_debug oracle_smart oracle_release oracle_units oracle_examples oracle_shared oracle_install oracle_sourceinstall oracle_exampleinstall oracle_distinstall oracle_zipinstall oracle_zipsourceinstall oracle_zipexampleinstall oracle_zipdistinstall oracle_clean oracle_distclean oracle_cleanall oracle_info oracle_makefiles oracle
endif
ifdef TARGET_DIRS_DBUS
dbus_all:
	$(MAKE) -C dbus all
dbus_debug:
	$(MAKE) -C dbus debug
dbus_smart:
	$(MAKE) -C dbus smart
dbus_release:
	$(MAKE) -C dbus release
dbus_units:
	$(MAKE) -C dbus units
dbus_examples:
	$(MAKE) -C dbus examples
dbus_shared:
	$(MAKE) -C dbus shared
dbus_install:
	$(MAKE) -C dbus install
dbus_sourceinstall:
	$(MAKE) -C dbus sourceinstall
dbus_exampleinstall:
	$(MAKE) -C dbus exampleinstall
dbus_distinstall:
	$(MAKE) -C dbus distinstall
dbus_zipinstall:
	$(MAKE) -C dbus zipinstall
dbus_zipsourceinstall:
	$(MAKE) -C dbus zipsourceinstall
dbus_zipexampleinstall:
	$(MAKE) -C dbus zipexampleinstall
dbus_zipdistinstall:
	$(MAKE) -C dbus zipdistinstall
dbus_clean:
	$(MAKE) -C dbus clean
dbus_distclean:
	$(MAKE) -C dbus distclean
dbus_cleanall:
	$(MAKE) -C dbus cleanall
dbus_info:
	$(MAKE) -C dbus info
dbus_makefiles:
	$(MAKE) -C dbus makefiles
dbus:
	$(MAKE) -C dbus all
.PHONY: dbus_all dbus_debug dbus_smart dbus_release dbus_units dbus_examples dbus_shared dbus_install dbus_sourceinstall dbus_exampleinstall dbus_distinstall dbus_zipinstall dbus_zipsourceinstall dbus_zipexampleinstall dbus_zipdistinstall dbus_clean dbus_distclean dbus_cleanall dbus_info dbus_makefiles dbus
endif
ifdef TARGET_DIRS_ODBC
odbc_all:
	$(MAKE) -C odbc all
odbc_debug:
	$(MAKE) -C odbc debug
odbc_smart:
	$(MAKE) -C odbc smart
odbc_release:
	$(MAKE) -C odbc release
odbc_units:
	$(MAKE) -C odbc units
odbc_examples:
	$(MAKE) -C odbc examples
odbc_shared:
	$(MAKE) -C odbc shared
odbc_install:
	$(MAKE) -C odbc install
odbc_sourceinstall:
	$(MAKE) -C odbc sourceinstall
odbc_exampleinstall:
	$(MAKE) -C odbc exampleinstall
odbc_distinstall:
	$(MAKE) -C odbc distinstall
odbc_zipinstall:
	$(MAKE) -C odbc zipinstall
odbc_zipsourceinstall:
	$(MAKE) -C odbc zipsourceinstall
odbc_zipexampleinstall:
	$(MAKE) -C odbc zipexampleinstall
odbc_zipdistinstall:
	$(MAKE) -C odbc zipdistinstall
odbc_clean:
	$(MAKE) -C odbc clean
odbc_distclean:
	$(MAKE) -C odbc distclean
odbc_cleanall:
	$(MAKE) -C odbc cleanall
odbc_info:
	$(MAKE) -C odbc info
odbc_makefiles:
	$(MAKE) -C odbc makefiles
odbc:
	$(MAKE) -C odbc all
.PHONY: odbc_all odbc_debug odbc_smart odbc_release odbc_units odbc_examples odbc_shared odbc_install odbc_sourceinstall odbc_exampleinstall odbc_distinstall odbc_zipinstall odbc_zipsourceinstall odbc_zipexampleinstall odbc_zipdistinstall odbc_clean odbc_distclean odbc_cleanall odbc_info odbc_makefiles odbc
endif
ifdef TARGET_DIRS_POSTGRES
postgres_all:
	$(MAKE) -C postgres all
postgres_debug:
	$(MAKE) -C postgres debug
postgres_smart:
	$(MAKE) -C postgres smart
postgres_release:
	$(MAKE) -C postgres release
postgres_units:
	$(MAKE) -C postgres units
postgres_examples:
	$(MAKE) -C postgres examples
postgres_shared:
	$(MAKE) -C postgres shared
postgres_install:
	$(MAKE) -C postgres install
postgres_sourceinstall:
	$(MAKE) -C postgres sourceinstall
postgres_exampleinstall:
	$(MAKE) -C postgres exampleinstall
postgres_distinstall:
	$(MAKE) -C postgres distinstall
postgres_zipinstall:
	$(MAKE) -C postgres zipinstall
postgres_zipsourceinstall:
	$(MAKE) -C postgres zipsourceinstall
postgres_zipexampleinstall:
	$(MAKE) -C postgres zipexampleinstall
postgres_zipdistinstall:
	$(MAKE) -C postgres zipdistinstall
postgres_clean:
	$(MAKE) -C postgres clean
postgres_distclean:
	$(MAKE) -C postgres distclean
postgres_cleanall:
	$(MAKE) -C postgres cleanall
postgres_info:
	$(MAKE) -C postgres info
postgres_makefiles:
	$(MAKE) -C postgres makefiles
postgres:
	$(MAKE) -C postgres all
.PHONY: postgres_all postgres_debug postgres_smart postgres_release postgres_units postgres_examples postgres_shared postgres_install postgres_sourceinstall postgres_exampleinstall postgres_distinstall postgres_zipinstall postgres_zipsourceinstall postgres_zipexampleinstall postgres_zipdistinstall postgres_clean postgres_distclean postgres_cleanall postgres_info postgres_makefiles postgres
endif
ifdef TARGET_DIRS_SQLITE
sqlite_all:
	$(MAKE) -C sqlite all
sqlite_debug:
	$(MAKE) -C sqlite debug
sqlite_smart:
	$(MAKE) -C sqlite smart
sqlite_release:
	$(MAKE) -C sqlite release
sqlite_units:
	$(MAKE) -C sqlite units
sqlite_examples:
	$(MAKE) -C sqlite examples
sqlite_shared:
	$(MAKE) -C sqlite shared
sqlite_install:
	$(MAKE) -C sqlite install
sqlite_sourceinstall:
	$(MAKE) -C sqlite sourceinstall
sqlite_exampleinstall:
	$(MAKE) -C sqlite exampleinstall
sqlite_distinstall:
	$(MAKE) -C sqlite distinstall
sqlite_zipinstall:
	$(MAKE) -C sqlite zipinstall
sqlite_zipsourceinstall:
	$(MAKE) -C sqlite zipsourceinstall
sqlite_zipexampleinstall:
	$(MAKE) -C sqlite zipexampleinstall
sqlite_zipdistinstall:
	$(MAKE) -C sqlite zipdistinstall
sqlite_clean:
	$(MAKE) -C sqlite clean
sqlite_distclean:
	$(MAKE) -C sqlite distclean
sqlite_cleanall:
	$(MAKE) -C sqlite cleanall
sqlite_info:
	$(MAKE) -C sqlite info
sqlite_makefiles:
	$(MAKE) -C sqlite makefiles
sqlite:
	$(MAKE) -C sqlite all
.PHONY: sqlite_all sqlite_debug sqlite_smart sqlite_release sqlite_units sqlite_examples sqlite_shared sqlite_install sqlite_sourceinstall sqlite_exampleinstall sqlite_distinstall sqlite_zipinstall sqlite_zipsourceinstall sqlite_zipexampleinstall sqlite_zipdistinstall sqlite_clean sqlite_distclean sqlite_cleanall sqlite_info sqlite_makefiles sqlite
endif
ifdef TARGET_DIRS_PTHREADS
pthreads_all:
	$(MAKE) -C pthreads all
pthreads_debug:
	$(MAKE) -C pthreads debug
pthreads_smart:
	$(MAKE) -C pthreads smart
pthreads_release:
	$(MAKE) -C pthreads release
pthreads_units:
	$(MAKE) -C pthreads units
pthreads_examples:
	$(MAKE) -C pthreads examples
pthreads_shared:
	$(MAKE) -C pthreads shared
pthreads_install:
	$(MAKE) -C pthreads install
pthreads_sourceinstall:
	$(MAKE) -C pthreads sourceinstall
pthreads_exampleinstall:
	$(MAKE) -C pthreads exampleinstall
pthreads_distinstall:
	$(MAKE) -C pthreads distinstall
pthreads_zipinstall:
	$(MAKE) -C pthreads zipinstall
pthreads_zipsourceinstall:
	$(MAKE) -C pthreads zipsourceinstall
pthreads_zipexampleinstall:
	$(MAKE) -C pthreads zipexampleinstall
pthreads_zipdistinstall:
	$(MAKE) -C pthreads zipdistinstall
pthreads_clean:
	$(MAKE) -C pthreads clean
pthreads_distclean:
	$(MAKE) -C pthreads distclean
pthreads_cleanall:
	$(MAKE) -C pthreads cleanall
pthreads_info:
	$(MAKE) -C pthreads info
pthreads_makefiles:
	$(MAKE) -C pthreads makefiles
pthreads:
	$(MAKE) -C pthreads all
.PHONY: pthreads_all pthreads_debug pthreads_smart pthreads_release pthreads_units pthreads_examples pthreads_shared pthreads_install pthreads_sourceinstall pthreads_exampleinstall pthreads_distinstall pthreads_zipinstall pthreads_zipsourceinstall pthreads_zipexampleinstall pthreads_zipdistinstall pthreads_clean pthreads_distclean pthreads_cleanall pthreads_info pthreads_makefiles pthreads
endif
ifdef TARGET_DIRS_IMAGEMAGICK
imagemagick_all:
	$(MAKE) -C imagemagick all
imagemagick_debug:
	$(MAKE) -C imagemagick debug
imagemagick_smart:
	$(MAKE) -C imagemagick smart
imagemagick_release:
	$(MAKE) -C imagemagick release
imagemagick_units:
	$(MAKE) -C imagemagick units
imagemagick_examples:
	$(MAKE) -C imagemagick examples
imagemagick_shared:
	$(MAKE) -C imagemagick shared
imagemagick_install:
	$(MAKE) -C imagemagick install
imagemagick_sourceinstall:
	$(MAKE) -C imagemagick sourceinstall
imagemagick_exampleinstall:
	$(MAKE) -C imagemagick exampleinstall
imagemagick_distinstall:
	$(MAKE) -C imagemagick distinstall
imagemagick_zipinstall:
	$(MAKE) -C imagemagick zipinstall
imagemagick_zipsourceinstall:
	$(MAKE) -C imagemagick zipsourceinstall
imagemagick_zipexampleinstall:
	$(MAKE) -C imagemagick zipexampleinstall
imagemagick_zipdistinstall:
	$(MAKE) -C imagemagick zipdistinstall
imagemagick_clean:
	$(MAKE) -C imagemagick clean
imagemagick_distclean:
	$(MAKE) -C imagemagick distclean
imagemagick_cleanall:
	$(MAKE) -C imagemagick cleanall
imagemagick_info:
	$(MAKE) -C imagemagick info
imagemagick_makefiles:
	$(MAKE) -C imagemagick makefiles
imagemagick:
	$(MAKE) -C imagemagick all
.PHONY: imagemagick_all imagemagick_debug imagemagick_smart imagemagick_release imagemagick_units imagemagick_examples imagemagick_shared imagemagick_install imagemagick_sourceinstall imagemagick_exampleinstall imagemagick_distinstall imagemagick_zipinstall imagemagick_zipsourceinstall imagemagick_zipexampleinstall imagemagick_zipdistinstall imagemagick_clean imagemagick_distclean imagemagick_cleanall imagemagick_info imagemagick_makefiles imagemagick
endif
ifdef TARGET_DIRS_GDBINT
gdbint_all:
	$(MAKE) -C gdbint all
gdbint_debug:
	$(MAKE) -C gdbint debug
gdbint_smart:
	$(MAKE) -C gdbint smart
gdbint_release:
	$(MAKE) -C gdbint release
gdbint_units:
	$(MAKE) -C gdbint units
gdbint_examples:
	$(MAKE) -C gdbint examples
gdbint_shared:
	$(MAKE) -C gdbint shared
gdbint_install:
	$(MAKE) -C gdbint install
gdbint_sourceinstall:
	$(MAKE) -C gdbint sourceinstall
gdbint_exampleinstall:
	$(MAKE) -C gdbint exampleinstall
gdbint_distinstall:
	$(MAKE) -C gdbint distinstall
gdbint_zipinstall:
	$(MAKE) -C gdbint zipinstall
gdbint_zipsourceinstall:
	$(MAKE) -C gdbint zipsourceinstall
gdbint_zipexampleinstall:
	$(MAKE) -C gdbint zipexampleinstall
gdbint_zipdistinstall:
	$(MAKE) -C gdbint zipdistinstall
gdbint_clean:
	$(MAKE) -C gdbint clean
gdbint_distclean:
	$(MAKE) -C gdbint distclean
gdbint_cleanall:
	$(MAKE) -C gdbint cleanall
gdbint_info:
	$(MAKE) -C gdbint info
gdbint_makefiles:
	$(MAKE) -C gdbint makefiles
gdbint:
	$(MAKE) -C gdbint all
.PHONY: gdbint_all gdbint_debug gdbint_smart gdbint_release gdbint_units gdbint_examples gdbint_shared gdbint_install gdbint_sourceinstall gdbint_exampleinstall gdbint_distinstall gdbint_zipinstall gdbint_zipsourceinstall gdbint_zipexampleinstall gdbint_zipdistinstall gdbint_clean gdbint_distclean gdbint_cleanall gdbint_info gdbint_makefiles gdbint
endif
ifdef TARGET_DIRS_LIBPNG
libpng_all:
	$(MAKE) -C libpng all
libpng_debug:
	$(MAKE) -C libpng debug
libpng_smart:
	$(MAKE) -C libpng smart
libpng_release:
	$(MAKE) -C libpng release
libpng_units:
	$(MAKE) -C libpng units
libpng_examples:
	$(MAKE) -C libpng examples
libpng_shared:
	$(MAKE) -C libpng shared
libpng_install:
	$(MAKE) -C libpng install
libpng_sourceinstall:
	$(MAKE) -C libpng sourceinstall
libpng_exampleinstall:
	$(MAKE) -C libpng exampleinstall
libpng_distinstall:
	$(MAKE) -C libpng distinstall
libpng_zipinstall:
	$(MAKE) -C libpng zipinstall
libpng_zipsourceinstall:
	$(MAKE) -C libpng zipsourceinstall
libpng_zipexampleinstall:
	$(MAKE) -C libpng zipexampleinstall
libpng_zipdistinstall:
	$(MAKE) -C libpng zipdistinstall
libpng_clean:
	$(MAKE) -C libpng clean
libpng_distclean:
	$(MAKE) -C libpng distclean
libpng_cleanall:
	$(MAKE) -C libpng cleanall
libpng_info:
	$(MAKE) -C libpng info
libpng_makefiles:
	$(MAKE) -C libpng makefiles
libpng:
	$(MAKE) -C libpng all
.PHONY: libpng_all libpng_debug libpng_smart libpng_release libpng_units libpng_examples libpng_shared libpng_install libpng_sourceinstall libpng_exampleinstall libpng_distinstall libpng_zipinstall libpng_zipsourceinstall libpng_zipexampleinstall libpng_zipdistinstall libpng_clean libpng_distclean libpng_cleanall libpng_info libpng_makefiles libpng
endif
ifdef TARGET_DIRS_X11
x11_all:
	$(MAKE) -C x11 all
x11_debug:
	$(MAKE) -C x11 debug
x11_smart:
	$(MAKE) -C x11 smart
x11_release:
	$(MAKE) -C x11 release
x11_units:
	$(MAKE) -C x11 units
x11_examples:
	$(MAKE) -C x11 examples
x11_shared:
	$(MAKE) -C x11 shared
x11_install:
	$(MAKE) -C x11 install
x11_sourceinstall:
	$(MAKE) -C x11 sourceinstall
x11_exampleinstall:
	$(MAKE) -C x11 exampleinstall
x11_distinstall:
	$(MAKE) -C x11 distinstall
x11_zipinstall:
	$(MAKE) -C x11 zipinstall
x11_zipsourceinstall:
	$(MAKE) -C x11 zipsourceinstall
x11_zipexampleinstall:
	$(MAKE) -C x11 zipexampleinstall
x11_zipdistinstall:
	$(MAKE) -C x11 zipdistinstall
x11_clean:
	$(MAKE) -C x11 clean
x11_distclean:
	$(MAKE) -C x11 distclean
x11_cleanall:
	$(MAKE) -C x11 cleanall
x11_info:
	$(MAKE) -C x11 info
x11_makefiles:
	$(MAKE) -C x11 makefiles
x11:
	$(MAKE) -C x11 all
.PHONY: x11_all x11_debug x11_smart x11_release x11_units x11_examples x11_shared x11_install x11_sourceinstall x11_exampleinstall x11_distinstall x11_zipinstall x11_zipsourceinstall x11_zipexampleinstall x11_zipdistinstall x11_clean x11_distclean x11_cleanall x11_info x11_makefiles x11
endif
ifdef TARGET_DIRS_UUID
uuid_all:
	$(MAKE) -C uuid all
uuid_debug:
	$(MAKE) -C uuid debug
uuid_smart:
	$(MAKE) -C uuid smart
uuid_release:
	$(MAKE) -C uuid release
uuid_units:
	$(MAKE) -C uuid units
uuid_examples:
	$(MAKE) -C uuid examples
uuid_shared:
	$(MAKE) -C uuid shared
uuid_install:
	$(MAKE) -C uuid install
uuid_sourceinstall:
	$(MAKE) -C uuid sourceinstall
uuid_exampleinstall:
	$(MAKE) -C uuid exampleinstall
uuid_distinstall:
	$(MAKE) -C uuid distinstall
uuid_zipinstall:
	$(MAKE) -C uuid zipinstall
uuid_zipsourceinstall:
	$(MAKE) -C uuid zipsourceinstall
uuid_zipexampleinstall:
	$(MAKE) -C uuid zipexampleinstall
uuid_zipdistinstall:
	$(MAKE) -C uuid zipdistinstall
uuid_clean:
	$(MAKE) -C uuid clean
uuid_distclean:
	$(MAKE) -C uuid distclean
uuid_cleanall:
	$(MAKE) -C uuid cleanall
uuid_info:
	$(MAKE) -C uuid info
uuid_makefiles:
	$(MAKE) -C uuid makefiles
uuid:
	$(MAKE) -C uuid all
.PHONY: uuid_all uuid_debug uuid_smart uuid_release uuid_units uuid_examples uuid_shared uuid_install uuid_sourceinstall uuid_exampleinstall uuid_distinstall uuid_zipinstall uuid_zipsourceinstall uuid_zipexampleinstall uuid_zipdistinstall uuid_clean uuid_distclean uuid_cleanall uuid_info uuid_makefiles uuid
endif
ifdef TARGET_DIRS_LDAP
ldap_all:
	$(MAKE) -C ldap all
ldap_debug:
	$(MAKE) -C ldap debug
ldap_smart:
	$(MAKE) -C ldap smart
ldap_release:
	$(MAKE) -C ldap release
ldap_units:
	$(MAKE) -C ldap units
ldap_examples:
	$(MAKE) -C ldap examples
ldap_shared:
	$(MAKE) -C ldap shared
ldap_install:
	$(MAKE) -C ldap install
ldap_sourceinstall:
	$(MAKE) -C ldap sourceinstall
ldap_exampleinstall:
	$(MAKE) -C ldap exampleinstall
ldap_distinstall:
	$(MAKE) -C ldap distinstall
ldap_zipinstall:
	$(MAKE) -C ldap zipinstall
ldap_zipsourceinstall:
	$(MAKE) -C ldap zipsourceinstall
ldap_zipexampleinstall:
	$(MAKE) -C ldap zipexampleinstall
ldap_zipdistinstall:
	$(MAKE) -C ldap zipdistinstall
ldap_clean:
	$(MAKE) -C ldap clean
ldap_distclean:
	$(MAKE) -C ldap distclean
ldap_cleanall:
	$(MAKE) -C ldap cleanall
ldap_info:
	$(MAKE) -C ldap info
ldap_makefiles:
	$(MAKE) -C ldap makefiles
ldap:
	$(MAKE) -C ldap all
.PHONY: ldap_all ldap_debug ldap_smart ldap_release ldap_units ldap_examples ldap_shared ldap_install ldap_sourceinstall ldap_exampleinstall ldap_distinstall ldap_zipinstall ldap_zipsourceinstall ldap_zipexampleinstall ldap_zipdistinstall ldap_clean ldap_distclean ldap_cleanall ldap_info ldap_makefiles ldap
endif
ifdef TARGET_DIRS_MODPLUG
modplug_all:
	$(MAKE) -C modplug all
modplug_debug:
	$(MAKE) -C modplug debug
modplug_smart:
	$(MAKE) -C modplug smart
modplug_release:
	$(MAKE) -C modplug release
modplug_units:
	$(MAKE) -C modplug units
modplug_examples:
	$(MAKE) -C modplug examples
modplug_shared:
	$(MAKE) -C modplug shared
modplug_install:
	$(MAKE) -C modplug install
modplug_sourceinstall:
	$(MAKE) -C modplug sourceinstall
modplug_exampleinstall:
	$(MAKE) -C modplug exampleinstall
modplug_distinstall:
	$(MAKE) -C modplug distinstall
modplug_zipinstall:
	$(MAKE) -C modplug zipinstall
modplug_zipsourceinstall:
	$(MAKE) -C modplug zipsourceinstall
modplug_zipexampleinstall:
	$(MAKE) -C modplug zipexampleinstall
modplug_zipdistinstall:
	$(MAKE) -C modplug zipdistinstall
modplug_clean:
	$(MAKE) -C modplug clean
modplug_distclean:
	$(MAKE) -C modplug distclean
modplug_cleanall:
	$(MAKE) -C modplug cleanall
modplug_info:
	$(MAKE) -C modplug info
modplug_makefiles:
	$(MAKE) -C modplug makefiles
modplug:
	$(MAKE) -C modplug all
.PHONY: modplug_all modplug_debug modplug_smart modplug_release modplug_units modplug_examples modplug_shared modplug_install modplug_sourceinstall modplug_exampleinstall modplug_distinstall modplug_zipinstall modplug_zipsourceinstall modplug_zipexampleinstall modplug_zipdistinstall modplug_clean modplug_distclean modplug_cleanall modplug_info modplug_makefiles modplug
endif
ifdef TARGET_DIRS_DTS
dts_all:
	$(MAKE) -C dts all
dts_debug:
	$(MAKE) -C dts debug
dts_smart:
	$(MAKE) -C dts smart
dts_release:
	$(MAKE) -C dts release
dts_units:
	$(MAKE) -C dts units
dts_examples:
	$(MAKE) -C dts examples
dts_shared:
	$(MAKE) -C dts shared
dts_install:
	$(MAKE) -C dts install
dts_sourceinstall:
	$(MAKE) -C dts sourceinstall
dts_exampleinstall:
	$(MAKE) -C dts exampleinstall
dts_distinstall:
	$(MAKE) -C dts distinstall
dts_zipinstall:
	$(MAKE) -C dts zipinstall
dts_zipsourceinstall:
	$(MAKE) -C dts zipsourceinstall
dts_zipexampleinstall:
	$(MAKE) -C dts zipexampleinstall
dts_zipdistinstall:
	$(MAKE) -C dts zipdistinstall
dts_clean:
	$(MAKE) -C dts clean
dts_distclean:
	$(MAKE) -C dts distclean
dts_cleanall:
	$(MAKE) -C dts cleanall
dts_info:
	$(MAKE) -C dts info
dts_makefiles:
	$(MAKE) -C dts makefiles
dts:
	$(MAKE) -C dts all
.PHONY: dts_all dts_debug dts_smart dts_release dts_units dts_examples dts_shared dts_install dts_sourceinstall dts_exampleinstall dts_distinstall dts_zipinstall dts_zipsourceinstall dts_zipexampleinstall dts_zipdistinstall dts_clean dts_distclean dts_cleanall dts_info dts_makefiles dts
endif
ifdef TARGET_DIRS_MAD
mad_all:
	$(MAKE) -C mad all
mad_debug:
	$(MAKE) -C mad debug
mad_smart:
	$(MAKE) -C mad smart
mad_release:
	$(MAKE) -C mad release
mad_units:
	$(MAKE) -C mad units
mad_examples:
	$(MAKE) -C mad examples
mad_shared:
	$(MAKE) -C mad shared
mad_install:
	$(MAKE) -C mad install
mad_sourceinstall:
	$(MAKE) -C mad sourceinstall
mad_exampleinstall:
	$(MAKE) -C mad exampleinstall
mad_distinstall:
	$(MAKE) -C mad distinstall
mad_zipinstall:
	$(MAKE) -C mad zipinstall
mad_zipsourceinstall:
	$(MAKE) -C mad zipsourceinstall
mad_zipexampleinstall:
	$(MAKE) -C mad zipexampleinstall
mad_zipdistinstall:
	$(MAKE) -C mad zipdistinstall
mad_clean:
	$(MAKE) -C mad clean
mad_distclean:
	$(MAKE) -C mad distclean
mad_cleanall:
	$(MAKE) -C mad cleanall
mad_info:
	$(MAKE) -C mad info
mad_makefiles:
	$(MAKE) -C mad makefiles
mad:
	$(MAKE) -C mad all
.PHONY: mad_all mad_debug mad_smart mad_release mad_units mad_examples mad_shared mad_install mad_sourceinstall mad_exampleinstall mad_distinstall mad_zipinstall mad_zipsourceinstall mad_zipexampleinstall mad_zipdistinstall mad_clean mad_distclean mad_cleanall mad_info mad_makefiles mad
endif
ifdef TARGET_DIRS_GDBM
gdbm_all:
	$(MAKE) -C gdbm all
gdbm_debug:
	$(MAKE) -C gdbm debug
gdbm_smart:
	$(MAKE) -C gdbm smart
gdbm_release:
	$(MAKE) -C gdbm release
gdbm_units:
	$(MAKE) -C gdbm units
gdbm_examples:
	$(MAKE) -C gdbm examples
gdbm_shared:
	$(MAKE) -C gdbm shared
gdbm_install:
	$(MAKE) -C gdbm install
gdbm_sourceinstall:
	$(MAKE) -C gdbm sourceinstall
gdbm_exampleinstall:
	$(MAKE) -C gdbm exampleinstall
gdbm_distinstall:
	$(MAKE) -C gdbm distinstall
gdbm_zipinstall:
	$(MAKE) -C gdbm zipinstall
gdbm_zipsourceinstall:
	$(MAKE) -C gdbm zipsourceinstall
gdbm_zipexampleinstall:
	$(MAKE) -C gdbm zipexampleinstall
gdbm_zipdistinstall:
	$(MAKE) -C gdbm zipdistinstall
gdbm_clean:
	$(MAKE) -C gdbm clean
gdbm_distclean:
	$(MAKE) -C gdbm distclean
gdbm_cleanall:
	$(MAKE) -C gdbm cleanall
gdbm_info:
	$(MAKE) -C gdbm info
gdbm_makefiles:
	$(MAKE) -C gdbm makefiles
gdbm:
	$(MAKE) -C gdbm all
.PHONY: gdbm_all gdbm_debug gdbm_smart gdbm_release gdbm_units gdbm_examples gdbm_shared gdbm_install gdbm_sourceinstall gdbm_exampleinstall gdbm_distinstall gdbm_zipinstall gdbm_zipsourceinstall gdbm_zipexampleinstall gdbm_zipdistinstall gdbm_clean gdbm_distclean gdbm_cleanall gdbm_info gdbm_makefiles gdbm
endif
ifdef TARGET_DIRS_TCL
tcl_all:
	$(MAKE) -C tcl all
tcl_debug:
	$(MAKE) -C tcl debug
tcl_smart:
	$(MAKE) -C tcl smart
tcl_release:
	$(MAKE) -C tcl release
tcl_units:
	$(MAKE) -C tcl units
tcl_examples:
	$(MAKE) -C tcl examples
tcl_shared:
	$(MAKE) -C tcl shared
tcl_install:
	$(MAKE) -C tcl install
tcl_sourceinstall:
	$(MAKE) -C tcl sourceinstall
tcl_exampleinstall:
	$(MAKE) -C tcl exampleinstall
tcl_distinstall:
	$(MAKE) -C tcl distinstall
tcl_zipinstall:
	$(MAKE) -C tcl zipinstall
tcl_zipsourceinstall:
	$(MAKE) -C tcl zipsourceinstall
tcl_zipexampleinstall:
	$(MAKE) -C tcl zipexampleinstall
tcl_zipdistinstall:
	$(MAKE) -C tcl zipdistinstall
tcl_clean:
	$(MAKE) -C tcl clean
tcl_distclean:
	$(MAKE) -C tcl distclean
tcl_cleanall:
	$(MAKE) -C tcl cleanall
tcl_info:
	$(MAKE) -C tcl info
tcl_makefiles:
	$(MAKE) -C tcl makefiles
tcl:
	$(MAKE) -C tcl all
.PHONY: tcl_all tcl_debug tcl_smart tcl_release tcl_units tcl_examples tcl_shared tcl_install tcl_sourceinstall tcl_exampleinstall tcl_distinstall tcl_zipinstall tcl_zipsourceinstall tcl_zipexampleinstall tcl_zipdistinstall tcl_clean tcl_distclean tcl_cleanall tcl_info tcl_makefiles tcl
endif
ifdef TARGET_DIRS_SYSLOG
syslog_all:
	$(MAKE) -C syslog all
syslog_debug:
	$(MAKE) -C syslog debug
syslog_smart:
	$(MAKE) -C syslog smart
syslog_release:
	$(MAKE) -C syslog release
syslog_units:
	$(MAKE) -C syslog units
syslog_examples:
	$(MAKE) -C syslog examples
syslog_shared:
	$(MAKE) -C syslog shared
syslog_install:
	$(MAKE) -C syslog install
syslog_sourceinstall:
	$(MAKE) -C syslog sourceinstall
syslog_exampleinstall:
	$(MAKE) -C syslog exampleinstall
syslog_distinstall:
	$(MAKE) -C syslog distinstall
syslog_zipinstall:
	$(MAKE) -C syslog zipinstall
syslog_zipsourceinstall:
	$(MAKE) -C syslog zipsourceinstall
syslog_zipexampleinstall:
	$(MAKE) -C syslog zipexampleinstall
syslog_zipdistinstall:
	$(MAKE) -C syslog zipdistinstall
syslog_clean:
	$(MAKE) -C syslog clean
syslog_distclean:
	$(MAKE) -C syslog distclean
syslog_cleanall:
	$(MAKE) -C syslog cleanall
syslog_info:
	$(MAKE) -C syslog info
syslog_makefiles:
	$(MAKE) -C syslog makefiles
syslog:
	$(MAKE) -C syslog all
.PHONY: syslog_all syslog_debug syslog_smart syslog_release syslog_units syslog_examples syslog_shared syslog_install syslog_sourceinstall syslog_exampleinstall syslog_distinstall syslog_zipinstall syslog_zipsourceinstall syslog_zipexampleinstall syslog_zipdistinstall syslog_clean syslog_distclean syslog_cleanall syslog_info syslog_makefiles syslog
endif
ifdef TARGET_DIRS_LIBCURL
libcurl_all:
	$(MAKE) -C libcurl all
libcurl_debug:
	$(MAKE) -C libcurl debug
libcurl_smart:
	$(MAKE) -C libcurl smart
libcurl_release:
	$(MAKE) -C libcurl release
libcurl_units:
	$(MAKE) -C libcurl units
libcurl_examples:
	$(MAKE) -C libcurl examples
libcurl_shared:
	$(MAKE) -C libcurl shared
libcurl_install:
	$(MAKE) -C libcurl install
libcurl_sourceinstall:
	$(MAKE) -C libcurl sourceinstall
libcurl_exampleinstall:
	$(MAKE) -C libcurl exampleinstall
libcurl_distinstall:
	$(MAKE) -C libcurl distinstall
libcurl_zipinstall:
	$(MAKE) -C libcurl zipinstall
libcurl_zipsourceinstall:
	$(MAKE) -C libcurl zipsourceinstall
libcurl_zipexampleinstall:
	$(MAKE) -C libcurl zipexampleinstall
libcurl_zipdistinstall:
	$(MAKE) -C libcurl zipdistinstall
libcurl_clean:
	$(MAKE) -C libcurl clean
libcurl_distclean:
	$(MAKE) -C libcurl distclean
libcurl_cleanall:
	$(MAKE) -C libcurl cleanall
libcurl_info:
	$(MAKE) -C libcurl info
libcurl_makefiles:
	$(MAKE) -C libcurl makefiles
libcurl:
	$(MAKE) -C libcurl all
.PHONY: libcurl_all libcurl_debug libcurl_smart libcurl_release libcurl_units libcurl_examples libcurl_shared libcurl_install libcurl_sourceinstall libcurl_exampleinstall libcurl_distinstall libcurl_zipinstall libcurl_zipsourceinstall libcurl_zipexampleinstall libcurl_zipdistinstall libcurl_clean libcurl_distclean libcurl_cleanall libcurl_info libcurl_makefiles libcurl
endif
ifdef TARGET_DIRS_OPENGL
opengl_all:
	$(MAKE) -C opengl all
opengl_debug:
	$(MAKE) -C opengl debug
opengl_smart:
	$(MAKE) -C opengl smart
opengl_release:
	$(MAKE) -C opengl release
opengl_units:
	$(MAKE) -C opengl units
opengl_examples:
	$(MAKE) -C opengl examples
opengl_shared:
	$(MAKE) -C opengl shared
opengl_install:
	$(MAKE) -C opengl install
opengl_sourceinstall:
	$(MAKE) -C opengl sourceinstall
opengl_exampleinstall:
	$(MAKE) -C opengl exampleinstall
opengl_distinstall:
	$(MAKE) -C opengl distinstall
opengl_zipinstall:
	$(MAKE) -C opengl zipinstall
opengl_zipsourceinstall:
	$(MAKE) -C opengl zipsourceinstall
opengl_zipexampleinstall:
	$(MAKE) -C opengl zipexampleinstall
opengl_zipdistinstall:
	$(MAKE) -C opengl zipdistinstall
opengl_clean:
	$(MAKE) -C opengl clean
opengl_distclean:
	$(MAKE) -C opengl distclean
opengl_cleanall:
	$(MAKE) -C opengl cleanall
opengl_info:
	$(MAKE) -C opengl info
opengl_makefiles:
	$(MAKE) -C opengl makefiles
opengl:
	$(MAKE) -C opengl all
.PHONY: opengl_all opengl_debug opengl_smart opengl_release opengl_units opengl_examples opengl_shared opengl_install opengl_sourceinstall opengl_exampleinstall opengl_distinstall opengl_zipinstall opengl_zipsourceinstall opengl_zipexampleinstall opengl_zipdistinstall opengl_clean opengl_distclean opengl_cleanall opengl_info opengl_makefiles opengl
endif
ifdef TARGET_DIRS_CAIRO
cairo_all:
	$(MAKE) -C cairo all
cairo_debug:
	$(MAKE) -C cairo debug
cairo_smart:
	$(MAKE) -C cairo smart
cairo_release:
	$(MAKE) -C cairo release
cairo_units:
	$(MAKE) -C cairo units
cairo_examples:
	$(MAKE) -C cairo examples
cairo_shared:
	$(MAKE) -C cairo shared
cairo_install:
	$(MAKE) -C cairo install
cairo_sourceinstall:
	$(MAKE) -C cairo sourceinstall
cairo_exampleinstall:
	$(MAKE) -C cairo exampleinstall
cairo_distinstall:
	$(MAKE) -C cairo distinstall
cairo_zipinstall:
	$(MAKE) -C cairo zipinstall
cairo_zipsourceinstall:
	$(MAKE) -C cairo zipsourceinstall
cairo_zipexampleinstall:
	$(MAKE) -C cairo zipexampleinstall
cairo_zipdistinstall:
	$(MAKE) -C cairo zipdistinstall
cairo_clean:
	$(MAKE) -C cairo clean
cairo_distclean:
	$(MAKE) -C cairo distclean
cairo_cleanall:
	$(MAKE) -C cairo cleanall
cairo_info:
	$(MAKE) -C cairo info
cairo_makefiles:
	$(MAKE) -C cairo makefiles
cairo:
	$(MAKE) -C cairo all
.PHONY: cairo_all cairo_debug cairo_smart cairo_release cairo_units cairo_examples cairo_shared cairo_install cairo_sourceinstall cairo_exampleinstall cairo_distinstall cairo_zipinstall cairo_zipsourceinstall cairo_zipexampleinstall cairo_zipdistinstall cairo_clean cairo_distclean cairo_cleanall cairo_info cairo_makefiles cairo
endif
ifdef TARGET_DIRS_GTK2
gtk2_all:
	$(MAKE) -C gtk2 all
gtk2_debug:
	$(MAKE) -C gtk2 debug
gtk2_smart:
	$(MAKE) -C gtk2 smart
gtk2_release:
	$(MAKE) -C gtk2 release
gtk2_units:
	$(MAKE) -C gtk2 units
gtk2_examples:
	$(MAKE) -C gtk2 examples
gtk2_shared:
	$(MAKE) -C gtk2 shared
gtk2_install:
	$(MAKE) -C gtk2 install
gtk2_sourceinstall:
	$(MAKE) -C gtk2 sourceinstall
gtk2_exampleinstall:
	$(MAKE) -C gtk2 exampleinstall
gtk2_distinstall:
	$(MAKE) -C gtk2 distinstall
gtk2_zipinstall:
	$(MAKE) -C gtk2 zipinstall
gtk2_zipsourceinstall:
	$(MAKE) -C gtk2 zipsourceinstall
gtk2_zipexampleinstall:
	$(MAKE) -C gtk2 zipexampleinstall
gtk2_zipdistinstall:
	$(MAKE) -C gtk2 zipdistinstall
gtk2_clean:
	$(MAKE) -C gtk2 clean
gtk2_distclean:
	$(MAKE) -C gtk2 distclean
gtk2_cleanall:
	$(MAKE) -C gtk2 cleanall
gtk2_info:
	$(MAKE) -C gtk2 info
gtk2_makefiles:
	$(MAKE) -C gtk2 makefiles
gtk2:
	$(MAKE) -C gtk2 all
.PHONY: gtk2_all gtk2_debug gtk2_smart gtk2_release gtk2_units gtk2_examples gtk2_shared gtk2_install gtk2_sourceinstall gtk2_exampleinstall gtk2_distinstall gtk2_zipinstall gtk2_zipsourceinstall gtk2_zipexampleinstall gtk2_zipdistinstall gtk2_clean gtk2_distclean gtk2_cleanall gtk2_info gtk2_makefiles gtk2
endif
ifdef TARGET_DIRS_A52
a52_all:
	$(MAKE) -C a52 all
a52_debug:
	$(MAKE) -C a52 debug
a52_smart:
	$(MAKE) -C a52 smart
a52_release:
	$(MAKE) -C a52 release
a52_units:
	$(MAKE) -C a52 units
a52_examples:
	$(MAKE) -C a52 examples
a52_shared:
	$(MAKE) -C a52 shared
a52_install:
	$(MAKE) -C a52 install
a52_sourceinstall:
	$(MAKE) -C a52 sourceinstall
a52_exampleinstall:
	$(MAKE) -C a52 exampleinstall
a52_distinstall:
	$(MAKE) -C a52 distinstall
a52_zipinstall:
	$(MAKE) -C a52 zipinstall
a52_zipsourceinstall:
	$(MAKE) -C a52 zipsourceinstall
a52_zipexampleinstall:
	$(MAKE) -C a52 zipexampleinstall
a52_zipdistinstall:
	$(MAKE) -C a52 zipdistinstall
a52_clean:
	$(MAKE) -C a52 clean
a52_distclean:
	$(MAKE) -C a52 distclean
a52_cleanall:
	$(MAKE) -C a52 cleanall
a52_info:
	$(MAKE) -C a52 info
a52_makefiles:
	$(MAKE) -C a52 makefiles
a52:
	$(MAKE) -C a52 all
.PHONY: a52_all a52_debug a52_smart a52_release a52_units a52_examples a52_shared a52_install a52_sourceinstall a52_exampleinstall a52_distinstall a52_zipinstall a52_zipsourceinstall a52_zipexampleinstall a52_zipdistinstall a52_clean a52_distclean a52_cleanall a52_info a52_makefiles a52
endif
ifdef TARGET_DIRS_BFD
bfd_all:
	$(MAKE) -C bfd all
bfd_debug:
	$(MAKE) -C bfd debug
bfd_smart:
	$(MAKE) -C bfd smart
bfd_release:
	$(MAKE) -C bfd release
bfd_units:
	$(MAKE) -C bfd units
bfd_examples:
	$(MAKE) -C bfd examples
bfd_shared:
	$(MAKE) -C bfd shared
bfd_install:
	$(MAKE) -C bfd install
bfd_sourceinstall:
	$(MAKE) -C bfd sourceinstall
bfd_exampleinstall:
	$(MAKE) -C bfd exampleinstall
bfd_distinstall:
	$(MAKE) -C bfd distinstall
bfd_zipinstall:
	$(MAKE) -C bfd zipinstall
bfd_zipsourceinstall:
	$(MAKE) -C bfd zipsourceinstall
bfd_zipexampleinstall:
	$(MAKE) -C bfd zipexampleinstall
bfd_zipdistinstall:
	$(MAKE) -C bfd zipdistinstall
bfd_clean:
	$(MAKE) -C bfd clean
bfd_distclean:
	$(MAKE) -C bfd distclean
bfd_cleanall:
	$(MAKE) -C bfd cleanall
bfd_info:
	$(MAKE) -C bfd info
bfd_makefiles:
	$(MAKE) -C bfd makefiles
bfd:
	$(MAKE) -C bfd all
.PHONY: bfd_all bfd_debug bfd_smart bfd_release bfd_units bfd_examples bfd_shared bfd_install bfd_sourceinstall bfd_exampleinstall bfd_distinstall bfd_zipinstall bfd_zipsourceinstall bfd_zipexampleinstall bfd_zipdistinstall bfd_clean bfd_distclean bfd_cleanall bfd_info bfd_makefiles bfd
endif
ifdef TARGET_DIRS_ASPELL
aspell_all:
	$(MAKE) -C aspell all
aspell_debug:
	$(MAKE) -C aspell debug
aspell_smart:
	$(MAKE) -C aspell smart
aspell_release:
	$(MAKE) -C aspell release
aspell_units:
	$(MAKE) -C aspell units
aspell_examples:
	$(MAKE) -C aspell examples
aspell_shared:
	$(MAKE) -C aspell shared
aspell_install:
	$(MAKE) -C aspell install
aspell_sourceinstall:
	$(MAKE) -C aspell sourceinstall
aspell_exampleinstall:
	$(MAKE) -C aspell exampleinstall
aspell_distinstall:
	$(MAKE) -C aspell distinstall
aspell_zipinstall:
	$(MAKE) -C aspell zipinstall
aspell_zipsourceinstall:
	$(MAKE) -C aspell zipsourceinstall
aspell_zipexampleinstall:
	$(MAKE) -C aspell zipexampleinstall
aspell_zipdistinstall:
	$(MAKE) -C aspell zipdistinstall
aspell_clean:
	$(MAKE) -C aspell clean
aspell_distclean:
	$(MAKE) -C aspell distclean
aspell_cleanall:
	$(MAKE) -C aspell cleanall
aspell_info:
	$(MAKE) -C aspell info
aspell_makefiles:
	$(MAKE) -C aspell makefiles
aspell:
	$(MAKE) -C aspell all
.PHONY: aspell_all aspell_debug aspell_smart aspell_release aspell_units aspell_examples aspell_shared aspell_install aspell_sourceinstall aspell_exampleinstall aspell_distinstall aspell_zipinstall aspell_zipsourceinstall aspell_zipexampleinstall aspell_zipdistinstall aspell_clean aspell_distclean aspell_cleanall aspell_info aspell_makefiles aspell
endif
ifdef TARGET_DIRS_SVGALIB
svgalib_all:
	$(MAKE) -C svgalib all
svgalib_debug:
	$(MAKE) -C svgalib debug
svgalib_smart:
	$(MAKE) -C svgalib smart
svgalib_release:
	$(MAKE) -C svgalib release
svgalib_units:
	$(MAKE) -C svgalib units
svgalib_examples:
	$(MAKE) -C svgalib examples
svgalib_shared:
	$(MAKE) -C svgalib shared
svgalib_install:
	$(MAKE) -C svgalib install
svgalib_sourceinstall:
	$(MAKE) -C svgalib sourceinstall
svgalib_exampleinstall:
	$(MAKE) -C svgalib exampleinstall
svgalib_distinstall:
	$(MAKE) -C svgalib distinstall
svgalib_zipinstall:
	$(MAKE) -C svgalib zipinstall
svgalib_zipsourceinstall:
	$(MAKE) -C svgalib zipsourceinstall
svgalib_zipexampleinstall:
	$(MAKE) -C svgalib zipexampleinstall
svgalib_zipdistinstall:
	$(MAKE) -C svgalib zipdistinstall
svgalib_clean:
	$(MAKE) -C svgalib clean
svgalib_distclean:
	$(MAKE) -C svgalib distclean
svgalib_cleanall:
	$(MAKE) -C svgalib cleanall
svgalib_info:
	$(MAKE) -C svgalib info
svgalib_makefiles:
	$(MAKE) -C svgalib makefiles
svgalib:
	$(MAKE) -C svgalib all
.PHONY: svgalib_all svgalib_debug svgalib_smart svgalib_release svgalib_units svgalib_examples svgalib_shared svgalib_install svgalib_sourceinstall svgalib_exampleinstall svgalib_distinstall svgalib_zipinstall svgalib_zipsourceinstall svgalib_zipexampleinstall svgalib_zipdistinstall svgalib_clean svgalib_distclean svgalib_cleanall svgalib_info svgalib_makefiles svgalib
endif
ifdef TARGET_DIRS_NEWT
newt_all:
	$(MAKE) -C newt all
newt_debug:
	$(MAKE) -C newt debug
newt_smart:
	$(MAKE) -C newt smart
newt_release:
	$(MAKE) -C newt release
newt_units:
	$(MAKE) -C newt units
newt_examples:
	$(MAKE) -C newt examples
newt_shared:
	$(MAKE) -C newt shared
newt_install:
	$(MAKE) -C newt install
newt_sourceinstall:
	$(MAKE) -C newt sourceinstall
newt_exampleinstall:
	$(MAKE) -C newt exampleinstall
newt_distinstall:
	$(MAKE) -C newt distinstall
newt_zipinstall:
	$(MAKE) -C newt zipinstall
newt_zipsourceinstall:
	$(MAKE) -C newt zipsourceinstall
newt_zipexampleinstall:
	$(MAKE) -C newt zipexampleinstall
newt_zipdistinstall:
	$(MAKE) -C newt zipdistinstall
newt_clean:
	$(MAKE) -C newt clean
newt_distclean:
	$(MAKE) -C newt distclean
newt_cleanall:
	$(MAKE) -C newt cleanall
newt_info:
	$(MAKE) -C newt info
newt_makefiles:
	$(MAKE) -C newt makefiles
newt:
	$(MAKE) -C newt all
.PHONY: newt_all newt_debug newt_smart newt_release newt_units newt_examples newt_shared newt_install newt_sourceinstall newt_exampleinstall newt_distinstall newt_zipinstall newt_zipsourceinstall newt_zipexampleinstall newt_zipdistinstall newt_clean newt_distclean newt_cleanall newt_info newt_makefiles newt
endif
ifdef TARGET_DIRS_CDROM
cdrom_all:
	$(MAKE) -C cdrom all
cdrom_debug:
	$(MAKE) -C cdrom debug
cdrom_smart:
	$(MAKE) -C cdrom smart
cdrom_release:
	$(MAKE) -C cdrom release
cdrom_units:
	$(MAKE) -C cdrom units
cdrom_examples:
	$(MAKE) -C cdrom examples
cdrom_shared:
	$(MAKE) -C cdrom shared
cdrom_install:
	$(MAKE) -C cdrom install
cdrom_sourceinstall:
	$(MAKE) -C cdrom sourceinstall
cdrom_exampleinstall:
	$(MAKE) -C cdrom exampleinstall
cdrom_distinstall:
	$(MAKE) -C cdrom distinstall
cdrom_zipinstall:
	$(MAKE) -C cdrom zipinstall
cdrom_zipsourceinstall:
	$(MAKE) -C cdrom zipsourceinstall
cdrom_zipexampleinstall:
	$(MAKE) -C cdrom zipexampleinstall
cdrom_zipdistinstall:
	$(MAKE) -C cdrom zipdistinstall
cdrom_clean:
	$(MAKE) -C cdrom clean
cdrom_distclean:
	$(MAKE) -C cdrom distclean
cdrom_cleanall:
	$(MAKE) -C cdrom cleanall
cdrom_info:
	$(MAKE) -C cdrom info
cdrom_makefiles:
	$(MAKE) -C cdrom makefiles
cdrom:
	$(MAKE) -C cdrom all
.PHONY: cdrom_all cdrom_debug cdrom_smart cdrom_release cdrom_units cdrom_examples cdrom_shared cdrom_install cdrom_sourceinstall cdrom_exampleinstall cdrom_distinstall cdrom_zipinstall cdrom_zipsourceinstall cdrom_zipexampleinstall cdrom_zipdistinstall cdrom_clean cdrom_distclean cdrom_cleanall cdrom_info cdrom_makefiles cdrom
endif
ifdef TARGET_DIRS_USERS
users_all:
	$(MAKE) -C users all
users_debug:
	$(MAKE) -C users debug
users_smart:
	$(MAKE) -C users smart
users_release:
	$(MAKE) -C users release
users_units:
	$(MAKE) -C users units
users_examples:
	$(MAKE) -C users examples
users_shared:
	$(MAKE) -C users shared
users_install:
	$(MAKE) -C users install
users_sourceinstall:
	$(MAKE) -C users sourceinstall
users_exampleinstall:
	$(MAKE) -C users exampleinstall
users_distinstall:
	$(MAKE) -C users distinstall
users_zipinstall:
	$(MAKE) -C users zipinstall
users_zipsourceinstall:
	$(MAKE) -C users zipsourceinstall
users_zipexampleinstall:
	$(MAKE) -C users zipexampleinstall
users_zipdistinstall:
	$(MAKE) -C users zipdistinstall
users_clean:
	$(MAKE) -C users clean
users_distclean:
	$(MAKE) -C users distclean
users_cleanall:
	$(MAKE) -C users cleanall
users_info:
	$(MAKE) -C users info
users_makefiles:
	$(MAKE) -C users makefiles
users:
	$(MAKE) -C users all
.PHONY: users_all users_debug users_smart users_release users_units users_examples users_shared users_install users_sourceinstall users_exampleinstall users_distinstall users_zipinstall users_zipsourceinstall users_zipexampleinstall users_zipdistinstall users_clean users_distclean users_cleanall users_info users_makefiles users
endif
ifdef TARGET_DIRS_HERMES
hermes_all:
	$(MAKE) -C hermes all
hermes_debug:
	$(MAKE) -C hermes debug
hermes_smart:
	$(MAKE) -C hermes smart
hermes_release:
	$(MAKE) -C hermes release
hermes_units:
	$(MAKE) -C hermes units
hermes_examples:
	$(MAKE) -C hermes examples
hermes_shared:
	$(MAKE) -C hermes shared
hermes_install:
	$(MAKE) -C hermes install
hermes_sourceinstall:
	$(MAKE) -C hermes sourceinstall
hermes_exampleinstall:
	$(MAKE) -C hermes exampleinstall
hermes_distinstall:
	$(MAKE) -C hermes distinstall
hermes_zipinstall:
	$(MAKE) -C hermes zipinstall
hermes_zipsourceinstall:
	$(MAKE) -C hermes zipsourceinstall
hermes_zipexampleinstall:
	$(MAKE) -C hermes zipexampleinstall
hermes_zipdistinstall:
	$(MAKE) -C hermes zipdistinstall
hermes_clean:
	$(MAKE) -C hermes clean
hermes_distclean:
	$(MAKE) -C hermes distclean
hermes_cleanall:
	$(MAKE) -C hermes cleanall
hermes_info:
	$(MAKE) -C hermes info
hermes_makefiles:
	$(MAKE) -C hermes makefiles
hermes:
	$(MAKE) -C hermes all
.PHONY: hermes_all hermes_debug hermes_smart hermes_release hermes_units hermes_examples hermes_shared hermes_install hermes_sourceinstall hermes_exampleinstall hermes_distinstall hermes_zipinstall hermes_zipsourceinstall hermes_zipexampleinstall hermes_zipdistinstall hermes_clean hermes_distclean hermes_cleanall hermes_info hermes_makefiles hermes
endif
ifdef TARGET_DIRS_IMLIB
imlib_all:
	$(MAKE) -C imlib all
imlib_debug:
	$(MAKE) -C imlib debug
imlib_smart:
	$(MAKE) -C imlib smart
imlib_release:
	$(MAKE) -C imlib release
imlib_units:
	$(MAKE) -C imlib units
imlib_examples:
	$(MAKE) -C imlib examples
imlib_shared:
	$(MAKE) -C imlib shared
imlib_install:
	$(MAKE) -C imlib install
imlib_sourceinstall:
	$(MAKE) -C imlib sourceinstall
imlib_exampleinstall:
	$(MAKE) -C imlib exampleinstall
imlib_distinstall:
	$(MAKE) -C imlib distinstall
imlib_zipinstall:
	$(MAKE) -C imlib zipinstall
imlib_zipsourceinstall:
	$(MAKE) -C imlib zipsourceinstall
imlib_zipexampleinstall:
	$(MAKE) -C imlib zipexampleinstall
imlib_zipdistinstall:
	$(MAKE) -C imlib zipdistinstall
imlib_clean:
	$(MAKE) -C imlib clean
imlib_distclean:
	$(MAKE) -C imlib distclean
imlib_cleanall:
	$(MAKE) -C imlib cleanall
imlib_info:
	$(MAKE) -C imlib info
imlib_makefiles:
	$(MAKE) -C imlib makefiles
imlib:
	$(MAKE) -C imlib all
.PHONY: imlib_all imlib_debug imlib_smart imlib_release imlib_units imlib_examples imlib_shared imlib_install imlib_sourceinstall imlib_exampleinstall imlib_distinstall imlib_zipinstall imlib_zipsourceinstall imlib_zipexampleinstall imlib_zipdistinstall imlib_clean imlib_distclean imlib_cleanall imlib_info imlib_makefiles imlib
endif
ifdef TARGET_DIRS_UTMP
utmp_all:
	$(MAKE) -C utmp all
utmp_debug:
	$(MAKE) -C utmp debug
utmp_smart:
	$(MAKE) -C utmp smart
utmp_release:
	$(MAKE) -C utmp release
utmp_units:
	$(MAKE) -C utmp units
utmp_examples:
	$(MAKE) -C utmp examples
utmp_shared:
	$(MAKE) -C utmp shared
utmp_install:
	$(MAKE) -C utmp install
utmp_sourceinstall:
	$(MAKE) -C utmp sourceinstall
utmp_exampleinstall:
	$(MAKE) -C utmp exampleinstall
utmp_distinstall:
	$(MAKE) -C utmp distinstall
utmp_zipinstall:
	$(MAKE) -C utmp zipinstall
utmp_zipsourceinstall:
	$(MAKE) -C utmp zipsourceinstall
utmp_zipexampleinstall:
	$(MAKE) -C utmp zipexampleinstall
utmp_zipdistinstall:
	$(MAKE) -C utmp zipdistinstall
utmp_clean:
	$(MAKE) -C utmp clean
utmp_distclean:
	$(MAKE) -C utmp distclean
utmp_cleanall:
	$(MAKE) -C utmp cleanall
utmp_info:
	$(MAKE) -C utmp info
utmp_makefiles:
	$(MAKE) -C utmp makefiles
utmp:
	$(MAKE) -C utmp all
.PHONY: utmp_all utmp_debug utmp_smart utmp_release utmp_units utmp_examples utmp_shared utmp_install utmp_sourceinstall utmp_exampleinstall utmp_distinstall utmp_zipinstall utmp_zipsourceinstall utmp_zipexampleinstall utmp_zipdistinstall utmp_clean utmp_distclean utmp_cleanall utmp_info utmp_makefiles utmp
endif
ifdef TARGET_DIRS_FPGTK
fpgtk_all:
	$(MAKE) -C fpgtk all
fpgtk_debug:
	$(MAKE) -C fpgtk debug
fpgtk_smart:
	$(MAKE) -C fpgtk smart
fpgtk_release:
	$(MAKE) -C fpgtk release
fpgtk_units:
	$(MAKE) -C fpgtk units
fpgtk_examples:
	$(MAKE) -C fpgtk examples
fpgtk_shared:
	$(MAKE) -C fpgtk shared
fpgtk_install:
	$(MAKE) -C fpgtk install
fpgtk_sourceinstall:
	$(MAKE) -C fpgtk sourceinstall
fpgtk_exampleinstall:
	$(MAKE) -C fpgtk exampleinstall
fpgtk_distinstall:
	$(MAKE) -C fpgtk distinstall
fpgtk_zipinstall:
	$(MAKE) -C fpgtk zipinstall
fpgtk_zipsourceinstall:
	$(MAKE) -C fpgtk zipsourceinstall
fpgtk_zipexampleinstall:
	$(MAKE) -C fpgtk zipexampleinstall
fpgtk_zipdistinstall:
	$(MAKE) -C fpgtk zipdistinstall
fpgtk_clean:
	$(MAKE) -C fpgtk clean
fpgtk_distclean:
	$(MAKE) -C fpgtk distclean
fpgtk_cleanall:
	$(MAKE) -C fpgtk cleanall
fpgtk_info:
	$(MAKE) -C fpgtk info
fpgtk_makefiles:
	$(MAKE) -C fpgtk makefiles
fpgtk:
	$(MAKE) -C fpgtk all
.PHONY: fpgtk_all fpgtk_debug fpgtk_smart fpgtk_release fpgtk_units fpgtk_examples fpgtk_shared fpgtk_install fpgtk_sourceinstall fpgtk_exampleinstall fpgtk_distinstall fpgtk_zipinstall fpgtk_zipsourceinstall fpgtk_zipexampleinstall fpgtk_zipdistinstall fpgtk_clean fpgtk_distclean fpgtk_cleanall fpgtk_info fpgtk_makefiles fpgtk
endif
ifdef TARGET_DIRS_LIBC
libc_all:
	$(MAKE) -C libc all
libc_debug:
	$(MAKE) -C libc debug
libc_smart:
	$(MAKE) -C libc smart
libc_release:
	$(MAKE) -C libc release
libc_units:
	$(MAKE) -C libc units
libc_examples:
	$(MAKE) -C libc examples
libc_shared:
	$(MAKE) -C libc shared
libc_install:
	$(MAKE) -C libc install
libc_sourceinstall:
	$(MAKE) -C libc sourceinstall
libc_exampleinstall:
	$(MAKE) -C libc exampleinstall
libc_distinstall:
	$(MAKE) -C libc distinstall
libc_zipinstall:
	$(MAKE) -C libc zipinstall
libc_zipsourceinstall:
	$(MAKE) -C libc zipsourceinstall
libc_zipexampleinstall:
	$(MAKE) -C libc zipexampleinstall
libc_zipdistinstall:
	$(MAKE) -C libc zipdistinstall
libc_clean:
	$(MAKE) -C libc clean
libc_distclean:
	$(MAKE) -C libc distclean
libc_cleanall:
	$(MAKE) -C libc cleanall
libc_info:
	$(MAKE) -C libc info
libc_makefiles:
	$(MAKE) -C libc makefiles
libc:
	$(MAKE) -C libc all
.PHONY: libc_all libc_debug libc_smart libc_release libc_units libc_examples libc_shared libc_install libc_sourceinstall libc_exampleinstall libc_distinstall libc_zipinstall libc_zipsourceinstall libc_zipexampleinstall libc_zipdistinstall libc_clean libc_distclean libc_cleanall libc_info libc_makefiles libc
endif
ifdef TARGET_DIRS_UNIXUTIL
unixutil_all:
	$(MAKE) -C unixutil all
unixutil_debug:
	$(MAKE) -C unixutil debug
unixutil_smart:
	$(MAKE) -C unixutil smart
unixutil_release:
	$(MAKE) -C unixutil release
unixutil_units:
	$(MAKE) -C unixutil units
unixutil_examples:
	$(MAKE) -C unixutil examples
unixutil_shared:
	$(MAKE) -C unixutil shared
unixutil_install:
	$(MAKE) -C unixutil install
unixutil_sourceinstall:
	$(MAKE) -C unixutil sourceinstall
unixutil_exampleinstall:
	$(MAKE) -C unixutil exampleinstall
unixutil_distinstall:
	$(MAKE) -C unixutil distinstall
unixutil_zipinstall:
	$(MAKE) -C unixutil zipinstall
unixutil_zipsourceinstall:
	$(MAKE) -C unixutil zipsourceinstall
unixutil_zipexampleinstall:
	$(MAKE) -C unixutil zipexampleinstall
unixutil_zipdistinstall:
	$(MAKE) -C unixutil zipdistinstall
unixutil_clean:
	$(MAKE) -C unixutil clean
unixutil_distclean:
	$(MAKE) -C unixutil distclean
unixutil_cleanall:
	$(MAKE) -C unixutil cleanall
unixutil_info:
	$(MAKE) -C unixutil info
unixutil_makefiles:
	$(MAKE) -C unixutil makefiles
unixutil:
	$(MAKE) -C unixutil all
.PHONY: unixutil_all unixutil_debug unixutil_smart unixutil_release unixutil_units unixutil_examples unixutil_shared unixutil_install unixutil_sourceinstall unixutil_exampleinstall unixutil_distinstall unixutil_zipinstall unixutil_zipsourceinstall unixutil_zipexampleinstall unixutil_zipdistinstall unixutil_clean unixutil_distclean unixutil_cleanall unixutil_info unixutil_makefiles unixutil
endif
ifdef TARGET_DIRS_WINUNITS-BASE
winunits-base_all:
	$(MAKE) -C winunits-base all
winunits-base_debug:
	$(MAKE) -C winunits-base debug
winunits-base_smart:
	$(MAKE) -C winunits-base smart
winunits-base_release:
	$(MAKE) -C winunits-base release
winunits-base_units:
	$(MAKE) -C winunits-base units
winunits-base_examples:
	$(MAKE) -C winunits-base examples
winunits-base_shared:
	$(MAKE) -C winunits-base shared
winunits-base_install:
	$(MAKE) -C winunits-base install
winunits-base_sourceinstall:
	$(MAKE) -C winunits-base sourceinstall
winunits-base_exampleinstall:
	$(MAKE) -C winunits-base exampleinstall
winunits-base_distinstall:
	$(MAKE) -C winunits-base distinstall
winunits-base_zipinstall:
	$(MAKE) -C winunits-base zipinstall
winunits-base_zipsourceinstall:
	$(MAKE) -C winunits-base zipsourceinstall
winunits-base_zipexampleinstall:
	$(MAKE) -C winunits-base zipexampleinstall
winunits-base_zipdistinstall:
	$(MAKE) -C winunits-base zipdistinstall
winunits-base_clean:
	$(MAKE) -C winunits-base clean
winunits-base_distclean:
	$(MAKE) -C winunits-base distclean
winunits-base_cleanall:
	$(MAKE) -C winunits-base cleanall
winunits-base_info:
	$(MAKE) -C winunits-base info
winunits-base_makefiles:
	$(MAKE) -C winunits-base makefiles
winunits-base:
	$(MAKE) -C winunits-base all
.PHONY: winunits-base_all winunits-base_debug winunits-base_smart winunits-base_release winunits-base_units winunits-base_examples winunits-base_shared winunits-base_install winunits-base_sourceinstall winunits-base_exampleinstall winunits-base_distinstall winunits-base_zipinstall winunits-base_zipsourceinstall winunits-base_zipexampleinstall winunits-base_zipdistinstall winunits-base_clean winunits-base_distclean winunits-base_cleanall winunits-base_info winunits-base_makefiles winunits-base
endif
ifdef TARGET_DIRS_WINUNITS-JEDI
winunits-jedi_all:
	$(MAKE) -C winunits-jedi all
winunits-jedi_debug:
	$(MAKE) -C winunits-jedi debug
winunits-jedi_smart:
	$(MAKE) -C winunits-jedi smart
winunits-jedi_release:
	$(MAKE) -C winunits-jedi release
winunits-jedi_units:
	$(MAKE) -C winunits-jedi units
winunits-jedi_examples:
	$(MAKE) -C winunits-jedi examples
winunits-jedi_shared:
	$(MAKE) -C winunits-jedi shared
winunits-jedi_install:
	$(MAKE) -C winunits-jedi install
winunits-jedi_sourceinstall:
	$(MAKE) -C winunits-jedi sourceinstall
winunits-jedi_exampleinstall:
	$(MAKE) -C winunits-jedi exampleinstall
winunits-jedi_distinstall:
	$(MAKE) -C winunits-jedi distinstall
winunits-jedi_zipinstall:
	$(MAKE) -C winunits-jedi zipinstall
winunits-jedi_zipsourceinstall:
	$(MAKE) -C winunits-jedi zipsourceinstall
winunits-jedi_zipexampleinstall:
	$(MAKE) -C winunits-jedi zipexampleinstall
winunits-jedi_zipdistinstall:
	$(MAKE) -C winunits-jedi zipdistinstall
winunits-jedi_clean:
	$(MAKE) -C winunits-jedi clean
winunits-jedi_distclean:
	$(MAKE) -C winunits-jedi distclean
winunits-jedi_cleanall:
	$(MAKE) -C winunits-jedi cleanall
winunits-jedi_info:
	$(MAKE) -C winunits-jedi info
winunits-jedi_makefiles:
	$(MAKE) -C winunits-jedi makefiles
winunits-jedi:
	$(MAKE) -C winunits-jedi all
.PHONY: winunits-jedi_all winunits-jedi_debug winunits-jedi_smart winunits-jedi_release winunits-jedi_units winunits-jedi_examples winunits-jedi_shared winunits-jedi_install winunits-jedi_sourceinstall winunits-jedi_exampleinstall winunits-jedi_distinstall winunits-jedi_zipinstall winunits-jedi_zipsourceinstall winunits-jedi_zipexampleinstall winunits-jedi_zipdistinstall winunits-jedi_clean winunits-jedi_distclean winunits-jedi_cleanall winunits-jedi_info winunits-jedi_makefiles winunits-jedi
endif
all: $(addsuffix _all,$(TARGET_DIRS))
debug: $(addsuffix _debug,$(TARGET_DIRS))
smart: $(addsuffix _smart,$(TARGET_DIRS))
release: $(addsuffix _release,$(TARGET_DIRS))
units: $(addsuffix _units,$(TARGET_DIRS))
examples: $(addsuffix _examples,$(TARGET_DIRS))
shared: $(addsuffix _shared,$(TARGET_DIRS))
install: $(addsuffix _install,$(TARGET_DIRS))
sourceinstall: $(addsuffix _sourceinstall,$(TARGET_DIRS))
exampleinstall: $(addsuffix _exampleinstall,$(TARGET_DIRS))
distinstall: $(addsuffix _distinstall,$(TARGET_DIRS))
zipinstall: $(addsuffix _zipinstall,$(TARGET_DIRS))
zipsourceinstall: $(addsuffix _zipsourceinstall,$(TARGET_DIRS))
zipexampleinstall: $(addsuffix _zipexampleinstall,$(TARGET_DIRS))
zipdistinstall: $(addsuffix _zipdistinstall,$(TARGET_DIRS))
clean: $(addsuffix _clean,$(TARGET_DIRS))
distclean: $(addsuffix _distclean,$(TARGET_DIRS))
cleanall: $(addsuffix _cleanall,$(TARGET_DIRS))
info: fpc_info
makefiles: fpc_makefiles $(addsuffix _makefiles,$(TARGET_DIRS))
.PHONY: all debug smart release units examples shared install sourceinstall exampleinstall distinstall zipinstall zipsourceinstall zipexampleinstall zipdistinstall clean distclean cleanall info makefiles
ifneq ($(wildcard fpcmake.loc),)
include fpcmake.loc
endif
fpmkunit_all: fcl-base_all fcl-process_all paszlib_all
fpmkunit_debug: fcl-base_debug fcl-process_debug paszlib_debug
fpmkunit_smart: fcl-base_smart fcl-process_smart paszlib_smart
fpmkunit_release: fcl-base_release fcl-process_release paszlib_release
fpmkunit_shared: fcl-base_shared fcl-process_shared paszlib_shared
extra_all: base_all fcl-xml_all
extra_debug: base_debug fcl-xml_debug
extra_smart: base_smart fcl-xml_smart
extra_release: base_release fcl-xml_release
extra_shared: base_shared fcl-xml_shared
ifneq ($(findstring $(OS_TARGET),win32 win64),)
fcl-base_all: base_all winunits-base_all winunits-jedi_all
fcl-base_debug: base_debug winunits-base_debug winunits-jedi_debug
fcl-base_smart: base_smart winunits-base_smart winunits-jedi_smart
fcl-base_release: base_release winunits-base_release winunits-jedi_release
fcl-base_shared: base_shared winunits-base_shared winunits-jedi_shared
else
fcl-base_all: base_all
fcl-base_debug: base_debug
fcl-base_smart: base_smart
fcl-base_release: base_release
fcl-base_shared: base_shared
endif
fcl-xml_all: fcl-base_all
fcl-xml_debug: fcl-base_debug
fcl-xml_smart: fcl-base_smart
fcl-xml_release: fcl-base_release
fcl-xml_shared: fcl-base_shared
fcl-json_all: fcl-base_all
fcl-json_debug: fcl-base_debug
fcl-json_smart: fcl-base_smart
fcl-json_release: fcl-base_release
fcl-json_shared: fcl-base_shared
fcl-image_all: fcl-base_all paszlib_all pasjpeg_all
fcl-image_debug: fcl-base_debug paszlib_debug pasjpeg_debug
fcl-image_smart: fcl-base_smart paszlib_smart pasjpeg_smart
fcl-image_release: fcl-base_release paszlib_release pasjpeg_release
fcl-image_shared: fcl-base_shared paszlib_shared pasjpeg_shared
fcl-fpcunit_all: fcl-xml_all paszlib_all
fcl-fpcunit_debug: fcl-xml_debug paszlib_debug
fcl-fpcunit_smart: fcl-xml_smart paszlib_smart
fcl-fpcunit_release: fcl-xml_release paszlib_release
fcl-fpcunit_shared: fcl-xml_shared paszlib_shared
fcl-registry_all: fcl-xml_all
fcl-registry_debug: fcl-xml_debug
fcl-registry_smart: fcl-xml_smart
fcl-registry_release: fcl-xml_release
fcl-registry_shared: fcl-xml_shared
ifeq ($(findstring $(OS_TARGET),linux darwin freebsd openbsd netbsd solaris),)
fcl-net_all: fcl-passrc_all fcl-xml_all
fcl-net_debug: fcl-passrc_debug fcl-xml_debug
fcl-net_smart: fcl-passrc_smart fcl-xml_smart
fcl-net_release: fcl-passrc_release fcl-xml_release
fcl-net_shared: fcl-passrc_shared fcl-xml_shared
else
fcl-net_all: fcl-passrc_all fcl-xml_all fcl-async_all
fcl-net_debug: fcl-passrc_debug fcl-xml_debug fcl-async_debug
fcl-net_smart: fcl-passrc_smart fcl-xml_smart fcl-async_smart
fcl-net_release: fcl-passrc_release fcl-xml_release fcl-async_release
fcl-net_shared: fcl-passrc_shared fcl-xml_shared fcl-async_shared
endif
fcl-web_all: fcl-db_all fcl-xml_all fcl-process_all 
fcl-web_debug: fcl-db_debug fcl-xml_debug fcl-process_debug
fcl-web_smart: fcl-db_smart fcl-xml_smart fcl-process_smart
fcl-web_release: fcl-db_release fcl-xml_release fcl-process_release
fcl-web_shared: fcl-db_shared fcl-xml_shared fcl-process_shared
fcl-db_all: fcl-base_all mysql_all ibase_all oracle_all odbc_all postgres_all sqlite_all
fcl-db_debug: fcl-base_debug mysql_debug ibase_debug oracle_debug odbc_debug postgres_debug sqlite_debug
fcl-db_smart: fcl-base_smart mysql_smart ibase_smart oracle_smart odbc_smart postgres_smart sqlite_smart
fcl-db_release: fcl-base_release mysql_release ibase_release oracle_release odbc_release postgres_release sqlite_release
fcl-db_shared: fcl-base_shared mysql_shared ibase_shared oracle_shared odbc_shared postgres_shared postgres_release
fcl_all: fcl-base_all fcl-xml_all fcl-fpcunit_all fcl-db_all fcl-web_all fcl-registry_all fcl-passrc_all fcl-image_all fcl-net_all fcl-json_all
fcl_debug: fcl-base_debug fcl-xml_debug fcl-fpcunit_debug fcl-db_debug fcl-web_debug fcl-registry_debug fcl-passrc_debug fcl-image_debug fcl-net_debug fcl-json_debug
fcl_smart: fcl-base_smart fcl-xml_smart fcl-fpcunit_smart fcl-db_smart fcl-web_smart fcl-registry_smart fcl-passrc_smart fcl-image_smart fcl-net_smart fcl-json_smart
fcl_release: fcl-base_release fcl-xml_release fcl-fpcunit_release fcl-db_release fcl-web_release fcl-registry_release fcl-passrc_release fcl-image_release fcl-net_release fcl-json_release
fcl_shared: fcl-base_shared fcl-xml_shared fcl-fpcunit_shared fcl-db_shared fcl-web_shared fcl-registry_shared fcl-passrc_shared fcl-image_shared fcl-net_shared fcl-json_shared
paszlib_all: hash_all
paszlib_debug: hash_debug
paszlib_smart: hash_smart
paszlib_release: hash_release
paszlib_shared: hash_shared
libpng_all: zlib_all
libpng_debug: zlib_debug
libpng_smart: zlib_smart
libpng_release: zlib_release
libpng_shared: zlib_shared
opengl_all: x11_all
opengl_debug: x11_debug
opengl_smart: x11_smart
opengl_release: x11_release
opengl_shared: x11_shared
gtk1_all: x11_all
gtk1_debug: x11_debug
gtk1_smart: x11_smart
gtk1_release: x11_release
gtk1_shared: x11_shared   
airo_all: x11_all fcl-image_all
cairo_debug: x11_debug fcl-image_debug
cairo_smart: x11_smart fcl-image_smart
cairo_release: x11_release fcl-image_release
cairo_shared: x11_shared fcl-image_shared
