#
# Don't edit, this file is generated by FPCMake Version 2.0.0 [2013/10/30]
#
default: all
MAKEFILETARGETS=i386-linux i386-go32v2 i386-win32 i386-os2 i386-freebsd i386-beos i386-haiku i386-netbsd i386-solaris i386-qnx i386-netware i386-openbsd i386-wdosx i386-darwin i386-emx i386-watcom i386-netwlibc i386-wince i386-embedded i386-symbian i386-nativent i386-iphonesim m68k-linux m68k-freebsd m68k-netbsd m68k-amiga m68k-atari m68k-openbsd m68k-palmos m68k-embedded powerpc-linux powerpc-netbsd powerpc-amiga powerpc-macos powerpc-darwin powerpc-morphos powerpc-embedded powerpc-wii sparc-linux sparc-netbsd sparc-solaris sparc-embedded x86_64-linux x86_64-freebsd x86_64-netbsd x86_64-solaris x86_64-openbsd x86_64-darwin x86_64-win64 x86_64-embedded arm-linux arm-palmos arm-darwin arm-wince arm-gba arm-nds arm-embedded arm-symbian powerpc64-linux powerpc64-darwin powerpc64-embedded avr-embedded armeb-linux armeb-embedded mipsel-linux
BSDs = freebsd netbsd openbsd darwin
UNIXs = linux $(BSDs) solaris qnx haiku
LIMIT83fs = go32v2 os2 emx watcom
OSNeedsComspecToRunBatch = go32v2 watcom
FORCE:
.PHONY: FORCE
override PATH:=$(patsubst %/,%,$(subst \,/,$(PATH)))
ifneq ($(findstring darwin,$(OSTYPE)),)
inUnix=1 #darwin
SEARCHPATH:=$(filter-out .,$(subst :, ,$(PATH)))
else
ifeq ($(findstring ;,$(PATH)),)
inUnix=1
SEARCHPATH:=$(filter-out .,$(subst :, ,$(PATH)))
else
SEARCHPATH:=$(subst ;, ,$(PATH))
endif
endif
SEARCHPATH+=$(patsubst %/,%,$(subst \,/,$(dir $(MAKE))))
PWD:=$(strip $(wildcard $(addsuffix /pwd.exe,$(SEARCHPATH))))
ifeq ($(PWD),)
PWD:=$(strip $(wildcard $(addsuffix /pwd,$(SEARCHPATH))))
ifeq ($(PWD),)
$(error You need the GNU utils package to use this Makefile)
else
PWD:=$(firstword $(PWD))
SRCEXEEXT=
endif
else
PWD:=$(firstword $(PWD))
SRCEXEEXT=.exe
endif
ifndef inUnix
ifeq ($(OS),Windows_NT)
inWinNT=1
else
ifdef OS2_SHELL
inOS2=1
endif
endif
else
ifneq ($(findstring cygdrive,$(PATH)),)
inCygWin=1
endif
endif
ifdef inUnix
SRCBATCHEXT=.sh
else
ifdef inOS2
SRCBATCHEXT=.cmd
else
SRCBATCHEXT=.bat
endif
endif
ifdef COMSPEC
ifneq ($(findstring $(OS_SOURCE),$(OSNeedsComspecToRunBatch)),)
ifndef RUNBATCH
RUNBATCH=$(COMSPEC) /C
endif
endif
endif
ifdef inUnix
PATHSEP=/
else
PATHSEP:=$(subst /,\,/)
ifdef inCygWin
PATHSEP=/
endif
endif
ifdef PWD
BASEDIR:=$(subst \,/,$(shell $(PWD)))
ifdef inCygWin
ifneq ($(findstring /cygdrive/,$(BASEDIR)),)
BASENODIR:=$(patsubst /cygdrive%,%,$(BASEDIR))
BASEDRIVE:=$(firstword $(subst /, ,$(BASENODIR)))
BASEDIR:=$(subst /cygdrive/$(BASEDRIVE)/,$(BASEDRIVE):/,$(BASEDIR))
endif
endif
else
BASEDIR=.
endif
ifdef inOS2
ifndef ECHO
ECHO:=$(strip $(wildcard $(addsuffix /gecho$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO:=$(strip $(wildcard $(addsuffix /echo$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO=echo
else
ECHO:=$(firstword $(ECHO))
endif
else
ECHO:=$(firstword $(ECHO))
endif
endif
export ECHO
endif
override DEFAULT_FPCDIR=..
ifndef FPC
ifdef PP
FPC=$(PP)
endif
endif
ifndef FPC
FPCPROG:=$(strip $(wildcard $(addsuffix /fpc$(SRCEXEEXT),$(SEARCHPATH))))
ifneq ($(FPCPROG),)
FPCPROG:=$(firstword $(FPCPROG))
ifneq ($(CPU_TARGET),)
FPC:=$(shell $(FPCPROG) -P$(CPU_TARGET) -PB)
else
FPC:=$(shell $(FPCPROG) -PB)
endif
ifneq ($(findstring Error,$(FPC)),)
override FPC=$(firstword $(strip $(wildcard $(addsuffix /ppc386$(SRCEXEEXT),$(SEARCHPATH)))))
else
ifeq ($(strip $(wildcard $(FPC))),)
FPC:=$(firstword $(FPCPROG))
endif
endif
else
override FPC=$(firstword $(strip $(wildcard $(addsuffix /ppc386$(SRCEXEEXT),$(SEARCHPATH)))))
endif
endif
override FPC:=$(subst $(SRCEXEEXT),,$(FPC))
override FPC:=$(subst \,/,$(FPC))$(SRCEXEEXT)
FOUNDFPC:=$(strip $(wildcard $(FPC)))
ifeq ($(FOUNDFPC),)
FOUNDFPC=$(strip $(wildcard $(addsuffix /$(FPC),$(SEARCHPATH))))
ifeq ($(FOUNDFPC),)
$(error Compiler $(FPC) not found)
endif
endif
ifndef FPC_COMPILERINFO
FPC_COMPILERINFO:=$(shell $(FPC) -iVSPTPSOTO)
endif
ifndef FPC_VERSION
FPC_VERSION:=$(word 1,$(FPC_COMPILERINFO))
endif
export FPC FPC_VERSION FPC_COMPILERINFO
unexport CHECKDEPEND ALLDEPENDENCIES
ifndef CPU_TARGET
ifdef CPU_TARGET_DEFAULT
CPU_TARGET=$(CPU_TARGET_DEFAULT)
endif
endif
ifndef OS_TARGET
ifdef OS_TARGET_DEFAULT
OS_TARGET=$(OS_TARGET_DEFAULT)
endif
endif
ifndef CPU_SOURCE
CPU_SOURCE:=$(word 2,$(FPC_COMPILERINFO))
endif
ifndef CPU_TARGET
CPU_TARGET:=$(word 3,$(FPC_COMPILERINFO))
endif
ifndef OS_SOURCE
OS_SOURCE:=$(word 4,$(FPC_COMPILERINFO))
endif
ifndef OS_TARGET
OS_TARGET:=$(word 5,$(FPC_COMPILERINFO))
endif
FULL_TARGET=$(CPU_TARGET)-$(OS_TARGET)
FULL_SOURCE=$(CPU_SOURCE)-$(OS_SOURCE)
ifeq ($(CPU_TARGET),armeb)
ARCH=arm
override FPCOPT+=-Cb
else
ifeq ($(CPU_TARGET),armel)
ARCH=arm
override FPCOPT+=-CaEABI
else
ARCH=$(CPU_TARGET)
endif
endif
ifneq ($(findstring $(OS_SOURCE),$(LIMIT83fs)),)
TARGETSUFFIX=$(OS_TARGET)
SOURCESUFFIX=$(OS_SOURCE)
else
ifneq ($(findstring $(OS_TARGET),$(LIMIT83fs)),)
TARGETSUFFIX=$(OS_TARGET)
else
TARGETSUFFIX=$(FULL_TARGET)
endif
SOURCESUFFIX=$(FULL_SOURCE)
endif
ifneq ($(FULL_TARGET),$(FULL_SOURCE))
CROSSCOMPILE=1
endif
ifeq ($(findstring makefile,$(MAKECMDGOALS)),)
ifeq ($(findstring $(FULL_TARGET),$(MAKEFILETARGETS)),)
$(error The Makefile doesn't support target $(FULL_TARGET), please run fpcmake first)
endif
endif
ifneq ($(findstring $(OS_TARGET),$(BSDs)),)
BSDhier=1
endif
ifeq ($(OS_TARGET),linux)
linuxHier=1
endif
export OS_TARGET OS_SOURCE ARCH CPU_TARGET CPU_SOURCE FULL_TARGET FULL_SOURCE TARGETSUFFIX SOURCESUFFIX CROSSCOMPILE
ifdef FPCDIR
override FPCDIR:=$(subst \,/,$(FPCDIR))
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR=wrong
endif
else
override FPCDIR=wrong
endif
ifdef DEFAULT_FPCDIR
ifeq ($(FPCDIR),wrong)
override FPCDIR:=$(subst \,/,$(DEFAULT_FPCDIR))
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR=wrong
endif
endif
endif
ifeq ($(FPCDIR),wrong)
ifdef inUnix
override FPCDIR=/usr/local/lib/fpc/$(FPC_VERSION)
ifeq ($(wildcard $(FPCDIR)/units),)
override FPCDIR=/usr/lib/fpc/$(FPC_VERSION)
endif
else
override FPCDIR:=$(subst /$(FPC),,$(firstword $(strip $(wildcard $(addsuffix /$(FPC),$(SEARCHPATH))))))
override FPCDIR:=$(FPCDIR)/..
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR:=$(FPCDIR)/..
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR:=$(BASEDIR)
ifeq ($(wildcard $(addprefix $(FPCDIR)/,rtl units)),)
override FPCDIR=c:/pp
endif
endif
endif
endif
endif
ifndef CROSSBINDIR
CROSSBINDIR:=$(wildcard $(FPCDIR)/bin/$(TARGETSUFFIX))
endif
ifneq ($(findstring $(OS_TARGET),darwin iphonesim),)
ifeq ($(OS_SOURCE),darwin)
DARWIN2DARWIN=1
endif
endif
ifndef BINUTILSPREFIX
ifndef CROSSBINDIR
ifdef CROSSCOMPILE
ifndef DARWIN2DARWIN
BINUTILSPREFIX=$(CPU_TARGET)-$(OS_TARGET)-
endif
endif
endif
endif
UNITSDIR:=$(wildcard $(FPCDIR)/units/$(TARGETSUFFIX))
ifeq ($(UNITSDIR),)
UNITSDIR:=$(wildcard $(FPCDIR)/units/$(OS_TARGET))
endif
PACKAGESDIR:=$(wildcard $(FPCDIR) $(FPCDIR)/packages $(FPCDIR)/packages/base $(FPCDIR)/packages/extra)
ifndef FPCFPMAKE
ifdef CROSSCOMPILE
ifeq ($(strip $(wildcard $(addsuffix /compiler/ppc$(SRCEXEEXT),$(FPCDIR)))),)
FPCPROG:=$(strip $(wildcard $(addsuffix /fpc$(SRCEXEEXT),$(SEARCHPATH))))
ifneq ($(FPCPROG),)
FPCPROG:=$(firstword $(FPCPROG))
FPCFPMAKE:=$(shell $(FPCPROG) -PB)
ifeq ($(strip $(wildcard $(FPCFPMAKE))),)
FPCFPMAKE:=$(firstword $(FPCPROG))
endif
else
override FPCFPMAKE=$(firstword $(strip $(wildcard $(addsuffix /ppc386$(SRCEXEEXT),$(SEARCHPATH)))))
endif
else
FPCFPMAKE=$(strip $(wildcard $(addsuffix /compiler/ppc$(SRCEXEEXT),$(FPCDIR))))
FPMAKE_SKIP_CONFIG=-n
export FPCFPMAKE
export FPMAKE_SKIP_CONFIG
endif
else
FPMAKE_SKIP_CONFIG=-n
FPCFPMAKE=$(FPC)
endif
endif
ifeq ($(FULL_TARGET),i386-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph libc unixutil graph pxlib bzip2
endif
ifeq ($(FULL_TARGET),i386-go32v2)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv graph unzip gdbint
endif
ifeq ($(FULL_TARGET),i386-win32)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv winunits-base winunits-jedi fcl-web fastcgi ibase mysql zlib oracle odbc postgres sqlite imagemagick gdbint libpng mad tcl opengl gtk1 gtk2 librsvg a52 cdrom fpgtk openal fftw lua fcl-extra zorba oggvorbis sdl openssl graph pcap  httpd22 httpd24  pxlib numlib winceunits cairo libxml gmp opencl libsee nvapi ptc aspell dblib fpindexer libvlc
endif
ifeq ($(FULL_TARGET),i386-os2)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv zlib libpng x11 tcl fpgtk rexx os2units gtk1 imlib
endif
ifeq ($(FULL_TARGET),i386-freebsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo  bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl graph gnome1 gtk1 gtk2 librsvg  httpd22 httpd24  pxlib numlib users iconvenc gmp fcl-extra libxml dblib fpindexer libvlc
endif
ifeq ($(FULL_TARGET),i386-beos)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl graph gnome1 gtk1 gtk2 librsvg  httpd22 httpd24  pxlib numlib iconvenc fpindexer
endif
ifeq ($(FULL_TARGET),i386-haiku)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl graph gnome1 gtk1 gtk2 librsvg  httpd22 httpd24  pxlib numlib iconvenc dblib fpindexer
endif
ifeq ($(FULL_TARGET),i386-netbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),i386-solaris)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 bfd svgalib fcl-extra imlib utmp  fpgtk xforms fftw pcap ggi  openssl gnome1  httpd22 httpd24  numlib iconvenc gtk2 cairo dblib fpindexer dblib
endif
ifeq ($(FULL_TARGET),i386-qnx)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),i386-netware)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv zlib unzip
endif
ifeq ($(FULL_TARGET),i386-openbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc  postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),i386-wdosx)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),i386-darwin)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng gdbm tcl syslog libcurl bfd aspell utmp fftw pcap openssl numlib iconvenc gmp fcl-extra univint dblib fpindexer graph sdl opengl x11 cairo gtk1 gtk2 librsvg fpgtk xforms gnome1  httpd22 httpd24  imlib objcrtl cocoaint opencl openal
endif
ifeq ($(FULL_TARGET),i386-emx)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv zlib libpng x11 tcl fpgtk rexx os2units gtk1 imlib
endif
ifeq ($(FULL_TARGET),i386-watcom)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),i386-netwlibc)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv zlib unzip
endif
ifeq ($(FULL_TARGET),i386-wince)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  winceunits httpd22 httpd24  fcl-web fastcgi tcl fftw unzip zlib sqlite mysql ibase postgres oracle odbc sdl openssl oggvorbis numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),i386-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),i386-symbian)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),i386-nativent)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),i386-iphonesim)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng gdbm tcl syslog libcurl bfd aspell utmp fftw pcap openssl numlib iconvenc gmp fcl-extra univint fpindexer httpd22 httpd24  opengles objcrtl dblib
endif
ifeq ($(FULL_TARGET),m68k-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph
endif
ifeq ($(FULL_TARGET),m68k-freebsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo  bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl graph gnome1 gtk1 gtk2 librsvg  httpd22 httpd24  pxlib numlib users iconvenc gmp fcl-extra libxml dblib fpindexer libvlc
endif
ifeq ($(FULL_TARGET),m68k-netbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),m68k-amiga)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  amunits
endif
ifeq ($(FULL_TARGET),m68k-atari)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),m68k-openbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc  postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),m68k-palmos)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  palmunits
endif
ifeq ($(FULL_TARGET),m68k-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),powerpc-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph
endif
ifeq ($(FULL_TARGET),powerpc-netbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),powerpc-amiga)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  amunits
endif
ifeq ($(FULL_TARGET),powerpc-macos)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),powerpc-darwin)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng gdbm tcl syslog libcurl bfd aspell utmp fftw pcap openssl numlib iconvenc gmp fcl-extra univint dblib fpindexer graph sdl opengl x11 cairo gtk1 gtk2 librsvg fpgtk xforms gnome1  httpd22 httpd24  imlib objcrtl cocoaint
endif
ifeq ($(FULL_TARGET),powerpc-morphos)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv opengl sdl
endif
ifeq ($(FULL_TARGET),powerpc-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),powerpc-wii)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  libogcfpc
endif
ifeq ($(FULL_TARGET),sparc-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph
endif
ifeq ($(FULL_TARGET),sparc-netbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),sparc-solaris)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 bfd svgalib fcl-extra imlib utmp  fpgtk xforms fftw pcap ggi  openssl gnome1  httpd22 httpd24  numlib iconvenc gtk2 cairo dblib fpindexer dblib
endif
ifeq ($(FULL_TARGET),sparc-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),x86_64-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph
endif
ifeq ($(FULL_TARGET),x86_64-freebsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo  bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl graph gnome1 gtk1 gtk2 librsvg  httpd22 httpd24  pxlib numlib users iconvenc gmp fcl-extra libxml dblib fpindexer libvlc
endif
ifeq ($(FULL_TARGET),x86_64-netbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),x86_64-solaris)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 bfd svgalib fcl-extra imlib utmp  fpgtk xforms fftw pcap ggi  openssl gnome1  httpd22 httpd24  numlib iconvenc gtk2 cairo dblib fpindexer dblib
endif
ifeq ($(FULL_TARGET),x86_64-openbsd)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc  postgres sqlite pthreads imagemagick gdbint libpng x11 gdbm tcl syslog libcurl opengl cairo gtk1 gtk2 librsvg bfd aspell svgalib imlib utmp  fpgtk xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),x86_64-darwin)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng gdbm tcl syslog libcurl bfd aspell utmp fftw pcap openssl numlib iconvenc gmp fcl-extra univint dblib fpindexer opengl x11 cairo gtk1 gtk2 librsvg fpgtk xforms gnome1  httpd22 httpd24  imlib cocoaint
endif
ifeq ($(FULL_TARGET),x86_64-win64)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv winunits-base winunits-jedi fcl-web fastcgi ibase mysql zlib oracle odbc postgres sqlite imagemagick gdbint tcl opengl gtk1 fpgtk fftw sdl openssl cdrom  httpd22 httpd24  numlib fcl-extra opencl nvapi ptc graph dblib fpindexer libvlc
endif
ifeq ($(FULL_TARGET),x86_64-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),arm-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph
endif
ifeq ($(FULL_TARGET),arm-palmos)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  palmunits
endif
ifeq ($(FULL_TARGET),arm-darwin)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng gdbm tcl syslog libcurl bfd aspell utmp fftw pcap openssl numlib iconvenc gmp fcl-extra univint dblib fpindexer httpd22 httpd24  opengles objcrtl
endif
ifeq ($(FULL_TARGET),arm-wince)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  winceunits httpd22 httpd24  fcl-web fastcgi tcl fftw unzip zlib sqlite mysql ibase postgres oracle odbc sdl openssl oggvorbis numlib dblib fpindexer
endif
ifeq ($(FULL_TARGET),arm-gba)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),arm-nds)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),arm-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),arm-symbian)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),powerpc64-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc graph
endif
ifeq ($(FULL_TARGET),powerpc64-darwin)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses zlib oracle odbc postgres sqlite pthreads imagemagick libpng gdbm tcl syslog libcurl bfd aspell utmp fftw pcap openssl numlib iconvenc gmp fcl-extra univint dblib fpindexer opengl x11 cairo gtk1 gtk2 librsvg fpgtk xforms gnome1  httpd22 httpd24  imlib cocoaint
endif
ifeq ($(FULL_TARGET),powerpc64-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),avr-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),armeb-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc
endif
ifeq ($(FULL_TARGET),armeb-embedded)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg
endif
ifeq ($(FULL_TARGET),mipsel-linux)
override TARGET_DIRS+=hash pasjpeg paszlib fpmkunit fcl-xml fcl-base fcl-db fcl-image fcl-net fcl-passrc fcl-registry fcl-fpcunit fcl-json fcl-js fcl-process unzip regexpr chm fcl-res libgd symbolic bzip2 hermes fppkg  fv fcl-web fastcgi fcl-async ibase mysql ncurses unzip zlib oracle dbus odbc postgres sqlite pthreads imagemagick gdbint libpng x11 uuid ldap modplug dts mad  gdbm tcl syslog libcurl opengl opencl cairo gtk1 gtk2 librsvg a52 bfd aspell svgalib newt cdrom users  iconvenc libxml proj4 fcl-extra zorba imlib utmp  fpgtk openal lua oggvorbis xforms fftw pcap ggi sdl openssl gnome1  httpd22 httpd24  pxlib numlib gmp libsee ptc dblib fpindexer libvlc
endif
override INSTALL_FPCPACKAGE=y
override INSTALL_FPCSUBDIR=packages
ifdef REQUIRE_UNITSDIR
override UNITSDIR+=$(REQUIRE_UNITSDIR)
endif
ifdef REQUIRE_PACKAGESDIR
override PACKAGESDIR+=$(REQUIRE_PACKAGESDIR)
endif
ifdef ZIPINSTALL
ifneq ($(findstring $(OS_TARGET),$(UNIXs)),)
UNIXHier=1
endif
else
ifneq ($(findstring $(OS_SOURCE),$(UNIXs)),)
UNIXHier=1
endif
endif
ifndef INSTALL_PREFIX
ifdef PREFIX
INSTALL_PREFIX=$(PREFIX)
endif
endif
ifndef INSTALL_PREFIX
ifdef UNIXHier
INSTALL_PREFIX=/usr/local
else
ifdef INSTALL_FPCPACKAGE
INSTALL_BASEDIR:=/pp
else
INSTALL_BASEDIR:=/$(PACKAGE_NAME)
endif
endif
endif
export INSTALL_PREFIX
ifdef INSTALL_FPCSUBDIR
export INSTALL_FPCSUBDIR
endif
ifndef DIST_DESTDIR
DIST_DESTDIR:=$(BASEDIR)
endif
export DIST_DESTDIR
ifndef COMPILER_UNITTARGETDIR
ifdef PACKAGEDIR_MAIN
COMPILER_UNITTARGETDIR=$(PACKAGEDIR_MAIN)/units/$(TARGETSUFFIX)
else
COMPILER_UNITTARGETDIR=units/$(TARGETSUFFIX)
endif
endif
ifndef COMPILER_TARGETDIR
COMPILER_TARGETDIR=.
endif
ifndef INSTALL_BASEDIR
ifdef UNIXHier
ifdef INSTALL_FPCPACKAGE
INSTALL_BASEDIR:=$(INSTALL_PREFIX)/lib/fpc/$(FPC_VERSION)
else
INSTALL_BASEDIR:=$(INSTALL_PREFIX)/lib/$(PACKAGE_NAME)
endif
else
INSTALL_BASEDIR:=$(INSTALL_PREFIX)
endif
endif
ifndef INSTALL_BINDIR
ifdef UNIXHier
INSTALL_BINDIR:=$(INSTALL_PREFIX)/bin
else
INSTALL_BINDIR:=$(INSTALL_BASEDIR)/bin
ifdef INSTALL_FPCPACKAGE
ifdef CROSSCOMPILE
ifdef CROSSINSTALL
INSTALL_BINDIR:=$(INSTALL_BINDIR)/$(SOURCESUFFIX)
else
INSTALL_BINDIR:=$(INSTALL_BINDIR)/$(TARGETSUFFIX)
endif
else
INSTALL_BINDIR:=$(INSTALL_BINDIR)/$(TARGETSUFFIX)
endif
endif
endif
endif
ifndef INSTALL_UNITDIR
INSTALL_UNITDIR:=$(INSTALL_BASEDIR)/units/$(TARGETSUFFIX)
ifdef INSTALL_FPCPACKAGE
ifdef PACKAGE_NAME
INSTALL_UNITDIR:=$(INSTALL_UNITDIR)/$(PACKAGE_NAME)
endif
endif
endif
ifndef INSTALL_LIBDIR
ifdef UNIXHier
INSTALL_LIBDIR:=$(INSTALL_PREFIX)/lib
else
INSTALL_LIBDIR:=$(INSTALL_UNITDIR)
endif
endif
ifndef INSTALL_SOURCEDIR
ifdef UNIXHier
ifdef BSDhier
SRCPREFIXDIR=share/src
else
ifdef linuxHier
SRCPREFIXDIR=share/src
else
SRCPREFIXDIR=src
endif
endif
ifdef INSTALL_FPCPACKAGE
ifdef INSTALL_FPCSUBDIR
INSTALL_SOURCEDIR:=$(INSTALL_PREFIX)/$(SRCPREFIXDIR)/fpc-$(FPC_VERSION)/$(INSTALL_FPCSUBDIR)/$(PACKAGE_NAME)
else
INSTALL_SOURCEDIR:=$(INSTALL_PREFIX)/$(SRCPREFIXDIR)/fpc-$(FPC_VERSION)/$(PACKAGE_NAME)
endif
else
INSTALL_SOURCEDIR:=$(INSTALL_PREFIX)/$(SRCPREFIXDIR)/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
endif
else
ifdef INSTALL_FPCPACKAGE
ifdef INSTALL_FPCSUBDIR
INSTALL_SOURCEDIR:=$(INSTALL_BASEDIR)/source/$(INSTALL_FPCSUBDIR)/$(PACKAGE_NAME)
else
INSTALL_SOURCEDIR:=$(INSTALL_BASEDIR)/source/$(PACKAGE_NAME)
endif
else
INSTALL_SOURCEDIR:=$(INSTALL_BASEDIR)/source
endif
endif
endif
ifndef INSTALL_DOCDIR
ifdef UNIXHier
ifdef BSDhier
DOCPREFIXDIR=share/doc
else
ifdef linuxHier
DOCPREFIXDIR=share/doc
else
DOCPREFIXDIR=doc
endif
endif
ifdef INSTALL_FPCPACKAGE
INSTALL_DOCDIR:=$(INSTALL_PREFIX)/$(DOCPREFIXDIR)/fpc-$(FPC_VERSION)/$(PACKAGE_NAME)
else
INSTALL_DOCDIR:=$(INSTALL_PREFIX)/$(DOCPREFIXDIR)/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
endif
else
ifdef INSTALL_FPCPACKAGE
INSTALL_DOCDIR:=$(INSTALL_BASEDIR)/doc/$(PACKAGE_NAME)
else
INSTALL_DOCDIR:=$(INSTALL_BASEDIR)/doc
endif
endif
endif
ifndef INSTALL_EXAMPLEDIR
ifdef UNIXHier
ifdef INSTALL_FPCPACKAGE
ifdef BSDhier
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/share/examples/fpc-$(FPC_VERSION)/$(PACKAGE_NAME)
else
ifdef linuxHier
INSTALL_EXAMPLEDIR:=$(INSTALL_DOCDIR)/examples
else
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/doc/fpc-$(FPC_VERSION)/examples/$(PACKAGE_NAME)
endif
endif
else
ifdef BSDhier
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/share/examples/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
else
ifdef linuxHier
INSTALL_EXAMPLEDIR:=$(INSTALL_DOCDIR)/examples/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
else
INSTALL_EXAMPLEDIR:=$(INSTALL_PREFIX)/doc/$(PACKAGE_NAME)-$(PACKAGE_VERSION)
endif
endif
endif
else
ifdef INSTALL_FPCPACKAGE
INSTALL_EXAMPLEDIR:=$(INSTALL_BASEDIR)/examples/$(PACKAGE_NAME)
else
INSTALL_EXAMPLEDIR:=$(INSTALL_BASEDIR)/examples
endif
endif
endif
ifndef INSTALL_DATADIR
INSTALL_DATADIR=$(INSTALL_BASEDIR)
endif
ifndef INSTALL_SHAREDDIR
INSTALL_SHAREDDIR=$(INSTALL_PREFIX)/lib
endif
ifdef CROSSCOMPILE
ifndef CROSSBINDIR
CROSSBINDIR:=$(wildcard $(CROSSTARGETDIR)/bin/$(SOURCESUFFIX))
ifeq ($(CROSSBINDIR),)
CROSSBINDIR:=$(wildcard $(INSTALL_BASEDIR)/cross/$(TARGETSUFFIX)/bin/$(FULL_SOURCE))
endif
endif
else
CROSSBINDIR=
endif
BATCHEXT=.bat
LOADEREXT=.as
EXEEXT=.exe
PPLEXT=.ppl
PPUEXT=.ppu
OEXT=.o
ASMEXT=.s
SMARTEXT=.sl
STATICLIBEXT=.a
SHAREDLIBEXT=.so
SHAREDLIBPREFIX=libfp
STATICLIBPREFIX=libp
IMPORTLIBPREFIX=libimp
RSTEXT=.rst
EXEDBGEXT=.dbg
ifeq ($(OS_TARGET),go32v1)
STATICLIBPREFIX=
SHORTSUFFIX=v1
endif
ifeq ($(OS_TARGET),go32v2)
STATICLIBPREFIX=
SHORTSUFFIX=dos
IMPORTLIBPREFIX=
endif
ifeq ($(OS_TARGET),watcom)
STATICLIBPREFIX=
OEXT=.obj
ASMEXT=.asm
SHAREDLIBEXT=.dll
SHORTSUFFIX=wat
IMPORTLIBPREFIX=
endif
ifeq ($(OS_TARGET),linux)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=lnx
endif
ifeq ($(OS_TARGET),freebsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=fbs
endif
ifeq ($(OS_TARGET),netbsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=nbs
endif
ifeq ($(OS_TARGET),openbsd)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=obs
endif
ifeq ($(OS_TARGET),win32)
SHAREDLIBEXT=.dll
SHORTSUFFIX=w32
endif
ifeq ($(OS_TARGET),os2)
BATCHEXT=.cmd
AOUTEXT=.out
STATICLIBPREFIX=
SHAREDLIBEXT=.dll
SHORTSUFFIX=os2
ECHO=echo
IMPORTLIBPREFIX=
endif
ifeq ($(OS_TARGET),emx)
BATCHEXT=.cmd
AOUTEXT=.out
STATICLIBPREFIX=
SHAREDLIBEXT=.dll
SHORTSUFFIX=emx
ECHO=echo
IMPORTLIBPREFIX=
endif
ifeq ($(OS_TARGET),amiga)
EXEEXT=
SHAREDLIBEXT=.library
SHORTSUFFIX=amg
endif
ifeq ($(OS_TARGET),morphos)
EXEEXT=
SHAREDLIBEXT=.library
SHORTSUFFIX=mos
endif
ifeq ($(OS_TARGET),atari)
EXEEXT=.ttp
SHORTSUFFIX=ata
endif
ifeq ($(OS_TARGET),beos)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=be
endif
ifeq ($(OS_TARGET),haiku)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=hai
endif
ifeq ($(OS_TARGET),solaris)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=sun
endif
ifeq ($(OS_TARGET),qnx)
BATCHEXT=.sh
EXEEXT=
SHORTSUFFIX=qnx
endif
ifeq ($(OS_TARGET),netware)
EXEEXT=.nlm
STATICLIBPREFIX=
SHORTSUFFIX=nw
IMPORTLIBPREFIX=imp
endif
ifeq ($(OS_TARGET),netwlibc)
EXEEXT=.nlm
STATICLIBPREFIX=
SHORTSUFFIX=nwl
IMPORTLIBPREFIX=imp
endif
ifeq ($(OS_TARGET),macos)
BATCHEXT=
EXEEXT=
DEBUGSYMEXT=.xcoff
SHORTSUFFIX=mac
IMPORTLIBPREFIX=imp
endif
ifneq ($(findstring $(OS_TARGET),darwin iphonesim),)
BATCHEXT=.sh
EXEEXT=
HASSHAREDLIB=1
SHORTSUFFIX=dwn
EXEDBGEXT=.dSYM
endif
ifeq ($(OS_TARGET),gba)
EXEEXT=.gba
SHAREDLIBEXT=.so
SHORTSUFFIX=gba
endif
ifeq ($(OS_TARGET),symbian)
SHAREDLIBEXT=.dll
SHORTSUFFIX=symbian
endif
ifeq ($(OS_TARGET),NativeNT)
SHAREDLIBEXT=.dll
SHORTSUFFIX=nativent
endif
ifeq ($(OS_TARGET),wii)
EXEEXT=.dol
SHAREDLIBEXT=.so
SHORTSUFFIX=wii
endif
ifneq ($(findstring $(OS_SOURCE),$(LIMIT83fs)),)
FPCMADE=fpcmade.$(SHORTSUFFIX)
ZIPSUFFIX=$(SHORTSUFFIX)
ZIPCROSSPREFIX=
ZIPSOURCESUFFIX=src
ZIPEXAMPLESUFFIX=exm
else
FPCMADE=fpcmade.$(TARGETSUFFIX)
ZIPSOURCESUFFIX=.source
ZIPEXAMPLESUFFIX=.examples
ifdef CROSSCOMPILE
ZIPSUFFIX=.$(SOURCESUFFIX)
ZIPCROSSPREFIX=$(TARGETSUFFIX)-
else
ZIPSUFFIX=.$(TARGETSUFFIX)
ZIPCROSSPREFIX=
endif
endif
ifndef ECHO
ECHO:=$(strip $(wildcard $(addsuffix /gecho$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO:=$(strip $(wildcard $(addsuffix /echo$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ECHO),)
ECHO= __missing_command_ECHO
else
ECHO:=$(firstword $(ECHO))
endif
else
ECHO:=$(firstword $(ECHO))
endif
endif
export ECHO
ifndef DATE
DATE:=$(strip $(wildcard $(addsuffix /gdate$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(DATE),)
DATE:=$(strip $(wildcard $(addsuffix /date$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(DATE),)
DATE= __missing_command_DATE
else
DATE:=$(firstword $(DATE))
endif
else
DATE:=$(firstword $(DATE))
endif
endif
export DATE
ifndef GINSTALL
GINSTALL:=$(strip $(wildcard $(addsuffix /ginstall$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(GINSTALL),)
GINSTALL:=$(strip $(wildcard $(addsuffix /install$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(GINSTALL),)
GINSTALL= __missing_command_GINSTALL
else
GINSTALL:=$(firstword $(GINSTALL))
endif
else
GINSTALL:=$(firstword $(GINSTALL))
endif
endif
export GINSTALL
ifndef CPPROG
CPPROG:=$(strip $(wildcard $(addsuffix /cp$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(CPPROG),)
CPPROG= __missing_command_CPPROG
else
CPPROG:=$(firstword $(CPPROG))
endif
endif
export CPPROG
ifndef RMPROG
RMPROG:=$(strip $(wildcard $(addsuffix /rm$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(RMPROG),)
RMPROG= __missing_command_RMPROG
else
RMPROG:=$(firstword $(RMPROG))
endif
endif
export RMPROG
ifndef MVPROG
MVPROG:=$(strip $(wildcard $(addsuffix /mv$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(MVPROG),)
MVPROG= __missing_command_MVPROG
else
MVPROG:=$(firstword $(MVPROG))
endif
endif
export MVPROG
ifndef MKDIRPROG
MKDIRPROG:=$(strip $(wildcard $(addsuffix /gmkdir$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(MKDIRPROG),)
MKDIRPROG:=$(strip $(wildcard $(addsuffix /mkdir$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(MKDIRPROG),)
MKDIRPROG= __missing_command_MKDIRPROG
else
MKDIRPROG:=$(firstword $(MKDIRPROG))
endif
else
MKDIRPROG:=$(firstword $(MKDIRPROG))
endif
endif
export MKDIRPROG
ifndef ECHOREDIR
ifndef inUnix
ECHOREDIR=echo
else
ECHOREDIR=$(ECHO)
endif
endif
ifndef COPY
COPY:=$(CPPROG) -fp
endif
ifndef COPYTREE
COPYTREE:=$(CPPROG) -Rfp
endif
ifndef MKDIRTREE
MKDIRTREE:=$(MKDIRPROG) -p
endif
ifndef MOVE
MOVE:=$(MVPROG) -f
endif
ifndef DEL
DEL:=$(RMPROG) -f
endif
ifndef DELTREE
DELTREE:=$(RMPROG) -rf
endif
ifndef INSTALL
ifdef inUnix
INSTALL:=$(GINSTALL) -c -m 644
else
INSTALL:=$(COPY)
endif
endif
ifndef INSTALLEXE
ifdef inUnix
INSTALLEXE:=$(GINSTALL) -c -m 755
else
INSTALLEXE:=$(COPY)
endif
endif
ifndef MKDIR
MKDIR:=$(GINSTALL) -m 755 -d
endif
export ECHOREDIR COPY COPYTREE MOVE DEL DELTREE INSTALL INSTALLEXE MKDIR
ifndef PPUMOVE
PPUMOVE:=$(strip $(wildcard $(addsuffix /ppumove$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(PPUMOVE),)
PPUMOVE= __missing_command_PPUMOVE
else
PPUMOVE:=$(firstword $(PPUMOVE))
endif
endif
export PPUMOVE
ifndef FPCMAKE
FPCMAKE:=$(strip $(wildcard $(addsuffix /fpcmake$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(FPCMAKE),)
FPCMAKE= __missing_command_FPCMAKE
else
FPCMAKE:=$(firstword $(FPCMAKE))
endif
endif
export FPCMAKE
ifndef ZIPPROG
ZIPPROG:=$(strip $(wildcard $(addsuffix /zip$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(ZIPPROG),)
ZIPPROG= __missing_command_ZIPPROG
else
ZIPPROG:=$(firstword $(ZIPPROG))
endif
endif
export ZIPPROG
ifndef TARPROG
TARPROG:=$(strip $(wildcard $(addsuffix /gtar$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(TARPROG),)
TARPROG:=$(strip $(wildcard $(addsuffix /tar$(SRCEXEEXT),$(SEARCHPATH))))
ifeq ($(TARPROG),)
TARPROG= __missing_command_TARPROG
else
TARPROG:=$(firstword $(TARPROG))
endif
else
TARPROG:=$(firstword $(TARPROG))
endif
endif
export TARPROG
ASNAME=$(BINUTILSPREFIX)as
LDNAME=$(BINUTILSPREFIX)ld
ARNAME=$(BINUTILSPREFIX)ar
RCNAME=$(BINUTILSPREFIX)rc
ifndef ASPROG
ifdef CROSSBINDIR
ASPROG=$(CROSSBINDIR)/$(ASNAME)$(SRCEXEEXT)
else
ASPROG=$(ASNAME)
endif
endif
ifndef LDPROG
ifdef CROSSBINDIR
LDPROG=$(CROSSBINDIR)/$(LDNAME)$(SRCEXEEXT)
else
LDPROG=$(LDNAME)
endif
endif
ifndef RCPROG
ifdef CROSSBINDIR
RCPROG=$(CROSSBINDIR)/$(RCNAME)$(SRCEXEEXT)
else
RCPROG=$(RCNAME)
endif
endif
ifndef ARPROG
ifdef CROSSBINDIR
ARPROG=$(CROSSBINDIR)/$(ARNAME)$(SRCEXEEXT)
else
ARPROG=$(ARNAME)
endif
endif
AS=$(ASPROG)
LD=$(LDPROG)
RC=$(RCPROG)
AR=$(ARPROG)
PPAS=ppas$(SRCBATCHEXT)
ifdef inUnix
LDCONFIG=ldconfig
else
LDCONFIG=
endif
ifdef DATE
DATESTR:=$(shell $(DATE) +%Y%m%d)
else
DATESTR=
endif
ZIPOPT=-9
ZIPEXT=.zip
ifeq ($(USETAR),bz2)
TAROPT=vj
TAREXT=.tar.bz2
else
TAROPT=vz
TAREXT=.tar.gz
endif
ifndef NOCPUDEF
override FPCOPTDEF=$(ARCH)
endif
ifneq ($(OS_TARGET),$(OS_SOURCE))
override FPCOPT+=-T$(OS_TARGET)
endif
ifneq ($(CPU_TARGET),$(CPU_SOURCE))
override FPCOPT+=-P$(ARCH)
endif
ifeq ($(OS_SOURCE),openbsd)
override FPCOPT+=-FD$(NEW_BINUTILS_PATH)
override FPCMAKEOPT+=-FD$(NEW_BINUTILS_PATH)
endif
ifndef CROSSBOOTSTRAP
ifneq ($(BINUTILSPREFIX),)
override FPCOPT+=-XP$(BINUTILSPREFIX)
endif
ifneq ($(BINUTILSPREFIX),)
override FPCOPT+=-Xr$(RLINKPATH)
endif
endif
ifndef CROSSCOMPILE
ifneq ($(BINUTILSPREFIX),)
override FPCMAKEOPT+=-XP$(BINUTILSPREFIX)
endif
endif
ifdef UNITDIR
override FPCOPT+=$(addprefix -Fu,$(UNITDIR))
endif
ifdef LIBDIR
override FPCOPT+=$(addprefix -Fl,$(LIBDIR))
endif
ifdef OBJDIR
override FPCOPT+=$(addprefix -Fo,$(OBJDIR))
endif
ifdef INCDIR
override FPCOPT+=$(addprefix -Fi,$(INCDIR))
endif
ifdef LINKSMART
override FPCOPT+=-XX
endif
ifdef CREATESMART
override FPCOPT+=-CX
endif
ifdef DEBUG
override FPCOPT+=-gl
override FPCOPTDEF+=DEBUG
endif
ifdef RELEASE
ifneq ($(findstring 2.0.,$(FPC_VERSION)),)
ifeq ($(CPU_TARGET),i386)
FPCCPUOPT:=-OG2p3
endif
ifeq ($(CPU_TARGET),powerpc)
FPCCPUOPT:=-O1r
endif
else
FPCCPUOPT:=-O2
endif
override FPCOPT+=-Ur -Xs $(FPCCPUOPT) -n
override FPCOPTDEF+=RELEASE
endif
ifdef STRIP
override FPCOPT+=-Xs
endif
ifdef OPTIMIZE
override FPCOPT+=-O2
endif
ifdef VERBOSE
override FPCOPT+=-vwni
endif
ifdef COMPILER_OPTIONS
override FPCOPT+=$(COMPILER_OPTIONS)
endif
ifdef COMPILER_UNITDIR
override FPCOPT+=$(addprefix -Fu,$(COMPILER_UNITDIR))
endif
ifdef COMPILER_LIBRARYDIR
override FPCOPT+=$(addprefix -Fl,$(COMPILER_LIBRARYDIR))
endif
ifdef COMPILER_OBJECTDIR
override FPCOPT+=$(addprefix -Fo,$(COMPILER_OBJECTDIR))
endif
ifdef COMPILER_INCLUDEDIR
override FPCOPT+=$(addprefix -Fi,$(COMPILER_INCLUDEDIR))
endif
ifdef CROSSBINDIR
override FPCOPT+=-FD$(CROSSBINDIR)
endif
ifdef COMPILER_TARGETDIR
override FPCOPT+=-FE$(COMPILER_TARGETDIR)
ifeq ($(COMPILER_TARGETDIR),.)
override TARGETDIRPREFIX=
else
override TARGETDIRPREFIX=$(COMPILER_TARGETDIR)/
endif
endif
ifdef COMPILER_UNITTARGETDIR
override FPCOPT+=-FU$(COMPILER_UNITTARGETDIR)
ifeq ($(COMPILER_UNITTARGETDIR),.)
override UNITTARGETDIRPREFIX=
else
override UNITTARGETDIRPREFIX=$(COMPILER_UNITTARGETDIR)/
endif
else
ifdef COMPILER_TARGETDIR
override COMPILER_UNITTARGETDIR=$(COMPILER_TARGETDIR)
override UNITTARGETDIRPREFIX=$(TARGETDIRPREFIX)
endif
endif
ifdef CREATESHARED
override FPCOPT+=-Cg
ifeq ($(CPU_TARGET),i386)
override FPCOPT+=-Aas
endif
endif
ifeq ($(findstring 2.0.,$(FPC_VERSION)),)
ifneq ($(findstring $(OS_TARGET),freebsd openbsd netbsd linux solaris),)
ifeq ($(CPU_TARGET),x86_64)
override FPCOPT+=-Cg
endif
endif
endif
ifdef LINKSHARED
endif
ifdef OPT
override FPCOPT+=$(OPT)
endif
ifdef FPCOPTDEF
override FPCOPT+=$(addprefix -d,$(FPCOPTDEF))
endif
ifdef CFGFILE
override FPCOPT+=@$(CFGFILE)
endif
ifdef USEENV
override FPCEXTCMD:=$(FPCOPT)
override FPCOPT:=!FPCEXTCMD
export FPCEXTCMD
endif
override AFULL_TARGET=$(CPU_TARGET)-$(OS_TARGET)
override AFULL_SOURCE=$(CPU_SOURCE)-$(OS_SOURCE)
ifneq ($(AFULL_TARGET),$(AFULL_SOURCE))
override ACROSSCOMPILE=1
endif
ifdef ACROSSCOMPILE
override FPCOPT+=$(CROSSOPT)
endif
override COMPILER:=$(FPC) $(FPCOPT)
ifeq (,$(findstring -s ,$(COMPILER)))
EXECPPAS=
else
ifeq ($(FULL_SOURCE),$(FULL_TARGET))
ifdef RUNBATCH
EXECPPAS:=@$(RUNBATCH) $(PPAS)
else
EXECPPAS:=@$(PPAS)
endif
endif
endif
ifdef TARGET_RSTS
override RSTFILES=$(addsuffix $(RSTEXT),$(TARGET_RSTS))
override CLEANRSTFILES+=$(RSTFILES)
endif
.PHONY: fpc_clean fpc_cleanall fpc_distclean
ifdef EXEFILES
override CLEANEXEFILES:=$(addprefix $(TARGETDIRPREFIX),$(CLEANEXEFILES))
override CLEANEXEDBGFILES:=$(addprefix $(TARGETDIRPREFIX),$(CLEANEXEDBGFILES))
endif
ifdef CLEAN_PROGRAMS
override CLEANEXEFILES+=$(addprefix $(TARGETDIRPREFIX),$(addsuffix $(EXEEXT), $(CLEAN_PROGRAMS)))
override CLEANEXEDBGFILES+=$(addprefix $(TARGETDIRPREFIX),$(addsuffix $(EXEDBGEXT), $(CLEAN_PROGRAMS)))
endif
ifdef CLEAN_UNITS
override CLEANPPUFILES+=$(addsuffix $(PPUEXT),$(CLEAN_UNITS))
endif
ifdef CLEANPPUFILES
override CLEANPPULINKFILES:=$(subst $(PPUEXT),$(OEXT),$(CLEANPPUFILES)) $(addprefix $(STATICLIBPREFIX),$(subst $(PPUEXT),$(STATICLIBEXT),$(CLEANPPUFILES))) $(addprefix $(IMPORTLIBPREFIX),$(subst $(PPUEXT),$(STATICLIBEXT),$(CLEANPPUFILES)))
ifdef DEBUGSYMEXT
override CLEANPPULINKFILES+=$(subst $(PPUEXT),$(DEBUGSYMEXT),$(CLEANPPUFILES))
endif
override CLEANPPUFILES:=$(addprefix $(UNITTARGETDIRPREFIX),$(CLEANPPUFILES))
override CLEANPPULINKFILES:=$(wildcard $(addprefix $(UNITTARGETDIRPREFIX),$(CLEANPPULINKFILES)))
endif
fpc_clean: $(CLEANTARGET)
ifdef CLEANEXEFILES
	-$(DEL) $(CLEANEXEFILES)
endif
ifdef CLEANEXEDBGFILES
	-$(DELTREE) $(CLEANEXEDBGFILES)
endif
ifdef CLEANPPUFILES
	-$(DEL) $(CLEANPPUFILES)
endif
ifneq ($(CLEANPPULINKFILES),)
	-$(DEL) $(CLEANPPULINKFILES)
endif
ifdef CLEANRSTFILES
	-$(DEL) $(addprefix $(UNITTARGETDIRPREFIX),$(CLEANRSTFILES))
endif
ifdef CLEAN_FILES
	-$(DEL) $(CLEAN_FILES)
endif
ifdef LIB_NAME
	-$(DEL) $(LIB_NAME) $(LIB_FULLNAME)
endif
	-$(DEL) $(FPCMADE) Package.fpc $(PPAS) script.res link.res $(FPCEXTFILE) $(REDIRFILE)
	-$(DEL) *$(ASMEXT) *_ppas$(BATCHEXT)
fpc_cleanall: $(CLEANTARGET)
ifdef CLEANEXEFILES
	-$(DEL) $(CLEANEXEFILES)
endif
ifdef COMPILER_UNITTARGETDIR
ifdef CLEANPPUFILES
	-$(DEL) $(CLEANPPUFILES)
endif
ifneq ($(CLEANPPULINKFILES),)
	-$(DEL) $(CLEANPPULINKFILES)
endif
ifdef CLEANRSTFILES
	-$(DEL) $(addprefix $(UNITTARGETDIRPREFIX),$(CLEANRSTFILES))
endif
endif
ifdef CLEAN_FILES
	-$(DEL) $(CLEAN_FILES)
endif
	-$(DELTREE) units
	-$(DEL) *$(OEXT) *$(PPUEXT) *$(RSTEXT) *$(ASMEXT) *$(STATICLIBEXT) *$(SHAREDLIBEXT) *$(PPLEXT)
ifneq ($(PPUEXT),.ppu)
	-$(DEL) *.o *.ppu *.a
endif
	-$(DELTREE) *$(SMARTEXT)
	-$(DEL) fpcmade.* Package.fpc $(PPAS) script.res link.res $(FPCEXTFILE) $(REDIRFILE)
	-$(DEL) *_ppas$(BATCHEXT)
ifdef AOUTEXT
	-$(DEL) *$(AOUTEXT)
endif
ifdef DEBUGSYMEXT
	-$(DEL) *$(DEBUGSYMEXT)
endif
fpc_distclean: cleanall
.PHONY: fpc_baseinfo
override INFORULES+=fpc_baseinfo
fpc_baseinfo:
	@$(ECHO)
	@$(ECHO)  == Package info ==
	@$(ECHO)  Package Name..... $(PACKAGE_NAME)
	@$(ECHO)  Package Version.. $(PACKAGE_VERSION)
	@$(ECHO)
	@$(ECHO)  == Configuration info ==
	@$(ECHO)
	@$(ECHO)  FPC.......... $(FPC)
	@$(ECHO)  FPC Version.. $(FPC_VERSION)
	@$(ECHO)  Source CPU... $(CPU_SOURCE)
	@$(ECHO)  Target CPU... $(CPU_TARGET)
	@$(ECHO)  Source OS.... $(OS_SOURCE)
	@$(ECHO)  Target OS.... $(OS_TARGET)
	@$(ECHO)  Full Source.. $(FULL_SOURCE)
	@$(ECHO)  Full Target.. $(FULL_TARGET)
	@$(ECHO)  SourceSuffix. $(SOURCESUFFIX)
	@$(ECHO)  TargetSuffix. $(TARGETSUFFIX)
	@$(ECHO)  FPC fpmake... $(FPCFPMAKE)
	@$(ECHO)
	@$(ECHO)  == Directory info ==
	@$(ECHO)
	@$(ECHO)  Required pkgs... $(REQUIRE_PACKAGES)
	@$(ECHO)
	@$(ECHO)  Basedir......... $(BASEDIR)
	@$(ECHO)  FPCDir.......... $(FPCDIR)
	@$(ECHO)  CrossBinDir..... $(CROSSBINDIR)
	@$(ECHO)  UnitsDir........ $(UNITSDIR)
	@$(ECHO)  PackagesDir..... $(PACKAGESDIR)
	@$(ECHO)
	@$(ECHO)  GCC library..... $(GCCLIBDIR)
	@$(ECHO)  Other library... $(OTHERLIBDIR)
	@$(ECHO)
	@$(ECHO)  == Tools info ==
	@$(ECHO)
	@$(ECHO)  As........ $(AS)
	@$(ECHO)  Ld........ $(LD)
	@$(ECHO)  Ar........ $(AR)
	@$(ECHO)  Rc........ $(RC)
	@$(ECHO)
	@$(ECHO)  Mv........ $(MVPROG)
	@$(ECHO)  Cp........ $(CPPROG)
	@$(ECHO)  Rm........ $(RMPROG)
	@$(ECHO)  GInstall.. $(GINSTALL)
	@$(ECHO)  Echo...... $(ECHO)
	@$(ECHO)  Shell..... $(SHELL)
	@$(ECHO)  Date...... $(DATE)
	@$(ECHO)  FPCMake... $(FPCMAKE)
	@$(ECHO)  PPUMove... $(PPUMOVE)
	@$(ECHO)  Zip....... $(ZIPPROG)
	@$(ECHO)
	@$(ECHO)  == Object info ==
	@$(ECHO)
	@$(ECHO)  Target Loaders........ $(TARGET_LOADERS)
	@$(ECHO)  Target Units.......... $(TARGET_UNITS)
	@$(ECHO)  Target Implicit Units. $(TARGET_IMPLICITUNITS)
	@$(ECHO)  Target Programs....... $(TARGET_PROGRAMS)
	@$(ECHO)  Target Dirs........... $(TARGET_DIRS)
	@$(ECHO)  Target Examples....... $(TARGET_EXAMPLES)
	@$(ECHO)  Target ExampleDirs.... $(TARGET_EXAMPLEDIRS)
	@$(ECHO)
	@$(ECHO)  Clean Units......... $(CLEAN_UNITS)
	@$(ECHO)  Clean Files......... $(CLEAN_FILES)
	@$(ECHO)
	@$(ECHO)  Install Units....... $(INSTALL_UNITS)
	@$(ECHO)  Install Files....... $(INSTALL_FILES)
	@$(ECHO)
	@$(ECHO)  == Install info ==
	@$(ECHO)
	@$(ECHO)  DateStr.............. $(DATESTR)
	@$(ECHO)  ZipName.............. $(ZIPNAME)
	@$(ECHO)  ZipPrefix............ $(ZIPPREFIX)
	@$(ECHO)  ZipCrossPrefix....... $(ZIPCROSSPREFIX)
	@$(ECHO)  ZipSuffix............ $(ZIPSUFFIX)
	@$(ECHO)  FullZipName.......... $(FULLZIPNAME)
	@$(ECHO)  Install FPC Package.. $(INSTALL_FPCPACKAGE)
	@$(ECHO)
	@$(ECHO)  Install base dir..... $(INSTALL_BASEDIR)
	@$(ECHO)  Install binary dir... $(INSTALL_BINDIR)
	@$(ECHO)  Install library dir.. $(INSTALL_LIBDIR)
	@$(ECHO)  Install units dir.... $(INSTALL_UNITDIR)
	@$(ECHO)  Install source dir... $(INSTALL_SOURCEDIR)
	@$(ECHO)  Install doc dir...... $(INSTALL_DOCDIR)
	@$(ECHO)  Install example dir.. $(INSTALL_EXAMPLEDIR)
	@$(ECHO)  Install data dir..... $(INSTALL_DATADIR)
	@$(ECHO)
	@$(ECHO)  Dist destination dir. $(DIST_DESTDIR)
	@$(ECHO)  Dist zip name........ $(DIST_ZIPNAME)
	@$(ECHO)
.PHONY: fpc_info
fpc_info: $(INFORULES)
.PHONY: fpc_makefile fpc_makefiles fpc_makefile_sub1 fpc_makefile_sub2 \
	fpc_makefile_dirs
fpc_makefile:
	$(FPCMAKE) -w -T$(OS_TARGET) Makefile.fpc
fpc_makefile_sub1:
ifdef TARGET_DIRS
	$(FPCMAKE) -w -T$(OS_TARGET) $(addsuffix /Makefile.fpc,$(TARGET_DIRS))
endif
ifdef TARGET_EXAMPLEDIRS
	$(FPCMAKE) -w -T$(OS_TARGET) $(addsuffix /Makefile.fpc,$(TARGET_EXAMPLEDIRS))
endif
fpc_makefile_sub2: $(addsuffix _makefile_dirs,$(TARGET_DIRS) $(TARGET_EXAMPLEDIRS))
fpc_makefile_dirs: fpc_makefile_sub1 fpc_makefile_sub2
fpc_makefiles: fpc_makefile fpc_makefile_dirs
ifeq ($(FULL_TARGET),i386-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_LIBC=1
TARGET_DIRS_UNIXUTIL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_BZIP2=1
endif
ifeq ($(FULL_TARGET),i386-go32v2)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_GDBINT=1
endif
ifeq ($(FULL_TARGET),i386-win32)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_WINUNITS-BASE=1
TARGET_DIRS_WINUNITS-JEDI=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_MAD=1
TARGET_DIRS_TCL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_LUA=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_WINCEUNITS=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_GMP=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_NVAPI=1
TARGET_DIRS_PTC=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifeq ($(FULL_TARGET),i386-os2)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_TCL=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_REXX=1
TARGET_DIRS_OS2UNITS=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_IMLIB=1
endif
ifeq ($(FULL_TARGET),i386-freebsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifeq ($(FULL_TARGET),i386-beos)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),i386-haiku)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),i386-netbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),i386-solaris)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_BFD=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_DBLIB=1
endif
ifeq ($(FULL_TARGET),i386-qnx)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),i386-netware)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_UNZIP=1
endif
ifeq ($(FULL_TARGET),i386-openbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),i386-wdosx)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),i386-darwin)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_UNIVINT=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_X11=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_OBJCRTL=1
TARGET_DIRS_COCOAINT=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_OPENAL=1
endif
ifeq ($(FULL_TARGET),i386-emx)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_TCL=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_REXX=1
TARGET_DIRS_OS2UNITS=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_IMLIB=1
endif
ifeq ($(FULL_TARGET),i386-watcom)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),i386-netwlibc)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_UNZIP=1
endif
ifeq ($(FULL_TARGET),i386-wince)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_WINCEUNITS=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_TCL=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),i386-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),i386-symbian)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),i386-nativent)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),i386-iphonesim)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_UNIVINT=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_OPENGLES=1
TARGET_DIRS_OBJCRTL=1
TARGET_DIRS_DBLIB=1
endif
ifeq ($(FULL_TARGET),m68k-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
endif
ifeq ($(FULL_TARGET),m68k-freebsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifeq ($(FULL_TARGET),m68k-netbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),m68k-amiga)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_AMUNITS=1
endif
ifeq ($(FULL_TARGET),m68k-atari)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),m68k-openbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),m68k-palmos)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_PALMUNITS=1
endif
ifeq ($(FULL_TARGET),m68k-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),powerpc-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
endif
ifeq ($(FULL_TARGET),powerpc-netbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),powerpc-amiga)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_AMUNITS=1
endif
ifeq ($(FULL_TARGET),powerpc-macos)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),powerpc-darwin)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_UNIVINT=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_X11=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_OBJCRTL=1
TARGET_DIRS_COCOAINT=1
endif
ifeq ($(FULL_TARGET),powerpc-morphos)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_SDL=1
endif
ifeq ($(FULL_TARGET),powerpc-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),powerpc-wii)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_LIBOGCFPC=1
endif
ifeq ($(FULL_TARGET),sparc-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
endif
ifeq ($(FULL_TARGET),sparc-netbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),sparc-solaris)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_BFD=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_DBLIB=1
endif
ifeq ($(FULL_TARGET),sparc-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),x86_64-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
endif
ifeq ($(FULL_TARGET),x86_64-freebsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifeq ($(FULL_TARGET),x86_64-netbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),x86_64-solaris)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_BFD=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_DBLIB=1
endif
ifeq ($(FULL_TARGET),x86_64-openbsd)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),x86_64-darwin)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_UNIVINT=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_X11=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_COCOAINT=1
endif
ifeq ($(FULL_TARGET),x86_64-win64)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_WINUNITS-BASE=1
TARGET_DIRS_WINUNITS-JEDI=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_TCL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_NVAPI=1
TARGET_DIRS_PTC=1
TARGET_DIRS_GRAPH=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifeq ($(FULL_TARGET),x86_64-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),arm-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
endif
ifeq ($(FULL_TARGET),arm-palmos)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_PALMUNITS=1
endif
ifeq ($(FULL_TARGET),arm-darwin)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_UNIVINT=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_OPENGLES=1
TARGET_DIRS_OBJCRTL=1
endif
ifeq ($(FULL_TARGET),arm-wince)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_WINCEUNITS=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_TCL=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
endif
ifeq ($(FULL_TARGET),arm-gba)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),arm-nds)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),arm-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),arm-symbian)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),powerpc64-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
TARGET_DIRS_GRAPH=1
endif
ifeq ($(FULL_TARGET),powerpc64-darwin)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_GMP=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_UNIVINT=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_X11=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_COCOAINT=1
endif
ifeq ($(FULL_TARGET),powerpc64-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),avr-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),armeb-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifeq ($(FULL_TARGET),armeb-embedded)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
endif
ifeq ($(FULL_TARGET),mipsel-linux)
TARGET_DIRS_HASH=1
TARGET_DIRS_PASJPEG=1
TARGET_DIRS_PASZLIB=1
TARGET_DIRS_FPMKUNIT=1
TARGET_DIRS_FCL-XML=1
TARGET_DIRS_FCL-BASE=1
TARGET_DIRS_FCL-DB=1
TARGET_DIRS_FCL-IMAGE=1
TARGET_DIRS_FCL-NET=1
TARGET_DIRS_FCL-PASSRC=1
TARGET_DIRS_FCL-REGISTRY=1
TARGET_DIRS_FCL-FPCUNIT=1
TARGET_DIRS_FCL-JSON=1
TARGET_DIRS_FCL-JS=1
TARGET_DIRS_FCL-PROCESS=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_REGEXPR=1
TARGET_DIRS_CHM=1
TARGET_DIRS_FCL-RES=1
TARGET_DIRS_LIBGD=1
TARGET_DIRS_SYMBOLIC=1
TARGET_DIRS_BZIP2=1
TARGET_DIRS_HERMES=1
TARGET_DIRS_FPPKG=1
TARGET_DIRS_FV=1
TARGET_DIRS_FCL-WEB=1
TARGET_DIRS_FASTCGI=1
TARGET_DIRS_FCL-ASYNC=1
TARGET_DIRS_IBASE=1
TARGET_DIRS_MYSQL=1
TARGET_DIRS_NCURSES=1
TARGET_DIRS_UNZIP=1
TARGET_DIRS_ZLIB=1
TARGET_DIRS_ORACLE=1
TARGET_DIRS_DBUS=1
TARGET_DIRS_ODBC=1
TARGET_DIRS_POSTGRES=1
TARGET_DIRS_SQLITE=1
TARGET_DIRS_PTHREADS=1
TARGET_DIRS_IMAGEMAGICK=1
TARGET_DIRS_GDBINT=1
TARGET_DIRS_LIBPNG=1
TARGET_DIRS_X11=1
TARGET_DIRS_UUID=1
TARGET_DIRS_LDAP=1
TARGET_DIRS_MODPLUG=1
TARGET_DIRS_DTS=1
TARGET_DIRS_MAD=1
TARGET_DIRS_GDBM=1
TARGET_DIRS_TCL=1
TARGET_DIRS_SYSLOG=1
TARGET_DIRS_LIBCURL=1
TARGET_DIRS_OPENGL=1
TARGET_DIRS_OPENCL=1
TARGET_DIRS_CAIRO=1
TARGET_DIRS_GTK1=1
TARGET_DIRS_GTK2=1
TARGET_DIRS_LIBRSVG=1
TARGET_DIRS_A52=1
TARGET_DIRS_BFD=1
TARGET_DIRS_ASPELL=1
TARGET_DIRS_SVGALIB=1
TARGET_DIRS_NEWT=1
TARGET_DIRS_CDROM=1
TARGET_DIRS_USERS=1
TARGET_DIRS_ICONVENC=1
TARGET_DIRS_LIBXML=1
TARGET_DIRS_PROJ4=1
TARGET_DIRS_FCL-EXTRA=1
TARGET_DIRS_ZORBA=1
TARGET_DIRS_IMLIB=1
TARGET_DIRS_UTMP=1
TARGET_DIRS_FPGTK=1
TARGET_DIRS_OPENAL=1
TARGET_DIRS_LUA=1
TARGET_DIRS_OGGVORBIS=1
TARGET_DIRS_XFORMS=1
TARGET_DIRS_FFTW=1
TARGET_DIRS_PCAP=1
TARGET_DIRS_GGI=1
TARGET_DIRS_SDL=1
TARGET_DIRS_OPENSSL=1
TARGET_DIRS_GNOME1=1
TARGET_DIRS_HTTPD22=1
TARGET_DIRS_HTTPD24=1
TARGET_DIRS_PXLIB=1
TARGET_DIRS_NUMLIB=1
TARGET_DIRS_GMP=1
TARGET_DIRS_LIBSEE=1
TARGET_DIRS_PTC=1
TARGET_DIRS_DBLIB=1
TARGET_DIRS_FPINDEXER=1
TARGET_DIRS_LIBVLC=1
endif
ifdef TARGET_DIRS_HASH
hash_all:
	$(MAKE) -C hash all
hash_debug:
	$(MAKE) -C hash debug
hash_smart:
	$(MAKE) -C hash smart
hash_release:
	$(MAKE) -C hash release
hash_units:
	$(MAKE) -C hash units
hash_examples:
	$(MAKE) -C hash examples
hash_shared:
	$(MAKE) -C hash shared
hash_install:
	$(MAKE) -C hash install
hash_sourceinstall:
	$(MAKE) -C hash sourceinstall
hash_exampleinstall:
	$(MAKE) -C hash exampleinstall
hash_distinstall:
	$(MAKE) -C hash distinstall
hash_zipinstall:
	$(MAKE) -C hash zipinstall
hash_zipsourceinstall:
	$(MAKE) -C hash zipsourceinstall
hash_zipexampleinstall:
	$(MAKE) -C hash zipexampleinstall
hash_zipdistinstall:
	$(MAKE) -C hash zipdistinstall
hash_clean:
	$(MAKE) -C hash clean
hash_distclean:
	$(MAKE) -C hash distclean
hash_cleanall:
	$(MAKE) -C hash cleanall
hash_info:
	$(MAKE) -C hash info
hash_makefiles:
	$(MAKE) -C hash makefiles
hash:
	$(MAKE) -C hash all
.PHONY: hash_all hash_debug hash_smart hash_release hash_units hash_examples hash_shared hash_install hash_sourceinstall hash_exampleinstall hash_distinstall hash_zipinstall hash_zipsourceinstall hash_zipexampleinstall hash_zipdistinstall hash_clean hash_distclean hash_cleanall hash_info hash_makefiles hash
endif
ifdef TARGET_DIRS_PASJPEG
pasjpeg_all:
	$(MAKE) -C pasjpeg all
pasjpeg_debug:
	$(MAKE) -C pasjpeg debug
pasjpeg_smart:
	$(MAKE) -C pasjpeg smart
pasjpeg_release:
	$(MAKE) -C pasjpeg release
pasjpeg_units:
	$(MAKE) -C pasjpeg units
pasjpeg_examples:
	$(MAKE) -C pasjpeg examples
pasjpeg_shared:
	$(MAKE) -C pasjpeg shared
pasjpeg_install:
	$(MAKE) -C pasjpeg install
pasjpeg_sourceinstall:
	$(MAKE) -C pasjpeg sourceinstall
pasjpeg_exampleinstall:
	$(MAKE) -C pasjpeg exampleinstall
pasjpeg_distinstall:
	$(MAKE) -C pasjpeg distinstall
pasjpeg_zipinstall:
	$(MAKE) -C pasjpeg zipinstall
pasjpeg_zipsourceinstall:
	$(MAKE) -C pasjpeg zipsourceinstall
pasjpeg_zipexampleinstall:
	$(MAKE) -C pasjpeg zipexampleinstall
pasjpeg_zipdistinstall:
	$(MAKE) -C pasjpeg zipdistinstall
pasjpeg_clean:
	$(MAKE) -C pasjpeg clean
pasjpeg_distclean:
	$(MAKE) -C pasjpeg distclean
pasjpeg_cleanall:
	$(MAKE) -C pasjpeg cleanall
pasjpeg_info:
	$(MAKE) -C pasjpeg info
pasjpeg_makefiles:
	$(MAKE) -C pasjpeg makefiles
pasjpeg:
	$(MAKE) -C pasjpeg all
.PHONY: pasjpeg_all pasjpeg_debug pasjpeg_smart pasjpeg_release pasjpeg_units pasjpeg_examples pasjpeg_shared pasjpeg_install pasjpeg_sourceinstall pasjpeg_exampleinstall pasjpeg_distinstall pasjpeg_zipinstall pasjpeg_zipsourceinstall pasjpeg_zipexampleinstall pasjpeg_zipdistinstall pasjpeg_clean pasjpeg_distclean pasjpeg_cleanall pasjpeg_info pasjpeg_makefiles pasjpeg
endif
ifdef TARGET_DIRS_PASZLIB
paszlib_all:
	$(MAKE) -C paszlib all
paszlib_debug:
	$(MAKE) -C paszlib debug
paszlib_smart:
	$(MAKE) -C paszlib smart
paszlib_release:
	$(MAKE) -C paszlib release
paszlib_units:
	$(MAKE) -C paszlib units
paszlib_examples:
	$(MAKE) -C paszlib examples
paszlib_shared:
	$(MAKE) -C paszlib shared
paszlib_install:
	$(MAKE) -C paszlib install
paszlib_sourceinstall:
	$(MAKE) -C paszlib sourceinstall
paszlib_exampleinstall:
	$(MAKE) -C paszlib exampleinstall
paszlib_distinstall:
	$(MAKE) -C paszlib distinstall
paszlib_zipinstall:
	$(MAKE) -C paszlib zipinstall
paszlib_zipsourceinstall:
	$(MAKE) -C paszlib zipsourceinstall
paszlib_zipexampleinstall:
	$(MAKE) -C paszlib zipexampleinstall
paszlib_zipdistinstall:
	$(MAKE) -C paszlib zipdistinstall
paszlib_clean:
	$(MAKE) -C paszlib clean
paszlib_distclean:
	$(MAKE) -C paszlib distclean
paszlib_cleanall:
	$(MAKE) -C paszlib cleanall
paszlib_info:
	$(MAKE) -C paszlib info
paszlib_makefiles:
	$(MAKE) -C paszlib makefiles
paszlib:
	$(MAKE) -C paszlib all
.PHONY: paszlib_all paszlib_debug paszlib_smart paszlib_release paszlib_units paszlib_examples paszlib_shared paszlib_install paszlib_sourceinstall paszlib_exampleinstall paszlib_distinstall paszlib_zipinstall paszlib_zipsourceinstall paszlib_zipexampleinstall paszlib_zipdistinstall paszlib_clean paszlib_distclean paszlib_cleanall paszlib_info paszlib_makefiles paszlib
endif
ifdef TARGET_DIRS_FPMKUNIT
fpmkunit_all:
	$(MAKE) -C fpmkunit all
fpmkunit_debug:
	$(MAKE) -C fpmkunit debug
fpmkunit_smart:
	$(MAKE) -C fpmkunit smart
fpmkunit_release:
	$(MAKE) -C fpmkunit release
fpmkunit_units:
	$(MAKE) -C fpmkunit units
fpmkunit_examples:
	$(MAKE) -C fpmkunit examples
fpmkunit_shared:
	$(MAKE) -C fpmkunit shared
fpmkunit_install:
	$(MAKE) -C fpmkunit install
fpmkunit_sourceinstall:
	$(MAKE) -C fpmkunit sourceinstall
fpmkunit_exampleinstall:
	$(MAKE) -C fpmkunit exampleinstall
fpmkunit_distinstall:
	$(MAKE) -C fpmkunit distinstall
fpmkunit_zipinstall:
	$(MAKE) -C fpmkunit zipinstall
fpmkunit_zipsourceinstall:
	$(MAKE) -C fpmkunit zipsourceinstall
fpmkunit_zipexampleinstall:
	$(MAKE) -C fpmkunit zipexampleinstall
fpmkunit_zipdistinstall:
	$(MAKE) -C fpmkunit zipdistinstall
fpmkunit_clean:
	$(MAKE) -C fpmkunit clean
fpmkunit_distclean:
	$(MAKE) -C fpmkunit distclean
fpmkunit_cleanall:
	$(MAKE) -C fpmkunit cleanall
fpmkunit_info:
	$(MAKE) -C fpmkunit info
fpmkunit_makefiles:
	$(MAKE) -C fpmkunit makefiles
fpmkunit:
	$(MAKE) -C fpmkunit all
.PHONY: fpmkunit_all fpmkunit_debug fpmkunit_smart fpmkunit_release fpmkunit_units fpmkunit_examples fpmkunit_shared fpmkunit_install fpmkunit_sourceinstall fpmkunit_exampleinstall fpmkunit_distinstall fpmkunit_zipinstall fpmkunit_zipsourceinstall fpmkunit_zipexampleinstall fpmkunit_zipdistinstall fpmkunit_clean fpmkunit_distclean fpmkunit_cleanall fpmkunit_info fpmkunit_makefiles fpmkunit
endif
ifdef TARGET_DIRS_FCL-XML
fcl-xml_all:
	$(MAKE) -C fcl-xml all
fcl-xml_debug:
	$(MAKE) -C fcl-xml debug
fcl-xml_smart:
	$(MAKE) -C fcl-xml smart
fcl-xml_release:
	$(MAKE) -C fcl-xml release
fcl-xml_units:
	$(MAKE) -C fcl-xml units
fcl-xml_examples:
	$(MAKE) -C fcl-xml examples
fcl-xml_shared:
	$(MAKE) -C fcl-xml shared
fcl-xml_install:
	$(MAKE) -C fcl-xml install
fcl-xml_sourceinstall:
	$(MAKE) -C fcl-xml sourceinstall
fcl-xml_exampleinstall:
	$(MAKE) -C fcl-xml exampleinstall
fcl-xml_distinstall:
	$(MAKE) -C fcl-xml distinstall
fcl-xml_zipinstall:
	$(MAKE) -C fcl-xml zipinstall
fcl-xml_zipsourceinstall:
	$(MAKE) -C fcl-xml zipsourceinstall
fcl-xml_zipexampleinstall:
	$(MAKE) -C fcl-xml zipexampleinstall
fcl-xml_zipdistinstall:
	$(MAKE) -C fcl-xml zipdistinstall
fcl-xml_clean:
	$(MAKE) -C fcl-xml clean
fcl-xml_distclean:
	$(MAKE) -C fcl-xml distclean
fcl-xml_cleanall:
	$(MAKE) -C fcl-xml cleanall
fcl-xml_info:
	$(MAKE) -C fcl-xml info
fcl-xml_makefiles:
	$(MAKE) -C fcl-xml makefiles
fcl-xml:
	$(MAKE) -C fcl-xml all
.PHONY: fcl-xml_all fcl-xml_debug fcl-xml_smart fcl-xml_release fcl-xml_units fcl-xml_examples fcl-xml_shared fcl-xml_install fcl-xml_sourceinstall fcl-xml_exampleinstall fcl-xml_distinstall fcl-xml_zipinstall fcl-xml_zipsourceinstall fcl-xml_zipexampleinstall fcl-xml_zipdistinstall fcl-xml_clean fcl-xml_distclean fcl-xml_cleanall fcl-xml_info fcl-xml_makefiles fcl-xml
endif
ifdef TARGET_DIRS_FCL-BASE
fcl-base_all:
	$(MAKE) -C fcl-base all
fcl-base_debug:
	$(MAKE) -C fcl-base debug
fcl-base_smart:
	$(MAKE) -C fcl-base smart
fcl-base_release:
	$(MAKE) -C fcl-base release
fcl-base_units:
	$(MAKE) -C fcl-base units
fcl-base_examples:
	$(MAKE) -C fcl-base examples
fcl-base_shared:
	$(MAKE) -C fcl-base shared
fcl-base_install:
	$(MAKE) -C fcl-base install
fcl-base_sourceinstall:
	$(MAKE) -C fcl-base sourceinstall
fcl-base_exampleinstall:
	$(MAKE) -C fcl-base exampleinstall
fcl-base_distinstall:
	$(MAKE) -C fcl-base distinstall
fcl-base_zipinstall:
	$(MAKE) -C fcl-base zipinstall
fcl-base_zipsourceinstall:
	$(MAKE) -C fcl-base zipsourceinstall
fcl-base_zipexampleinstall:
	$(MAKE) -C fcl-base zipexampleinstall
fcl-base_zipdistinstall:
	$(MAKE) -C fcl-base zipdistinstall
fcl-base_clean:
	$(MAKE) -C fcl-base clean
fcl-base_distclean:
	$(MAKE) -C fcl-base distclean
fcl-base_cleanall:
	$(MAKE) -C fcl-base cleanall
fcl-base_info:
	$(MAKE) -C fcl-base info
fcl-base_makefiles:
	$(MAKE) -C fcl-base makefiles
fcl-base:
	$(MAKE) -C fcl-base all
.PHONY: fcl-base_all fcl-base_debug fcl-base_smart fcl-base_release fcl-base_units fcl-base_examples fcl-base_shared fcl-base_install fcl-base_sourceinstall fcl-base_exampleinstall fcl-base_distinstall fcl-base_zipinstall fcl-base_zipsourceinstall fcl-base_zipexampleinstall fcl-base_zipdistinstall fcl-base_clean fcl-base_distclean fcl-base_cleanall fcl-base_info fcl-base_makefiles fcl-base
endif
ifdef TARGET_DIRS_FCL-DB
fcl-db_all:
	$(MAKE) -C fcl-db all
fcl-db_debug:
	$(MAKE) -C fcl-db debug
fcl-db_smart:
	$(MAKE) -C fcl-db smart
fcl-db_release:
	$(MAKE) -C fcl-db release
fcl-db_units:
	$(MAKE) -C fcl-db units
fcl-db_examples:
	$(MAKE) -C fcl-db examples
fcl-db_shared:
	$(MAKE) -C fcl-db shared
fcl-db_install:
	$(MAKE) -C fcl-db install
fcl-db_sourceinstall:
	$(MAKE) -C fcl-db sourceinstall
fcl-db_exampleinstall:
	$(MAKE) -C fcl-db exampleinstall
fcl-db_distinstall:
	$(MAKE) -C fcl-db distinstall
fcl-db_zipinstall:
	$(MAKE) -C fcl-db zipinstall
fcl-db_zipsourceinstall:
	$(MAKE) -C fcl-db zipsourceinstall
fcl-db_zipexampleinstall:
	$(MAKE) -C fcl-db zipexampleinstall
fcl-db_zipdistinstall:
	$(MAKE) -C fcl-db zipdistinstall
fcl-db_clean:
	$(MAKE) -C fcl-db clean
fcl-db_distclean:
	$(MAKE) -C fcl-db distclean
fcl-db_cleanall:
	$(MAKE) -C fcl-db cleanall
fcl-db_info:
	$(MAKE) -C fcl-db info
fcl-db_makefiles:
	$(MAKE) -C fcl-db makefiles
fcl-db:
	$(MAKE) -C fcl-db all
.PHONY: fcl-db_all fcl-db_debug fcl-db_smart fcl-db_release fcl-db_units fcl-db_examples fcl-db_shared fcl-db_install fcl-db_sourceinstall fcl-db_exampleinstall fcl-db_distinstall fcl-db_zipinstall fcl-db_zipsourceinstall fcl-db_zipexampleinstall fcl-db_zipdistinstall fcl-db_clean fcl-db_distclean fcl-db_cleanall fcl-db_info fcl-db_makefiles fcl-db
endif
ifdef TARGET_DIRS_FCL-IMAGE
fcl-image_all:
	$(MAKE) -C fcl-image all
fcl-image_debug:
	$(MAKE) -C fcl-image debug
fcl-image_smart:
	$(MAKE) -C fcl-image smart
fcl-image_release:
	$(MAKE) -C fcl-image release
fcl-image_units:
	$(MAKE) -C fcl-image units
fcl-image_examples:
	$(MAKE) -C fcl-image examples
fcl-image_shared:
	$(MAKE) -C fcl-image shared
fcl-image_install:
	$(MAKE) -C fcl-image install
fcl-image_sourceinstall:
	$(MAKE) -C fcl-image sourceinstall
fcl-image_exampleinstall:
	$(MAKE) -C fcl-image exampleinstall
fcl-image_distinstall:
	$(MAKE) -C fcl-image distinstall
fcl-image_zipinstall:
	$(MAKE) -C fcl-image zipinstall
fcl-image_zipsourceinstall:
	$(MAKE) -C fcl-image zipsourceinstall
fcl-image_zipexampleinstall:
	$(MAKE) -C fcl-image zipexampleinstall
fcl-image_zipdistinstall:
	$(MAKE) -C fcl-image zipdistinstall
fcl-image_clean:
	$(MAKE) -C fcl-image clean
fcl-image_distclean:
	$(MAKE) -C fcl-image distclean
fcl-image_cleanall:
	$(MAKE) -C fcl-image cleanall
fcl-image_info:
	$(MAKE) -C fcl-image info
fcl-image_makefiles:
	$(MAKE) -C fcl-image makefiles
fcl-image:
	$(MAKE) -C fcl-image all
.PHONY: fcl-image_all fcl-image_debug fcl-image_smart fcl-image_release fcl-image_units fcl-image_examples fcl-image_shared fcl-image_install fcl-image_sourceinstall fcl-image_exampleinstall fcl-image_distinstall fcl-image_zipinstall fcl-image_zipsourceinstall fcl-image_zipexampleinstall fcl-image_zipdistinstall fcl-image_clean fcl-image_distclean fcl-image_cleanall fcl-image_info fcl-image_makefiles fcl-image
endif
ifdef TARGET_DIRS_FCL-NET
fcl-net_all:
	$(MAKE) -C fcl-net all
fcl-net_debug:
	$(MAKE) -C fcl-net debug
fcl-net_smart:
	$(MAKE) -C fcl-net smart
fcl-net_release:
	$(MAKE) -C fcl-net release
fcl-net_units:
	$(MAKE) -C fcl-net units
fcl-net_examples:
	$(MAKE) -C fcl-net examples
fcl-net_shared:
	$(MAKE) -C fcl-net shared
fcl-net_install:
	$(MAKE) -C fcl-net install
fcl-net_sourceinstall:
	$(MAKE) -C fcl-net sourceinstall
fcl-net_exampleinstall:
	$(MAKE) -C fcl-net exampleinstall
fcl-net_distinstall:
	$(MAKE) -C fcl-net distinstall
fcl-net_zipinstall:
	$(MAKE) -C fcl-net zipinstall
fcl-net_zipsourceinstall:
	$(MAKE) -C fcl-net zipsourceinstall
fcl-net_zipexampleinstall:
	$(MAKE) -C fcl-net zipexampleinstall
fcl-net_zipdistinstall:
	$(MAKE) -C fcl-net zipdistinstall
fcl-net_clean:
	$(MAKE) -C fcl-net clean
fcl-net_distclean:
	$(MAKE) -C fcl-net distclean
fcl-net_cleanall:
	$(MAKE) -C fcl-net cleanall
fcl-net_info:
	$(MAKE) -C fcl-net info
fcl-net_makefiles:
	$(MAKE) -C fcl-net makefiles
fcl-net:
	$(MAKE) -C fcl-net all
.PHONY: fcl-net_all fcl-net_debug fcl-net_smart fcl-net_release fcl-net_units fcl-net_examples fcl-net_shared fcl-net_install fcl-net_sourceinstall fcl-net_exampleinstall fcl-net_distinstall fcl-net_zipinstall fcl-net_zipsourceinstall fcl-net_zipexampleinstall fcl-net_zipdistinstall fcl-net_clean fcl-net_distclean fcl-net_cleanall fcl-net_info fcl-net_makefiles fcl-net
endif
ifdef TARGET_DIRS_FCL-PASSRC
fcl-passrc_all:
	$(MAKE) -C fcl-passrc all
fcl-passrc_debug:
	$(MAKE) -C fcl-passrc debug
fcl-passrc_smart:
	$(MAKE) -C fcl-passrc smart
fcl-passrc_release:
	$(MAKE) -C fcl-passrc release
fcl-passrc_units:
	$(MAKE) -C fcl-passrc units
fcl-passrc_examples:
	$(MAKE) -C fcl-passrc examples
fcl-passrc_shared:
	$(MAKE) -C fcl-passrc shared
fcl-passrc_install:
	$(MAKE) -C fcl-passrc install
fcl-passrc_sourceinstall:
	$(MAKE) -C fcl-passrc sourceinstall
fcl-passrc_exampleinstall:
	$(MAKE) -C fcl-passrc exampleinstall
fcl-passrc_distinstall:
	$(MAKE) -C fcl-passrc distinstall
fcl-passrc_zipinstall:
	$(MAKE) -C fcl-passrc zipinstall
fcl-passrc_zipsourceinstall:
	$(MAKE) -C fcl-passrc zipsourceinstall
fcl-passrc_zipexampleinstall:
	$(MAKE) -C fcl-passrc zipexampleinstall
fcl-passrc_zipdistinstall:
	$(MAKE) -C fcl-passrc zipdistinstall
fcl-passrc_clean:
	$(MAKE) -C fcl-passrc clean
fcl-passrc_distclean:
	$(MAKE) -C fcl-passrc distclean
fcl-passrc_cleanall:
	$(MAKE) -C fcl-passrc cleanall
fcl-passrc_info:
	$(MAKE) -C fcl-passrc info
fcl-passrc_makefiles:
	$(MAKE) -C fcl-passrc makefiles
fcl-passrc:
	$(MAKE) -C fcl-passrc all
.PHONY: fcl-passrc_all fcl-passrc_debug fcl-passrc_smart fcl-passrc_release fcl-passrc_units fcl-passrc_examples fcl-passrc_shared fcl-passrc_install fcl-passrc_sourceinstall fcl-passrc_exampleinstall fcl-passrc_distinstall fcl-passrc_zipinstall fcl-passrc_zipsourceinstall fcl-passrc_zipexampleinstall fcl-passrc_zipdistinstall fcl-passrc_clean fcl-passrc_distclean fcl-passrc_cleanall fcl-passrc_info fcl-passrc_makefiles fcl-passrc
endif
ifdef TARGET_DIRS_FCL-REGISTRY
fcl-registry_all:
	$(MAKE) -C fcl-registry all
fcl-registry_debug:
	$(MAKE) -C fcl-registry debug
fcl-registry_smart:
	$(MAKE) -C fcl-registry smart
fcl-registry_release:
	$(MAKE) -C fcl-registry release
fcl-registry_units:
	$(MAKE) -C fcl-registry units
fcl-registry_examples:
	$(MAKE) -C fcl-registry examples
fcl-registry_shared:
	$(MAKE) -C fcl-registry shared
fcl-registry_install:
	$(MAKE) -C fcl-registry install
fcl-registry_sourceinstall:
	$(MAKE) -C fcl-registry sourceinstall
fcl-registry_exampleinstall:
	$(MAKE) -C fcl-registry exampleinstall
fcl-registry_distinstall:
	$(MAKE) -C fcl-registry distinstall
fcl-registry_zipinstall:
	$(MAKE) -C fcl-registry zipinstall
fcl-registry_zipsourceinstall:
	$(MAKE) -C fcl-registry zipsourceinstall
fcl-registry_zipexampleinstall:
	$(MAKE) -C fcl-registry zipexampleinstall
fcl-registry_zipdistinstall:
	$(MAKE) -C fcl-registry zipdistinstall
fcl-registry_clean:
	$(MAKE) -C fcl-registry clean
fcl-registry_distclean:
	$(MAKE) -C fcl-registry distclean
fcl-registry_cleanall:
	$(MAKE) -C fcl-registry cleanall
fcl-registry_info:
	$(MAKE) -C fcl-registry info
fcl-registry_makefiles:
	$(MAKE) -C fcl-registry makefiles
fcl-registry:
	$(MAKE) -C fcl-registry all
.PHONY: fcl-registry_all fcl-registry_debug fcl-registry_smart fcl-registry_release fcl-registry_units fcl-registry_examples fcl-registry_shared fcl-registry_install fcl-registry_sourceinstall fcl-registry_exampleinstall fcl-registry_distinstall fcl-registry_zipinstall fcl-registry_zipsourceinstall fcl-registry_zipexampleinstall fcl-registry_zipdistinstall fcl-registry_clean fcl-registry_distclean fcl-registry_cleanall fcl-registry_info fcl-registry_makefiles fcl-registry
endif
ifdef TARGET_DIRS_FCL-FPCUNIT
fcl-fpcunit_all:
	$(MAKE) -C fcl-fpcunit all
fcl-fpcunit_debug:
	$(MAKE) -C fcl-fpcunit debug
fcl-fpcunit_smart:
	$(MAKE) -C fcl-fpcunit smart
fcl-fpcunit_release:
	$(MAKE) -C fcl-fpcunit release
fcl-fpcunit_units:
	$(MAKE) -C fcl-fpcunit units
fcl-fpcunit_examples:
	$(MAKE) -C fcl-fpcunit examples
fcl-fpcunit_shared:
	$(MAKE) -C fcl-fpcunit shared
fcl-fpcunit_install:
	$(MAKE) -C fcl-fpcunit install
fcl-fpcunit_sourceinstall:
	$(MAKE) -C fcl-fpcunit sourceinstall
fcl-fpcunit_exampleinstall:
	$(MAKE) -C fcl-fpcunit exampleinstall
fcl-fpcunit_distinstall:
	$(MAKE) -C fcl-fpcunit distinstall
fcl-fpcunit_zipinstall:
	$(MAKE) -C fcl-fpcunit zipinstall
fcl-fpcunit_zipsourceinstall:
	$(MAKE) -C fcl-fpcunit zipsourceinstall
fcl-fpcunit_zipexampleinstall:
	$(MAKE) -C fcl-fpcunit zipexampleinstall
fcl-fpcunit_zipdistinstall:
	$(MAKE) -C fcl-fpcunit zipdistinstall
fcl-fpcunit_clean:
	$(MAKE) -C fcl-fpcunit clean
fcl-fpcunit_distclean:
	$(MAKE) -C fcl-fpcunit distclean
fcl-fpcunit_cleanall:
	$(MAKE) -C fcl-fpcunit cleanall
fcl-fpcunit_info:
	$(MAKE) -C fcl-fpcunit info
fcl-fpcunit_makefiles:
	$(MAKE) -C fcl-fpcunit makefiles
fcl-fpcunit:
	$(MAKE) -C fcl-fpcunit all
.PHONY: fcl-fpcunit_all fcl-fpcunit_debug fcl-fpcunit_smart fcl-fpcunit_release fcl-fpcunit_units fcl-fpcunit_examples fcl-fpcunit_shared fcl-fpcunit_install fcl-fpcunit_sourceinstall fcl-fpcunit_exampleinstall fcl-fpcunit_distinstall fcl-fpcunit_zipinstall fcl-fpcunit_zipsourceinstall fcl-fpcunit_zipexampleinstall fcl-fpcunit_zipdistinstall fcl-fpcunit_clean fcl-fpcunit_distclean fcl-fpcunit_cleanall fcl-fpcunit_info fcl-fpcunit_makefiles fcl-fpcunit
endif
ifdef TARGET_DIRS_FCL-JSON
fcl-json_all:
	$(MAKE) -C fcl-json all
fcl-json_debug:
	$(MAKE) -C fcl-json debug
fcl-json_smart:
	$(MAKE) -C fcl-json smart
fcl-json_release:
	$(MAKE) -C fcl-json release
fcl-json_units:
	$(MAKE) -C fcl-json units
fcl-json_examples:
	$(MAKE) -C fcl-json examples
fcl-json_shared:
	$(MAKE) -C fcl-json shared
fcl-json_install:
	$(MAKE) -C fcl-json install
fcl-json_sourceinstall:
	$(MAKE) -C fcl-json sourceinstall
fcl-json_exampleinstall:
	$(MAKE) -C fcl-json exampleinstall
fcl-json_distinstall:
	$(MAKE) -C fcl-json distinstall
fcl-json_zipinstall:
	$(MAKE) -C fcl-json zipinstall
fcl-json_zipsourceinstall:
	$(MAKE) -C fcl-json zipsourceinstall
fcl-json_zipexampleinstall:
	$(MAKE) -C fcl-json zipexampleinstall
fcl-json_zipdistinstall:
	$(MAKE) -C fcl-json zipdistinstall
fcl-json_clean:
	$(MAKE) -C fcl-json clean
fcl-json_distclean:
	$(MAKE) -C fcl-json distclean
fcl-json_cleanall:
	$(MAKE) -C fcl-json cleanall
fcl-json_info:
	$(MAKE) -C fcl-json info
fcl-json_makefiles:
	$(MAKE) -C fcl-json makefiles
fcl-json:
	$(MAKE) -C fcl-json all
.PHONY: fcl-json_all fcl-json_debug fcl-json_smart fcl-json_release fcl-json_units fcl-json_examples fcl-json_shared fcl-json_install fcl-json_sourceinstall fcl-json_exampleinstall fcl-json_distinstall fcl-json_zipinstall fcl-json_zipsourceinstall fcl-json_zipexampleinstall fcl-json_zipdistinstall fcl-json_clean fcl-json_distclean fcl-json_cleanall fcl-json_info fcl-json_makefiles fcl-json
endif
ifdef TARGET_DIRS_FCL-JS
fcl-js_all:
	$(MAKE) -C fcl-js all
fcl-js_debug:
	$(MAKE) -C fcl-js debug
fcl-js_smart:
	$(MAKE) -C fcl-js smart
fcl-js_release:
	$(MAKE) -C fcl-js release
fcl-js_units:
	$(MAKE) -C fcl-js units
fcl-js_examples:
	$(MAKE) -C fcl-js examples
fcl-js_shared:
	$(MAKE) -C fcl-js shared
fcl-js_install:
	$(MAKE) -C fcl-js install
fcl-js_sourceinstall:
	$(MAKE) -C fcl-js sourceinstall
fcl-js_exampleinstall:
	$(MAKE) -C fcl-js exampleinstall
fcl-js_distinstall:
	$(MAKE) -C fcl-js distinstall
fcl-js_zipinstall:
	$(MAKE) -C fcl-js zipinstall
fcl-js_zipsourceinstall:
	$(MAKE) -C fcl-js zipsourceinstall
fcl-js_zipexampleinstall:
	$(MAKE) -C fcl-js zipexampleinstall
fcl-js_zipdistinstall:
	$(MAKE) -C fcl-js zipdistinstall
fcl-js_clean:
	$(MAKE) -C fcl-js clean
fcl-js_distclean:
	$(MAKE) -C fcl-js distclean
fcl-js_cleanall:
	$(MAKE) -C fcl-js cleanall
fcl-js_info:
	$(MAKE) -C fcl-js info
fcl-js_makefiles:
	$(MAKE) -C fcl-js makefiles
fcl-js:
	$(MAKE) -C fcl-js all
.PHONY: fcl-js_all fcl-js_debug fcl-js_smart fcl-js_release fcl-js_units fcl-js_examples fcl-js_shared fcl-js_install fcl-js_sourceinstall fcl-js_exampleinstall fcl-js_distinstall fcl-js_zipinstall fcl-js_zipsourceinstall fcl-js_zipexampleinstall fcl-js_zipdistinstall fcl-js_clean fcl-js_distclean fcl-js_cleanall fcl-js_info fcl-js_makefiles fcl-js
endif
ifdef TARGET_DIRS_FCL-PROCESS
fcl-process_all:
	$(MAKE) -C fcl-process all
fcl-process_debug:
	$(MAKE) -C fcl-process debug
fcl-process_smart:
	$(MAKE) -C fcl-process smart
fcl-process_release:
	$(MAKE) -C fcl-process release
fcl-process_units:
	$(MAKE) -C fcl-process units
fcl-process_examples:
	$(MAKE) -C fcl-process examples
fcl-process_shared:
	$(MAKE) -C fcl-process shared
fcl-process_install:
	$(MAKE) -C fcl-process install
fcl-process_sourceinstall:
	$(MAKE) -C fcl-process sourceinstall
fcl-process_exampleinstall:
	$(MAKE) -C fcl-process exampleinstall
fcl-process_distinstall:
	$(MAKE) -C fcl-process distinstall
fcl-process_zipinstall:
	$(MAKE) -C fcl-process zipinstall
fcl-process_zipsourceinstall:
	$(MAKE) -C fcl-process zipsourceinstall
fcl-process_zipexampleinstall:
	$(MAKE) -C fcl-process zipexampleinstall
fcl-process_zipdistinstall:
	$(MAKE) -C fcl-process zipdistinstall
fcl-process_clean:
	$(MAKE) -C fcl-process clean
fcl-process_distclean:
	$(MAKE) -C fcl-process distclean
fcl-process_cleanall:
	$(MAKE) -C fcl-process cleanall
fcl-process_info:
	$(MAKE) -C fcl-process info
fcl-process_makefiles:
	$(MAKE) -C fcl-process makefiles
fcl-process:
	$(MAKE) -C fcl-process all
.PHONY: fcl-process_all fcl-process_debug fcl-process_smart fcl-process_release fcl-process_units fcl-process_examples fcl-process_shared fcl-process_install fcl-process_sourceinstall fcl-process_exampleinstall fcl-process_distinstall fcl-process_zipinstall fcl-process_zipsourceinstall fcl-process_zipexampleinstall fcl-process_zipdistinstall fcl-process_clean fcl-process_distclean fcl-process_cleanall fcl-process_info fcl-process_makefiles fcl-process
endif
ifdef TARGET_DIRS_UNZIP
unzip_all:
	$(MAKE) -C unzip all
unzip_debug:
	$(MAKE) -C unzip debug
unzip_smart:
	$(MAKE) -C unzip smart
unzip_release:
	$(MAKE) -C unzip release
unzip_units:
	$(MAKE) -C unzip units
unzip_examples:
	$(MAKE) -C unzip examples
unzip_shared:
	$(MAKE) -C unzip shared
unzip_install:
	$(MAKE) -C unzip install
unzip_sourceinstall:
	$(MAKE) -C unzip sourceinstall
unzip_exampleinstall:
	$(MAKE) -C unzip exampleinstall
unzip_distinstall:
	$(MAKE) -C unzip distinstall
unzip_zipinstall:
	$(MAKE) -C unzip zipinstall
unzip_zipsourceinstall:
	$(MAKE) -C unzip zipsourceinstall
unzip_zipexampleinstall:
	$(MAKE) -C unzip zipexampleinstall
unzip_zipdistinstall:
	$(MAKE) -C unzip zipdistinstall
unzip_clean:
	$(MAKE) -C unzip clean
unzip_distclean:
	$(MAKE) -C unzip distclean
unzip_cleanall:
	$(MAKE) -C unzip cleanall
unzip_info:
	$(MAKE) -C unzip info
unzip_makefiles:
	$(MAKE) -C unzip makefiles
unzip:
	$(MAKE) -C unzip all
.PHONY: unzip_all unzip_debug unzip_smart unzip_release unzip_units unzip_examples unzip_shared unzip_install unzip_sourceinstall unzip_exampleinstall unzip_distinstall unzip_zipinstall unzip_zipsourceinstall unzip_zipexampleinstall unzip_zipdistinstall unzip_clean unzip_distclean unzip_cleanall unzip_info unzip_makefiles unzip
endif
ifdef TARGET_DIRS_REGEXPR
regexpr_all:
	$(MAKE) -C regexpr all
regexpr_debug:
	$(MAKE) -C regexpr debug
regexpr_smart:
	$(MAKE) -C regexpr smart
regexpr_release:
	$(MAKE) -C regexpr release
regexpr_units:
	$(MAKE) -C regexpr units
regexpr_examples:
	$(MAKE) -C regexpr examples
regexpr_shared:
	$(MAKE) -C regexpr shared
regexpr_install:
	$(MAKE) -C regexpr install
regexpr_sourceinstall:
	$(MAKE) -C regexpr sourceinstall
regexpr_exampleinstall:
	$(MAKE) -C regexpr exampleinstall
regexpr_distinstall:
	$(MAKE) -C regexpr distinstall
regexpr_zipinstall:
	$(MAKE) -C regexpr zipinstall
regexpr_zipsourceinstall:
	$(MAKE) -C regexpr zipsourceinstall
regexpr_zipexampleinstall:
	$(MAKE) -C regexpr zipexampleinstall
regexpr_zipdistinstall:
	$(MAKE) -C regexpr zipdistinstall
regexpr_clean:
	$(MAKE) -C regexpr clean
regexpr_distclean:
	$(MAKE) -C regexpr distclean
regexpr_cleanall:
	$(MAKE) -C regexpr cleanall
regexpr_info:
	$(MAKE) -C regexpr info
regexpr_makefiles:
	$(MAKE) -C regexpr makefiles
regexpr:
	$(MAKE) -C regexpr all
.PHONY: regexpr_all regexpr_debug regexpr_smart regexpr_release regexpr_units regexpr_examples regexpr_shared regexpr_install regexpr_sourceinstall regexpr_exampleinstall regexpr_distinstall regexpr_zipinstall regexpr_zipsourceinstall regexpr_zipexampleinstall regexpr_zipdistinstall regexpr_clean regexpr_distclean regexpr_cleanall regexpr_info regexpr_makefiles regexpr
endif
ifdef TARGET_DIRS_CHM
chm_all:
	$(MAKE) -C chm all
chm_debug:
	$(MAKE) -C chm debug
chm_smart:
	$(MAKE) -C chm smart
chm_release:
	$(MAKE) -C chm release
chm_units:
	$(MAKE) -C chm units
chm_examples:
	$(MAKE) -C chm examples
chm_shared:
	$(MAKE) -C chm shared
chm_install:
	$(MAKE) -C chm install
chm_sourceinstall:
	$(MAKE) -C chm sourceinstall
chm_exampleinstall:
	$(MAKE) -C chm exampleinstall
chm_distinstall:
	$(MAKE) -C chm distinstall
chm_zipinstall:
	$(MAKE) -C chm zipinstall
chm_zipsourceinstall:
	$(MAKE) -C chm zipsourceinstall
chm_zipexampleinstall:
	$(MAKE) -C chm zipexampleinstall
chm_zipdistinstall:
	$(MAKE) -C chm zipdistinstall
chm_clean:
	$(MAKE) -C chm clean
chm_distclean:
	$(MAKE) -C chm distclean
chm_cleanall:
	$(MAKE) -C chm cleanall
chm_info:
	$(MAKE) -C chm info
chm_makefiles:
	$(MAKE) -C chm makefiles
chm:
	$(MAKE) -C chm all
.PHONY: chm_all chm_debug chm_smart chm_release chm_units chm_examples chm_shared chm_install chm_sourceinstall chm_exampleinstall chm_distinstall chm_zipinstall chm_zipsourceinstall chm_zipexampleinstall chm_zipdistinstall chm_clean chm_distclean chm_cleanall chm_info chm_makefiles chm
endif
ifdef TARGET_DIRS_FCL-RES
fcl-res_all:
	$(MAKE) -C fcl-res all
fcl-res_debug:
	$(MAKE) -C fcl-res debug
fcl-res_smart:
	$(MAKE) -C fcl-res smart
fcl-res_release:
	$(MAKE) -C fcl-res release
fcl-res_units:
	$(MAKE) -C fcl-res units
fcl-res_examples:
	$(MAKE) -C fcl-res examples
fcl-res_shared:
	$(MAKE) -C fcl-res shared
fcl-res_install:
	$(MAKE) -C fcl-res install
fcl-res_sourceinstall:
	$(MAKE) -C fcl-res sourceinstall
fcl-res_exampleinstall:
	$(MAKE) -C fcl-res exampleinstall
fcl-res_distinstall:
	$(MAKE) -C fcl-res distinstall
fcl-res_zipinstall:
	$(MAKE) -C fcl-res zipinstall
fcl-res_zipsourceinstall:
	$(MAKE) -C fcl-res zipsourceinstall
fcl-res_zipexampleinstall:
	$(MAKE) -C fcl-res zipexampleinstall
fcl-res_zipdistinstall:
	$(MAKE) -C fcl-res zipdistinstall
fcl-res_clean:
	$(MAKE) -C fcl-res clean
fcl-res_distclean:
	$(MAKE) -C fcl-res distclean
fcl-res_cleanall:
	$(MAKE) -C fcl-res cleanall
fcl-res_info:
	$(MAKE) -C fcl-res info
fcl-res_makefiles:
	$(MAKE) -C fcl-res makefiles
fcl-res:
	$(MAKE) -C fcl-res all
.PHONY: fcl-res_all fcl-res_debug fcl-res_smart fcl-res_release fcl-res_units fcl-res_examples fcl-res_shared fcl-res_install fcl-res_sourceinstall fcl-res_exampleinstall fcl-res_distinstall fcl-res_zipinstall fcl-res_zipsourceinstall fcl-res_zipexampleinstall fcl-res_zipdistinstall fcl-res_clean fcl-res_distclean fcl-res_cleanall fcl-res_info fcl-res_makefiles fcl-res
endif
ifdef TARGET_DIRS_LIBGD
libgd_all:
	$(MAKE) -C libgd all
libgd_debug:
	$(MAKE) -C libgd debug
libgd_smart:
	$(MAKE) -C libgd smart
libgd_release:
	$(MAKE) -C libgd release
libgd_units:
	$(MAKE) -C libgd units
libgd_examples:
	$(MAKE) -C libgd examples
libgd_shared:
	$(MAKE) -C libgd shared
libgd_install:
	$(MAKE) -C libgd install
libgd_sourceinstall:
	$(MAKE) -C libgd sourceinstall
libgd_exampleinstall:
	$(MAKE) -C libgd exampleinstall
libgd_distinstall:
	$(MAKE) -C libgd distinstall
libgd_zipinstall:
	$(MAKE) -C libgd zipinstall
libgd_zipsourceinstall:
	$(MAKE) -C libgd zipsourceinstall
libgd_zipexampleinstall:
	$(MAKE) -C libgd zipexampleinstall
libgd_zipdistinstall:
	$(MAKE) -C libgd zipdistinstall
libgd_clean:
	$(MAKE) -C libgd clean
libgd_distclean:
	$(MAKE) -C libgd distclean
libgd_cleanall:
	$(MAKE) -C libgd cleanall
libgd_info:
	$(MAKE) -C libgd info
libgd_makefiles:
	$(MAKE) -C libgd makefiles
libgd:
	$(MAKE) -C libgd all
.PHONY: libgd_all libgd_debug libgd_smart libgd_release libgd_units libgd_examples libgd_shared libgd_install libgd_sourceinstall libgd_exampleinstall libgd_distinstall libgd_zipinstall libgd_zipsourceinstall libgd_zipexampleinstall libgd_zipdistinstall libgd_clean libgd_distclean libgd_cleanall libgd_info libgd_makefiles libgd
endif
ifdef TARGET_DIRS_SYMBOLIC
symbolic_all:
	$(MAKE) -C symbolic all
symbolic_debug:
	$(MAKE) -C symbolic debug
symbolic_smart:
	$(MAKE) -C symbolic smart
symbolic_release:
	$(MAKE) -C symbolic release
symbolic_units:
	$(MAKE) -C symbolic units
symbolic_examples:
	$(MAKE) -C symbolic examples
symbolic_shared:
	$(MAKE) -C symbolic shared
symbolic_install:
	$(MAKE) -C symbolic install
symbolic_sourceinstall:
	$(MAKE) -C symbolic sourceinstall
symbolic_exampleinstall:
	$(MAKE) -C symbolic exampleinstall
symbolic_distinstall:
	$(MAKE) -C symbolic distinstall
symbolic_zipinstall:
	$(MAKE) -C symbolic zipinstall
symbolic_zipsourceinstall:
	$(MAKE) -C symbolic zipsourceinstall
symbolic_zipexampleinstall:
	$(MAKE) -C symbolic zipexampleinstall
symbolic_zipdistinstall:
	$(MAKE) -C symbolic zipdistinstall
symbolic_clean:
	$(MAKE) -C symbolic clean
symbolic_distclean:
	$(MAKE) -C symbolic distclean
symbolic_cleanall:
	$(MAKE) -C symbolic cleanall
symbolic_info:
	$(MAKE) -C symbolic info
symbolic_makefiles:
	$(MAKE) -C symbolic makefiles
symbolic:
	$(MAKE) -C symbolic all
.PHONY: symbolic_all symbolic_debug symbolic_smart symbolic_release symbolic_units symbolic_examples symbolic_shared symbolic_install symbolic_sourceinstall symbolic_exampleinstall symbolic_distinstall symbolic_zipinstall symbolic_zipsourceinstall symbolic_zipexampleinstall symbolic_zipdistinstall symbolic_clean symbolic_distclean symbolic_cleanall symbolic_info symbolic_makefiles symbolic
endif
ifdef TARGET_DIRS_BZIP2
bzip2_all:
	$(MAKE) -C bzip2 all
bzip2_debug:
	$(MAKE) -C bzip2 debug
bzip2_smart:
	$(MAKE) -C bzip2 smart
bzip2_release:
	$(MAKE) -C bzip2 release
bzip2_units:
	$(MAKE) -C bzip2 units
bzip2_examples:
	$(MAKE) -C bzip2 examples
bzip2_shared:
	$(MAKE) -C bzip2 shared
bzip2_install:
	$(MAKE) -C bzip2 install
bzip2_sourceinstall:
	$(MAKE) -C bzip2 sourceinstall
bzip2_exampleinstall:
	$(MAKE) -C bzip2 exampleinstall
bzip2_distinstall:
	$(MAKE) -C bzip2 distinstall
bzip2_zipinstall:
	$(MAKE) -C bzip2 zipinstall
bzip2_zipsourceinstall:
	$(MAKE) -C bzip2 zipsourceinstall
bzip2_zipexampleinstall:
	$(MAKE) -C bzip2 zipexampleinstall
bzip2_zipdistinstall:
	$(MAKE) -C bzip2 zipdistinstall
bzip2_clean:
	$(MAKE) -C bzip2 clean
bzip2_distclean:
	$(MAKE) -C bzip2 distclean
bzip2_cleanall:
	$(MAKE) -C bzip2 cleanall
bzip2_info:
	$(MAKE) -C bzip2 info
bzip2_makefiles:
	$(MAKE) -C bzip2 makefiles
bzip2:
	$(MAKE) -C bzip2 all
.PHONY: bzip2_all bzip2_debug bzip2_smart bzip2_release bzip2_units bzip2_examples bzip2_shared bzip2_install bzip2_sourceinstall bzip2_exampleinstall bzip2_distinstall bzip2_zipinstall bzip2_zipsourceinstall bzip2_zipexampleinstall bzip2_zipdistinstall bzip2_clean bzip2_distclean bzip2_cleanall bzip2_info bzip2_makefiles bzip2
endif
ifdef TARGET_DIRS_HERMES
hermes_all:
	$(MAKE) -C hermes all
hermes_debug:
	$(MAKE) -C hermes debug
hermes_smart:
	$(MAKE) -C hermes smart
hermes_release:
	$(MAKE) -C hermes release
hermes_units:
	$(MAKE) -C hermes units
hermes_examples:
	$(MAKE) -C hermes examples
hermes_shared:
	$(MAKE) -C hermes shared
hermes_install:
	$(MAKE) -C hermes install
hermes_sourceinstall:
	$(MAKE) -C hermes sourceinstall
hermes_exampleinstall:
	$(MAKE) -C hermes exampleinstall
hermes_distinstall:
	$(MAKE) -C hermes distinstall
hermes_zipinstall:
	$(MAKE) -C hermes zipinstall
hermes_zipsourceinstall:
	$(MAKE) -C hermes zipsourceinstall
hermes_zipexampleinstall:
	$(MAKE) -C hermes zipexampleinstall
hermes_zipdistinstall:
	$(MAKE) -C hermes zipdistinstall
hermes_clean:
	$(MAKE) -C hermes clean
hermes_distclean:
	$(MAKE) -C hermes distclean
hermes_cleanall:
	$(MAKE) -C hermes cleanall
hermes_info:
	$(MAKE) -C hermes info
hermes_makefiles:
	$(MAKE) -C hermes makefiles
hermes:
	$(MAKE) -C hermes all
.PHONY: hermes_all hermes_debug hermes_smart hermes_release hermes_units hermes_examples hermes_shared hermes_install hermes_sourceinstall hermes_exampleinstall hermes_distinstall hermes_zipinstall hermes_zipsourceinstall hermes_zipexampleinstall hermes_zipdistinstall hermes_clean hermes_distclean hermes_cleanall hermes_info hermes_makefiles hermes
endif
ifdef TARGET_DIRS_FPPKG
fppkg_all:
	$(MAKE) -C fppkg all
fppkg_debug:
	$(MAKE) -C fppkg debug
fppkg_smart:
	$(MAKE) -C fppkg smart
fppkg_release:
	$(MAKE) -C fppkg release
fppkg_units:
	$(MAKE) -C fppkg units
fppkg_examples:
	$(MAKE) -C fppkg examples
fppkg_shared:
	$(MAKE) -C fppkg shared
fppkg_install:
	$(MAKE) -C fppkg install
fppkg_sourceinstall:
	$(MAKE) -C fppkg sourceinstall
fppkg_exampleinstall:
	$(MAKE) -C fppkg exampleinstall
fppkg_distinstall:
	$(MAKE) -C fppkg distinstall
fppkg_zipinstall:
	$(MAKE) -C fppkg zipinstall
fppkg_zipsourceinstall:
	$(MAKE) -C fppkg zipsourceinstall
fppkg_zipexampleinstall:
	$(MAKE) -C fppkg zipexampleinstall
fppkg_zipdistinstall:
	$(MAKE) -C fppkg zipdistinstall
fppkg_clean:
	$(MAKE) -C fppkg clean
fppkg_distclean:
	$(MAKE) -C fppkg distclean
fppkg_cleanall:
	$(MAKE) -C fppkg cleanall
fppkg_info:
	$(MAKE) -C fppkg info
fppkg_makefiles:
	$(MAKE) -C fppkg makefiles
fppkg:
	$(MAKE) -C fppkg all
.PHONY: fppkg_all fppkg_debug fppkg_smart fppkg_release fppkg_units fppkg_examples fppkg_shared fppkg_install fppkg_sourceinstall fppkg_exampleinstall fppkg_distinstall fppkg_zipinstall fppkg_zipsourceinstall fppkg_zipexampleinstall fppkg_zipdistinstall fppkg_clean fppkg_distclean fppkg_cleanall fppkg_info fppkg_makefiles fppkg
endif
ifdef TARGET_DIRS_FV
fv_all:
	$(MAKE) -C fv all
fv_debug:
	$(MAKE) -C fv debug
fv_smart:
	$(MAKE) -C fv smart
fv_release:
	$(MAKE) -C fv release
fv_units:
	$(MAKE) -C fv units
fv_examples:
	$(MAKE) -C fv examples
fv_shared:
	$(MAKE) -C fv shared
fv_install:
	$(MAKE) -C fv install
fv_sourceinstall:
	$(MAKE) -C fv sourceinstall
fv_exampleinstall:
	$(MAKE) -C fv exampleinstall
fv_distinstall:
	$(MAKE) -C fv distinstall
fv_zipinstall:
	$(MAKE) -C fv zipinstall
fv_zipsourceinstall:
	$(MAKE) -C fv zipsourceinstall
fv_zipexampleinstall:
	$(MAKE) -C fv zipexampleinstall
fv_zipdistinstall:
	$(MAKE) -C fv zipdistinstall
fv_clean:
	$(MAKE) -C fv clean
fv_distclean:
	$(MAKE) -C fv distclean
fv_cleanall:
	$(MAKE) -C fv cleanall
fv_info:
	$(MAKE) -C fv info
fv_makefiles:
	$(MAKE) -C fv makefiles
fv:
	$(MAKE) -C fv all
.PHONY: fv_all fv_debug fv_smart fv_release fv_units fv_examples fv_shared fv_install fv_sourceinstall fv_exampleinstall fv_distinstall fv_zipinstall fv_zipsourceinstall fv_zipexampleinstall fv_zipdistinstall fv_clean fv_distclean fv_cleanall fv_info fv_makefiles fv
endif
ifdef TARGET_DIRS_FCL-WEB
fcl-web_all:
	$(MAKE) -C fcl-web all
fcl-web_debug:
	$(MAKE) -C fcl-web debug
fcl-web_smart:
	$(MAKE) -C fcl-web smart
fcl-web_release:
	$(MAKE) -C fcl-web release
fcl-web_units:
	$(MAKE) -C fcl-web units
fcl-web_examples:
	$(MAKE) -C fcl-web examples
fcl-web_shared:
	$(MAKE) -C fcl-web shared
fcl-web_install:
	$(MAKE) -C fcl-web install
fcl-web_sourceinstall:
	$(MAKE) -C fcl-web sourceinstall
fcl-web_exampleinstall:
	$(MAKE) -C fcl-web exampleinstall
fcl-web_distinstall:
	$(MAKE) -C fcl-web distinstall
fcl-web_zipinstall:
	$(MAKE) -C fcl-web zipinstall
fcl-web_zipsourceinstall:
	$(MAKE) -C fcl-web zipsourceinstall
fcl-web_zipexampleinstall:
	$(MAKE) -C fcl-web zipexampleinstall
fcl-web_zipdistinstall:
	$(MAKE) -C fcl-web zipdistinstall
fcl-web_clean:
	$(MAKE) -C fcl-web clean
fcl-web_distclean:
	$(MAKE) -C fcl-web distclean
fcl-web_cleanall:
	$(MAKE) -C fcl-web cleanall
fcl-web_info:
	$(MAKE) -C fcl-web info
fcl-web_makefiles:
	$(MAKE) -C fcl-web makefiles
fcl-web:
	$(MAKE) -C fcl-web all
.PHONY: fcl-web_all fcl-web_debug fcl-web_smart fcl-web_release fcl-web_units fcl-web_examples fcl-web_shared fcl-web_install fcl-web_sourceinstall fcl-web_exampleinstall fcl-web_distinstall fcl-web_zipinstall fcl-web_zipsourceinstall fcl-web_zipexampleinstall fcl-web_zipdistinstall fcl-web_clean fcl-web_distclean fcl-web_cleanall fcl-web_info fcl-web_makefiles fcl-web
endif
ifdef TARGET_DIRS_FASTCGI
fastcgi_all:
	$(MAKE) -C fastcgi all
fastcgi_debug:
	$(MAKE) -C fastcgi debug
fastcgi_smart:
	$(MAKE) -C fastcgi smart
fastcgi_release:
	$(MAKE) -C fastcgi release
fastcgi_units:
	$(MAKE) -C fastcgi units
fastcgi_examples:
	$(MAKE) -C fastcgi examples
fastcgi_shared:
	$(MAKE) -C fastcgi shared
fastcgi_install:
	$(MAKE) -C fastcgi install
fastcgi_sourceinstall:
	$(MAKE) -C fastcgi sourceinstall
fastcgi_exampleinstall:
	$(MAKE) -C fastcgi exampleinstall
fastcgi_distinstall:
	$(MAKE) -C fastcgi distinstall
fastcgi_zipinstall:
	$(MAKE) -C fastcgi zipinstall
fastcgi_zipsourceinstall:
	$(MAKE) -C fastcgi zipsourceinstall
fastcgi_zipexampleinstall:
	$(MAKE) -C fastcgi zipexampleinstall
fastcgi_zipdistinstall:
	$(MAKE) -C fastcgi zipdistinstall
fastcgi_clean:
	$(MAKE) -C fastcgi clean
fastcgi_distclean:
	$(MAKE) -C fastcgi distclean
fastcgi_cleanall:
	$(MAKE) -C fastcgi cleanall
fastcgi_info:
	$(MAKE) -C fastcgi info
fastcgi_makefiles:
	$(MAKE) -C fastcgi makefiles
fastcgi:
	$(MAKE) -C fastcgi all
.PHONY: fastcgi_all fastcgi_debug fastcgi_smart fastcgi_release fastcgi_units fastcgi_examples fastcgi_shared fastcgi_install fastcgi_sourceinstall fastcgi_exampleinstall fastcgi_distinstall fastcgi_zipinstall fastcgi_zipsourceinstall fastcgi_zipexampleinstall fastcgi_zipdistinstall fastcgi_clean fastcgi_distclean fastcgi_cleanall fastcgi_info fastcgi_makefiles fastcgi
endif
ifdef TARGET_DIRS_FCL-ASYNC
fcl-async_all:
	$(MAKE) -C fcl-async all
fcl-async_debug:
	$(MAKE) -C fcl-async debug
fcl-async_smart:
	$(MAKE) -C fcl-async smart
fcl-async_release:
	$(MAKE) -C fcl-async release
fcl-async_units:
	$(MAKE) -C fcl-async units
fcl-async_examples:
	$(MAKE) -C fcl-async examples
fcl-async_shared:
	$(MAKE) -C fcl-async shared
fcl-async_install:
	$(MAKE) -C fcl-async install
fcl-async_sourceinstall:
	$(MAKE) -C fcl-async sourceinstall
fcl-async_exampleinstall:
	$(MAKE) -C fcl-async exampleinstall
fcl-async_distinstall:
	$(MAKE) -C fcl-async distinstall
fcl-async_zipinstall:
	$(MAKE) -C fcl-async zipinstall
fcl-async_zipsourceinstall:
	$(MAKE) -C fcl-async zipsourceinstall
fcl-async_zipexampleinstall:
	$(MAKE) -C fcl-async zipexampleinstall
fcl-async_zipdistinstall:
	$(MAKE) -C fcl-async zipdistinstall
fcl-async_clean:
	$(MAKE) -C fcl-async clean
fcl-async_distclean:
	$(MAKE) -C fcl-async distclean
fcl-async_cleanall:
	$(MAKE) -C fcl-async cleanall
fcl-async_info:
	$(MAKE) -C fcl-async info
fcl-async_makefiles:
	$(MAKE) -C fcl-async makefiles
fcl-async:
	$(MAKE) -C fcl-async all
.PHONY: fcl-async_all fcl-async_debug fcl-async_smart fcl-async_release fcl-async_units fcl-async_examples fcl-async_shared fcl-async_install fcl-async_sourceinstall fcl-async_exampleinstall fcl-async_distinstall fcl-async_zipinstall fcl-async_zipsourceinstall fcl-async_zipexampleinstall fcl-async_zipdistinstall fcl-async_clean fcl-async_distclean fcl-async_cleanall fcl-async_info fcl-async_makefiles fcl-async
endif
ifdef TARGET_DIRS_IBASE
ibase_all:
	$(MAKE) -C ibase all
ibase_debug:
	$(MAKE) -C ibase debug
ibase_smart:
	$(MAKE) -C ibase smart
ibase_release:
	$(MAKE) -C ibase release
ibase_units:
	$(MAKE) -C ibase units
ibase_examples:
	$(MAKE) -C ibase examples
ibase_shared:
	$(MAKE) -C ibase shared
ibase_install:
	$(MAKE) -C ibase install
ibase_sourceinstall:
	$(MAKE) -C ibase sourceinstall
ibase_exampleinstall:
	$(MAKE) -C ibase exampleinstall
ibase_distinstall:
	$(MAKE) -C ibase distinstall
ibase_zipinstall:
	$(MAKE) -C ibase zipinstall
ibase_zipsourceinstall:
	$(MAKE) -C ibase zipsourceinstall
ibase_zipexampleinstall:
	$(MAKE) -C ibase zipexampleinstall
ibase_zipdistinstall:
	$(MAKE) -C ibase zipdistinstall
ibase_clean:
	$(MAKE) -C ibase clean
ibase_distclean:
	$(MAKE) -C ibase distclean
ibase_cleanall:
	$(MAKE) -C ibase cleanall
ibase_info:
	$(MAKE) -C ibase info
ibase_makefiles:
	$(MAKE) -C ibase makefiles
ibase:
	$(MAKE) -C ibase all
.PHONY: ibase_all ibase_debug ibase_smart ibase_release ibase_units ibase_examples ibase_shared ibase_install ibase_sourceinstall ibase_exampleinstall ibase_distinstall ibase_zipinstall ibase_zipsourceinstall ibase_zipexampleinstall ibase_zipdistinstall ibase_clean ibase_distclean ibase_cleanall ibase_info ibase_makefiles ibase
endif
ifdef TARGET_DIRS_MYSQL
mysql_all:
	$(MAKE) -C mysql all
mysql_debug:
	$(MAKE) -C mysql debug
mysql_smart:
	$(MAKE) -C mysql smart
mysql_release:
	$(MAKE) -C mysql release
mysql_units:
	$(MAKE) -C mysql units
mysql_examples:
	$(MAKE) -C mysql examples
mysql_shared:
	$(MAKE) -C mysql shared
mysql_install:
	$(MAKE) -C mysql install
mysql_sourceinstall:
	$(MAKE) -C mysql sourceinstall
mysql_exampleinstall:
	$(MAKE) -C mysql exampleinstall
mysql_distinstall:
	$(MAKE) -C mysql distinstall
mysql_zipinstall:
	$(MAKE) -C mysql zipinstall
mysql_zipsourceinstall:
	$(MAKE) -C mysql zipsourceinstall
mysql_zipexampleinstall:
	$(MAKE) -C mysql zipexampleinstall
mysql_zipdistinstall:
	$(MAKE) -C mysql zipdistinstall
mysql_clean:
	$(MAKE) -C mysql clean
mysql_distclean:
	$(MAKE) -C mysql distclean
mysql_cleanall:
	$(MAKE) -C mysql cleanall
mysql_info:
	$(MAKE) -C mysql info
mysql_makefiles:
	$(MAKE) -C mysql makefiles
mysql:
	$(MAKE) -C mysql all
.PHONY: mysql_all mysql_debug mysql_smart mysql_release mysql_units mysql_examples mysql_shared mysql_install mysql_sourceinstall mysql_exampleinstall mysql_distinstall mysql_zipinstall mysql_zipsourceinstall mysql_zipexampleinstall mysql_zipdistinstall mysql_clean mysql_distclean mysql_cleanall mysql_info mysql_makefiles mysql
endif
ifdef TARGET_DIRS_NCURSES
ncurses_all:
	$(MAKE) -C ncurses all
ncurses_debug:
	$(MAKE) -C ncurses debug
ncurses_smart:
	$(MAKE) -C ncurses smart
ncurses_release:
	$(MAKE) -C ncurses release
ncurses_units:
	$(MAKE) -C ncurses units
ncurses_examples:
	$(MAKE) -C ncurses examples
ncurses_shared:
	$(MAKE) -C ncurses shared
ncurses_install:
	$(MAKE) -C ncurses install
ncurses_sourceinstall:
	$(MAKE) -C ncurses sourceinstall
ncurses_exampleinstall:
	$(MAKE) -C ncurses exampleinstall
ncurses_distinstall:
	$(MAKE) -C ncurses distinstall
ncurses_zipinstall:
	$(MAKE) -C ncurses zipinstall
ncurses_zipsourceinstall:
	$(MAKE) -C ncurses zipsourceinstall
ncurses_zipexampleinstall:
	$(MAKE) -C ncurses zipexampleinstall
ncurses_zipdistinstall:
	$(MAKE) -C ncurses zipdistinstall
ncurses_clean:
	$(MAKE) -C ncurses clean
ncurses_distclean:
	$(MAKE) -C ncurses distclean
ncurses_cleanall:
	$(MAKE) -C ncurses cleanall
ncurses_info:
	$(MAKE) -C ncurses info
ncurses_makefiles:
	$(MAKE) -C ncurses makefiles
ncurses:
	$(MAKE) -C ncurses all
.PHONY: ncurses_all ncurses_debug ncurses_smart ncurses_release ncurses_units ncurses_examples ncurses_shared ncurses_install ncurses_sourceinstall ncurses_exampleinstall ncurses_distinstall ncurses_zipinstall ncurses_zipsourceinstall ncurses_zipexampleinstall ncurses_zipdistinstall ncurses_clean ncurses_distclean ncurses_cleanall ncurses_info ncurses_makefiles ncurses
endif
ifdef TARGET_DIRS_ZLIB
zlib_all:
	$(MAKE) -C zlib all
zlib_debug:
	$(MAKE) -C zlib debug
zlib_smart:
	$(MAKE) -C zlib smart
zlib_release:
	$(MAKE) -C zlib release
zlib_units:
	$(MAKE) -C zlib units
zlib_examples:
	$(MAKE) -C zlib examples
zlib_shared:
	$(MAKE) -C zlib shared
zlib_install:
	$(MAKE) -C zlib install
zlib_sourceinstall:
	$(MAKE) -C zlib sourceinstall
zlib_exampleinstall:
	$(MAKE) -C zlib exampleinstall
zlib_distinstall:
	$(MAKE) -C zlib distinstall
zlib_zipinstall:
	$(MAKE) -C zlib zipinstall
zlib_zipsourceinstall:
	$(MAKE) -C zlib zipsourceinstall
zlib_zipexampleinstall:
	$(MAKE) -C zlib zipexampleinstall
zlib_zipdistinstall:
	$(MAKE) -C zlib zipdistinstall
zlib_clean:
	$(MAKE) -C zlib clean
zlib_distclean:
	$(MAKE) -C zlib distclean
zlib_cleanall:
	$(MAKE) -C zlib cleanall
zlib_info:
	$(MAKE) -C zlib info
zlib_makefiles:
	$(MAKE) -C zlib makefiles
zlib:
	$(MAKE) -C zlib all
.PHONY: zlib_all zlib_debug zlib_smart zlib_release zlib_units zlib_examples zlib_shared zlib_install zlib_sourceinstall zlib_exampleinstall zlib_distinstall zlib_zipinstall zlib_zipsourceinstall zlib_zipexampleinstall zlib_zipdistinstall zlib_clean zlib_distclean zlib_cleanall zlib_info zlib_makefiles zlib
endif
ifdef TARGET_DIRS_ORACLE
oracle_all:
	$(MAKE) -C oracle all
oracle_debug:
	$(MAKE) -C oracle debug
oracle_smart:
	$(MAKE) -C oracle smart
oracle_release:
	$(MAKE) -C oracle release
oracle_units:
	$(MAKE) -C oracle units
oracle_examples:
	$(MAKE) -C oracle examples
oracle_shared:
	$(MAKE) -C oracle shared
oracle_install:
	$(MAKE) -C oracle install
oracle_sourceinstall:
	$(MAKE) -C oracle sourceinstall
oracle_exampleinstall:
	$(MAKE) -C oracle exampleinstall
oracle_distinstall:
	$(MAKE) -C oracle distinstall
oracle_zipinstall:
	$(MAKE) -C oracle zipinstall
oracle_zipsourceinstall:
	$(MAKE) -C oracle zipsourceinstall
oracle_zipexampleinstall:
	$(MAKE) -C oracle zipexampleinstall
oracle_zipdistinstall:
	$(MAKE) -C oracle zipdistinstall
oracle_clean:
	$(MAKE) -C oracle clean
oracle_distclean:
	$(MAKE) -C oracle distclean
oracle_cleanall:
	$(MAKE) -C oracle cleanall
oracle_info:
	$(MAKE) -C oracle info
oracle_makefiles:
	$(MAKE) -C oracle makefiles
oracle:
	$(MAKE) -C oracle all
.PHONY: oracle_all oracle_debug oracle_smart oracle_release oracle_units oracle_examples oracle_shared oracle_install oracle_sourceinstall oracle_exampleinstall oracle_distinstall oracle_zipinstall oracle_zipsourceinstall oracle_zipexampleinstall oracle_zipdistinstall oracle_clean oracle_distclean oracle_cleanall oracle_info oracle_makefiles oracle
endif
ifdef TARGET_DIRS_DBUS
dbus_all:
	$(MAKE) -C dbus all
dbus_debug:
	$(MAKE) -C dbus debug
dbus_smart:
	$(MAKE) -C dbus smart
dbus_release:
	$(MAKE) -C dbus release
dbus_units:
	$(MAKE) -C dbus units
dbus_examples:
	$(MAKE) -C dbus examples
dbus_shared:
	$(MAKE) -C dbus shared
dbus_install:
	$(MAKE) -C dbus install
dbus_sourceinstall:
	$(MAKE) -C dbus sourceinstall
dbus_exampleinstall:
	$(MAKE) -C dbus exampleinstall
dbus_distinstall:
	$(MAKE) -C dbus distinstall
dbus_zipinstall:
	$(MAKE) -C dbus zipinstall
dbus_zipsourceinstall:
	$(MAKE) -C dbus zipsourceinstall
dbus_zipexampleinstall:
	$(MAKE) -C dbus zipexampleinstall
dbus_zipdistinstall:
	$(MAKE) -C dbus zipdistinstall
dbus_clean:
	$(MAKE) -C dbus clean
dbus_distclean:
	$(MAKE) -C dbus distclean
dbus_cleanall:
	$(MAKE) -C dbus cleanall
dbus_info:
	$(MAKE) -C dbus info
dbus_makefiles:
	$(MAKE) -C dbus makefiles
dbus:
	$(MAKE) -C dbus all
.PHONY: dbus_all dbus_debug dbus_smart dbus_release dbus_units dbus_examples dbus_shared dbus_install dbus_sourceinstall dbus_exampleinstall dbus_distinstall dbus_zipinstall dbus_zipsourceinstall dbus_zipexampleinstall dbus_zipdistinstall dbus_clean dbus_distclean dbus_cleanall dbus_info dbus_makefiles dbus
endif
ifdef TARGET_DIRS_ODBC
odbc_all:
	$(MAKE) -C odbc all
odbc_debug:
	$(MAKE) -C odbc debug
odbc_smart:
	$(MAKE) -C odbc smart
odbc_release:
	$(MAKE) -C odbc release
odbc_units:
	$(MAKE) -C odbc units
odbc_examples:
	$(MAKE) -C odbc examples
odbc_shared:
	$(MAKE) -C odbc shared
odbc_install:
	$(MAKE) -C odbc install
odbc_sourceinstall:
	$(MAKE) -C odbc sourceinstall
odbc_exampleinstall:
	$(MAKE) -C odbc exampleinstall
odbc_distinstall:
	$(MAKE) -C odbc distinstall
odbc_zipinstall:
	$(MAKE) -C odbc zipinstall
odbc_zipsourceinstall:
	$(MAKE) -C odbc zipsourceinstall
odbc_zipexampleinstall:
	$(MAKE) -C odbc zipexampleinstall
odbc_zipdistinstall:
	$(MAKE) -C odbc zipdistinstall
odbc_clean:
	$(MAKE) -C odbc clean
odbc_distclean:
	$(MAKE) -C odbc distclean
odbc_cleanall:
	$(MAKE) -C odbc cleanall
odbc_info:
	$(MAKE) -C odbc info
odbc_makefiles:
	$(MAKE) -C odbc makefiles
odbc:
	$(MAKE) -C odbc all
.PHONY: odbc_all odbc_debug odbc_smart odbc_release odbc_units odbc_examples odbc_shared odbc_install odbc_sourceinstall odbc_exampleinstall odbc_distinstall odbc_zipinstall odbc_zipsourceinstall odbc_zipexampleinstall odbc_zipdistinstall odbc_clean odbc_distclean odbc_cleanall odbc_info odbc_makefiles odbc
endif
ifdef TARGET_DIRS_POSTGRES
postgres_all:
	$(MAKE) -C postgres all
postgres_debug:
	$(MAKE) -C postgres debug
postgres_smart:
	$(MAKE) -C postgres smart
postgres_release:
	$(MAKE) -C postgres release
postgres_units:
	$(MAKE) -C postgres units
postgres_examples:
	$(MAKE) -C postgres examples
postgres_shared:
	$(MAKE) -C postgres shared
postgres_install:
	$(MAKE) -C postgres install
postgres_sourceinstall:
	$(MAKE) -C postgres sourceinstall
postgres_exampleinstall:
	$(MAKE) -C postgres exampleinstall
postgres_distinstall:
	$(MAKE) -C postgres distinstall
postgres_zipinstall:
	$(MAKE) -C postgres zipinstall
postgres_zipsourceinstall:
	$(MAKE) -C postgres zipsourceinstall
postgres_zipexampleinstall:
	$(MAKE) -C postgres zipexampleinstall
postgres_zipdistinstall:
	$(MAKE) -C postgres zipdistinstall
postgres_clean:
	$(MAKE) -C postgres clean
postgres_distclean:
	$(MAKE) -C postgres distclean
postgres_cleanall:
	$(MAKE) -C postgres cleanall
postgres_info:
	$(MAKE) -C postgres info
postgres_makefiles:
	$(MAKE) -C postgres makefiles
postgres:
	$(MAKE) -C postgres all
.PHONY: postgres_all postgres_debug postgres_smart postgres_release postgres_units postgres_examples postgres_shared postgres_install postgres_sourceinstall postgres_exampleinstall postgres_distinstall postgres_zipinstall postgres_zipsourceinstall postgres_zipexampleinstall postgres_zipdistinstall postgres_clean postgres_distclean postgres_cleanall postgres_info postgres_makefiles postgres
endif
ifdef TARGET_DIRS_SQLITE
sqlite_all:
	$(MAKE) -C sqlite all
sqlite_debug:
	$(MAKE) -C sqlite debug
sqlite_smart:
	$(MAKE) -C sqlite smart
sqlite_release:
	$(MAKE) -C sqlite release
sqlite_units:
	$(MAKE) -C sqlite units
sqlite_examples:
	$(MAKE) -C sqlite examples
sqlite_shared:
	$(MAKE) -C sqlite shared
sqlite_install:
	$(MAKE) -C sqlite install
sqlite_sourceinstall:
	$(MAKE) -C sqlite sourceinstall
sqlite_exampleinstall:
	$(MAKE) -C sqlite exampleinstall
sqlite_distinstall:
	$(MAKE) -C sqlite distinstall
sqlite_zipinstall:
	$(MAKE) -C sqlite zipinstall
sqlite_zipsourceinstall:
	$(MAKE) -C sqlite zipsourceinstall
sqlite_zipexampleinstall:
	$(MAKE) -C sqlite zipexampleinstall
sqlite_zipdistinstall:
	$(MAKE) -C sqlite zipdistinstall
sqlite_clean:
	$(MAKE) -C sqlite clean
sqlite_distclean:
	$(MAKE) -C sqlite distclean
sqlite_cleanall:
	$(MAKE) -C sqlite cleanall
sqlite_info:
	$(MAKE) -C sqlite info
sqlite_makefiles:
	$(MAKE) -C sqlite makefiles
sqlite:
	$(MAKE) -C sqlite all
.PHONY: sqlite_all sqlite_debug sqlite_smart sqlite_release sqlite_units sqlite_examples sqlite_shared sqlite_install sqlite_sourceinstall sqlite_exampleinstall sqlite_distinstall sqlite_zipinstall sqlite_zipsourceinstall sqlite_zipexampleinstall sqlite_zipdistinstall sqlite_clean sqlite_distclean sqlite_cleanall sqlite_info sqlite_makefiles sqlite
endif
ifdef TARGET_DIRS_PTHREADS
pthreads_all:
	$(MAKE) -C pthreads all
pthreads_debug:
	$(MAKE) -C pthreads debug
pthreads_smart:
	$(MAKE) -C pthreads smart
pthreads_release:
	$(MAKE) -C pthreads release
pthreads_units:
	$(MAKE) -C pthreads units
pthreads_examples:
	$(MAKE) -C pthreads examples
pthreads_shared:
	$(MAKE) -C pthreads shared
pthreads_install:
	$(MAKE) -C pthreads install
pthreads_sourceinstall:
	$(MAKE) -C pthreads sourceinstall
pthreads_exampleinstall:
	$(MAKE) -C pthreads exampleinstall
pthreads_distinstall:
	$(MAKE) -C pthreads distinstall
pthreads_zipinstall:
	$(MAKE) -C pthreads zipinstall
pthreads_zipsourceinstall:
	$(MAKE) -C pthreads zipsourceinstall
pthreads_zipexampleinstall:
	$(MAKE) -C pthreads zipexampleinstall
pthreads_zipdistinstall:
	$(MAKE) -C pthreads zipdistinstall
pthreads_clean:
	$(MAKE) -C pthreads clean
pthreads_distclean:
	$(MAKE) -C pthreads distclean
pthreads_cleanall:
	$(MAKE) -C pthreads cleanall
pthreads_info:
	$(MAKE) -C pthreads info
pthreads_makefiles:
	$(MAKE) -C pthreads makefiles
pthreads:
	$(MAKE) -C pthreads all
.PHONY: pthreads_all pthreads_debug pthreads_smart pthreads_release pthreads_units pthreads_examples pthreads_shared pthreads_install pthreads_sourceinstall pthreads_exampleinstall pthreads_distinstall pthreads_zipinstall pthreads_zipsourceinstall pthreads_zipexampleinstall pthreads_zipdistinstall pthreads_clean pthreads_distclean pthreads_cleanall pthreads_info pthreads_makefiles pthreads
endif
ifdef TARGET_DIRS_IMAGEMAGICK
imagemagick_all:
	$(MAKE) -C imagemagick all
imagemagick_debug:
	$(MAKE) -C imagemagick debug
imagemagick_smart:
	$(MAKE) -C imagemagick smart
imagemagick_release:
	$(MAKE) -C imagemagick release
imagemagick_units:
	$(MAKE) -C imagemagick units
imagemagick_examples:
	$(MAKE) -C imagemagick examples
imagemagick_shared:
	$(MAKE) -C imagemagick shared
imagemagick_install:
	$(MAKE) -C imagemagick install
imagemagick_sourceinstall:
	$(MAKE) -C imagemagick sourceinstall
imagemagick_exampleinstall:
	$(MAKE) -C imagemagick exampleinstall
imagemagick_distinstall:
	$(MAKE) -C imagemagick distinstall
imagemagick_zipinstall:
	$(MAKE) -C imagemagick zipinstall
imagemagick_zipsourceinstall:
	$(MAKE) -C imagemagick zipsourceinstall
imagemagick_zipexampleinstall:
	$(MAKE) -C imagemagick zipexampleinstall
imagemagick_zipdistinstall:
	$(MAKE) -C imagemagick zipdistinstall
imagemagick_clean:
	$(MAKE) -C imagemagick clean
imagemagick_distclean:
	$(MAKE) -C imagemagick distclean
imagemagick_cleanall:
	$(MAKE) -C imagemagick cleanall
imagemagick_info:
	$(MAKE) -C imagemagick info
imagemagick_makefiles:
	$(MAKE) -C imagemagick makefiles
imagemagick:
	$(MAKE) -C imagemagick all
.PHONY: imagemagick_all imagemagick_debug imagemagick_smart imagemagick_release imagemagick_units imagemagick_examples imagemagick_shared imagemagick_install imagemagick_sourceinstall imagemagick_exampleinstall imagemagick_distinstall imagemagick_zipinstall imagemagick_zipsourceinstall imagemagick_zipexampleinstall imagemagick_zipdistinstall imagemagick_clean imagemagick_distclean imagemagick_cleanall imagemagick_info imagemagick_makefiles imagemagick
endif
ifdef TARGET_DIRS_GDBINT
gdbint_all:
	$(MAKE) -C gdbint all
gdbint_debug:
	$(MAKE) -C gdbint debug
gdbint_smart:
	$(MAKE) -C gdbint smart
gdbint_release:
	$(MAKE) -C gdbint release
gdbint_units:
	$(MAKE) -C gdbint units
gdbint_examples:
	$(MAKE) -C gdbint examples
gdbint_shared:
	$(MAKE) -C gdbint shared
gdbint_install:
	$(MAKE) -C gdbint install
gdbint_sourceinstall:
	$(MAKE) -C gdbint sourceinstall
gdbint_exampleinstall:
	$(MAKE) -C gdbint exampleinstall
gdbint_distinstall:
	$(MAKE) -C gdbint distinstall
gdbint_zipinstall:
	$(MAKE) -C gdbint zipinstall
gdbint_zipsourceinstall:
	$(MAKE) -C gdbint zipsourceinstall
gdbint_zipexampleinstall:
	$(MAKE) -C gdbint zipexampleinstall
gdbint_zipdistinstall:
	$(MAKE) -C gdbint zipdistinstall
gdbint_clean:
	$(MAKE) -C gdbint clean
gdbint_distclean:
	$(MAKE) -C gdbint distclean
gdbint_cleanall:
	$(MAKE) -C gdbint cleanall
gdbint_info:
	$(MAKE) -C gdbint info
gdbint_makefiles:
	$(MAKE) -C gdbint makefiles
gdbint:
	$(MAKE) -C gdbint all
.PHONY: gdbint_all gdbint_debug gdbint_smart gdbint_release gdbint_units gdbint_examples gdbint_shared gdbint_install gdbint_sourceinstall gdbint_exampleinstall gdbint_distinstall gdbint_zipinstall gdbint_zipsourceinstall gdbint_zipexampleinstall gdbint_zipdistinstall gdbint_clean gdbint_distclean gdbint_cleanall gdbint_info gdbint_makefiles gdbint
endif
ifdef TARGET_DIRS_LIBPNG
libpng_all:
	$(MAKE) -C libpng all
libpng_debug:
	$(MAKE) -C libpng debug
libpng_smart:
	$(MAKE) -C libpng smart
libpng_release:
	$(MAKE) -C libpng release
libpng_units:
	$(MAKE) -C libpng units
libpng_examples:
	$(MAKE) -C libpng examples
libpng_shared:
	$(MAKE) -C libpng shared
libpng_install:
	$(MAKE) -C libpng install
libpng_sourceinstall:
	$(MAKE) -C libpng sourceinstall
libpng_exampleinstall:
	$(MAKE) -C libpng exampleinstall
libpng_distinstall:
	$(MAKE) -C libpng distinstall
libpng_zipinstall:
	$(MAKE) -C libpng zipinstall
libpng_zipsourceinstall:
	$(MAKE) -C libpng zipsourceinstall
libpng_zipexampleinstall:
	$(MAKE) -C libpng zipexampleinstall
libpng_zipdistinstall:
	$(MAKE) -C libpng zipdistinstall
libpng_clean:
	$(MAKE) -C libpng clean
libpng_distclean:
	$(MAKE) -C libpng distclean
libpng_cleanall:
	$(MAKE) -C libpng cleanall
libpng_info:
	$(MAKE) -C libpng info
libpng_makefiles:
	$(MAKE) -C libpng makefiles
libpng:
	$(MAKE) -C libpng all
.PHONY: libpng_all libpng_debug libpng_smart libpng_release libpng_units libpng_examples libpng_shared libpng_install libpng_sourceinstall libpng_exampleinstall libpng_distinstall libpng_zipinstall libpng_zipsourceinstall libpng_zipexampleinstall libpng_zipdistinstall libpng_clean libpng_distclean libpng_cleanall libpng_info libpng_makefiles libpng
endif
ifdef TARGET_DIRS_X11
x11_all:
	$(MAKE) -C x11 all
x11_debug:
	$(MAKE) -C x11 debug
x11_smart:
	$(MAKE) -C x11 smart
x11_release:
	$(MAKE) -C x11 release
x11_units:
	$(MAKE) -C x11 units
x11_examples:
	$(MAKE) -C x11 examples
x11_shared:
	$(MAKE) -C x11 shared
x11_install:
	$(MAKE) -C x11 install
x11_sourceinstall:
	$(MAKE) -C x11 sourceinstall
x11_exampleinstall:
	$(MAKE) -C x11 exampleinstall
x11_distinstall:
	$(MAKE) -C x11 distinstall
x11_zipinstall:
	$(MAKE) -C x11 zipinstall
x11_zipsourceinstall:
	$(MAKE) -C x11 zipsourceinstall
x11_zipexampleinstall:
	$(MAKE) -C x11 zipexampleinstall
x11_zipdistinstall:
	$(MAKE) -C x11 zipdistinstall
x11_clean:
	$(MAKE) -C x11 clean
x11_distclean:
	$(MAKE) -C x11 distclean
x11_cleanall:
	$(MAKE) -C x11 cleanall
x11_info:
	$(MAKE) -C x11 info
x11_makefiles:
	$(MAKE) -C x11 makefiles
x11:
	$(MAKE) -C x11 all
.PHONY: x11_all x11_debug x11_smart x11_release x11_units x11_examples x11_shared x11_install x11_sourceinstall x11_exampleinstall x11_distinstall x11_zipinstall x11_zipsourceinstall x11_zipexampleinstall x11_zipdistinstall x11_clean x11_distclean x11_cleanall x11_info x11_makefiles x11
endif
ifdef TARGET_DIRS_UUID
uuid_all:
	$(MAKE) -C uuid all
uuid_debug:
	$(MAKE) -C uuid debug
uuid_smart:
	$(MAKE) -C uuid smart
uuid_release:
	$(MAKE) -C uuid release
uuid_units:
	$(MAKE) -C uuid units
uuid_examples:
	$(MAKE) -C uuid examples
uuid_shared:
	$(MAKE) -C uuid shared
uuid_install:
	$(MAKE) -C uuid install
uuid_sourceinstall:
	$(MAKE) -C uuid sourceinstall
uuid_exampleinstall:
	$(MAKE) -C uuid exampleinstall
uuid_distinstall:
	$(MAKE) -C uuid distinstall
uuid_zipinstall:
	$(MAKE) -C uuid zipinstall
uuid_zipsourceinstall:
	$(MAKE) -C uuid zipsourceinstall
uuid_zipexampleinstall:
	$(MAKE) -C uuid zipexampleinstall
uuid_zipdistinstall:
	$(MAKE) -C uuid zipdistinstall
uuid_clean:
	$(MAKE) -C uuid clean
uuid_distclean:
	$(MAKE) -C uuid distclean
uuid_cleanall:
	$(MAKE) -C uuid cleanall
uuid_info:
	$(MAKE) -C uuid info
uuid_makefiles:
	$(MAKE) -C uuid makefiles
uuid:
	$(MAKE) -C uuid all
.PHONY: uuid_all uuid_debug uuid_smart uuid_release uuid_units uuid_examples uuid_shared uuid_install uuid_sourceinstall uuid_exampleinstall uuid_distinstall uuid_zipinstall uuid_zipsourceinstall uuid_zipexampleinstall uuid_zipdistinstall uuid_clean uuid_distclean uuid_cleanall uuid_info uuid_makefiles uuid
endif
ifdef TARGET_DIRS_LDAP
ldap_all:
	$(MAKE) -C ldap all
ldap_debug:
	$(MAKE) -C ldap debug
ldap_smart:
	$(MAKE) -C ldap smart
ldap_release:
	$(MAKE) -C ldap release
ldap_units:
	$(MAKE) -C ldap units
ldap_examples:
	$(MAKE) -C ldap examples
ldap_shared:
	$(MAKE) -C ldap shared
ldap_install:
	$(MAKE) -C ldap install
ldap_sourceinstall:
	$(MAKE) -C ldap sourceinstall
ldap_exampleinstall:
	$(MAKE) -C ldap exampleinstall
ldap_distinstall:
	$(MAKE) -C ldap distinstall
ldap_zipinstall:
	$(MAKE) -C ldap zipinstall
ldap_zipsourceinstall:
	$(MAKE) -C ldap zipsourceinstall
ldap_zipexampleinstall:
	$(MAKE) -C ldap zipexampleinstall
ldap_zipdistinstall:
	$(MAKE) -C ldap zipdistinstall
ldap_clean:
	$(MAKE) -C ldap clean
ldap_distclean:
	$(MAKE) -C ldap distclean
ldap_cleanall:
	$(MAKE) -C ldap cleanall
ldap_info:
	$(MAKE) -C ldap info
ldap_makefiles:
	$(MAKE) -C ldap makefiles
ldap:
	$(MAKE) -C ldap all
.PHONY: ldap_all ldap_debug ldap_smart ldap_release ldap_units ldap_examples ldap_shared ldap_install ldap_sourceinstall ldap_exampleinstall ldap_distinstall ldap_zipinstall ldap_zipsourceinstall ldap_zipexampleinstall ldap_zipdistinstall ldap_clean ldap_distclean ldap_cleanall ldap_info ldap_makefiles ldap
endif
ifdef TARGET_DIRS_MODPLUG
modplug_all:
	$(MAKE) -C modplug all
modplug_debug:
	$(MAKE) -C modplug debug
modplug_smart:
	$(MAKE) -C modplug smart
modplug_release:
	$(MAKE) -C modplug release
modplug_units:
	$(MAKE) -C modplug units
modplug_examples:
	$(MAKE) -C modplug examples
modplug_shared:
	$(MAKE) -C modplug shared
modplug_install:
	$(MAKE) -C modplug install
modplug_sourceinstall:
	$(MAKE) -C modplug sourceinstall
modplug_exampleinstall:
	$(MAKE) -C modplug exampleinstall
modplug_distinstall:
	$(MAKE) -C modplug distinstall
modplug_zipinstall:
	$(MAKE) -C modplug zipinstall
modplug_zipsourceinstall:
	$(MAKE) -C modplug zipsourceinstall
modplug_zipexampleinstall:
	$(MAKE) -C modplug zipexampleinstall
modplug_zipdistinstall:
	$(MAKE) -C modplug zipdistinstall
modplug_clean:
	$(MAKE) -C modplug clean
modplug_distclean:
	$(MAKE) -C modplug distclean
modplug_cleanall:
	$(MAKE) -C modplug cleanall
modplug_info:
	$(MAKE) -C modplug info
modplug_makefiles:
	$(MAKE) -C modplug makefiles
modplug:
	$(MAKE) -C modplug all
.PHONY: modplug_all modplug_debug modplug_smart modplug_release modplug_units modplug_examples modplug_shared modplug_install modplug_sourceinstall modplug_exampleinstall modplug_distinstall modplug_zipinstall modplug_zipsourceinstall modplug_zipexampleinstall modplug_zipdistinstall modplug_clean modplug_distclean modplug_cleanall modplug_info modplug_makefiles modplug
endif
ifdef TARGET_DIRS_DTS
dts_all:
	$(MAKE) -C dts all
dts_debug:
	$(MAKE) -C dts debug
dts_smart:
	$(MAKE) -C dts smart
dts_release:
	$(MAKE) -C dts release
dts_units:
	$(MAKE) -C dts units
dts_examples:
	$(MAKE) -C dts examples
dts_shared:
	$(MAKE) -C dts shared
dts_install:
	$(MAKE) -C dts install
dts_sourceinstall:
	$(MAKE) -C dts sourceinstall
dts_exampleinstall:
	$(MAKE) -C dts exampleinstall
dts_distinstall:
	$(MAKE) -C dts distinstall
dts_zipinstall:
	$(MAKE) -C dts zipinstall
dts_zipsourceinstall:
	$(MAKE) -C dts zipsourceinstall
dts_zipexampleinstall:
	$(MAKE) -C dts zipexampleinstall
dts_zipdistinstall:
	$(MAKE) -C dts zipdistinstall
dts_clean:
	$(MAKE) -C dts clean
dts_distclean:
	$(MAKE) -C dts distclean
dts_cleanall:
	$(MAKE) -C dts cleanall
dts_info:
	$(MAKE) -C dts info
dts_makefiles:
	$(MAKE) -C dts makefiles
dts:
	$(MAKE) -C dts all
.PHONY: dts_all dts_debug dts_smart dts_release dts_units dts_examples dts_shared dts_install dts_sourceinstall dts_exampleinstall dts_distinstall dts_zipinstall dts_zipsourceinstall dts_zipexampleinstall dts_zipdistinstall dts_clean dts_distclean dts_cleanall dts_info dts_makefiles dts
endif
ifdef TARGET_DIRS_MAD
mad_all:
	$(MAKE) -C mad all
mad_debug:
	$(MAKE) -C mad debug
mad_smart:
	$(MAKE) -C mad smart
mad_release:
	$(MAKE) -C mad release
mad_units:
	$(MAKE) -C mad units
mad_examples:
	$(MAKE) -C mad examples
mad_shared:
	$(MAKE) -C mad shared
mad_install:
	$(MAKE) -C mad install
mad_sourceinstall:
	$(MAKE) -C mad sourceinstall
mad_exampleinstall:
	$(MAKE) -C mad exampleinstall
mad_distinstall:
	$(MAKE) -C mad distinstall
mad_zipinstall:
	$(MAKE) -C mad zipinstall
mad_zipsourceinstall:
	$(MAKE) -C mad zipsourceinstall
mad_zipexampleinstall:
	$(MAKE) -C mad zipexampleinstall
mad_zipdistinstall:
	$(MAKE) -C mad zipdistinstall
mad_clean:
	$(MAKE) -C mad clean
mad_distclean:
	$(MAKE) -C mad distclean
mad_cleanall:
	$(MAKE) -C mad cleanall
mad_info:
	$(MAKE) -C mad info
mad_makefiles:
	$(MAKE) -C mad makefiles
mad:
	$(MAKE) -C mad all
.PHONY: mad_all mad_debug mad_smart mad_release mad_units mad_examples mad_shared mad_install mad_sourceinstall mad_exampleinstall mad_distinstall mad_zipinstall mad_zipsourceinstall mad_zipexampleinstall mad_zipdistinstall mad_clean mad_distclean mad_cleanall mad_info mad_makefiles mad
endif
ifdef TARGET_DIRS_GDBM
gdbm_all:
	$(MAKE) -C gdbm all
gdbm_debug:
	$(MAKE) -C gdbm debug
gdbm_smart:
	$(MAKE) -C gdbm smart
gdbm_release:
	$(MAKE) -C gdbm release
gdbm_units:
	$(MAKE) -C gdbm units
gdbm_examples:
	$(MAKE) -C gdbm examples
gdbm_shared:
	$(MAKE) -C gdbm shared
gdbm_install:
	$(MAKE) -C gdbm install
gdbm_sourceinstall:
	$(MAKE) -C gdbm sourceinstall
gdbm_exampleinstall:
	$(MAKE) -C gdbm exampleinstall
gdbm_distinstall:
	$(MAKE) -C gdbm distinstall
gdbm_zipinstall:
	$(MAKE) -C gdbm zipinstall
gdbm_zipsourceinstall:
	$(MAKE) -C gdbm zipsourceinstall
gdbm_zipexampleinstall:
	$(MAKE) -C gdbm zipexampleinstall
gdbm_zipdistinstall:
	$(MAKE) -C gdbm zipdistinstall
gdbm_clean:
	$(MAKE) -C gdbm clean
gdbm_distclean:
	$(MAKE) -C gdbm distclean
gdbm_cleanall:
	$(MAKE) -C gdbm cleanall
gdbm_info:
	$(MAKE) -C gdbm info
gdbm_makefiles:
	$(MAKE) -C gdbm makefiles
gdbm:
	$(MAKE) -C gdbm all
.PHONY: gdbm_all gdbm_debug gdbm_smart gdbm_release gdbm_units gdbm_examples gdbm_shared gdbm_install gdbm_sourceinstall gdbm_exampleinstall gdbm_distinstall gdbm_zipinstall gdbm_zipsourceinstall gdbm_zipexampleinstall gdbm_zipdistinstall gdbm_clean gdbm_distclean gdbm_cleanall gdbm_info gdbm_makefiles gdbm
endif
ifdef TARGET_DIRS_TCL
tcl_all:
	$(MAKE) -C tcl all
tcl_debug:
	$(MAKE) -C tcl debug
tcl_smart:
	$(MAKE) -C tcl smart
tcl_release:
	$(MAKE) -C tcl release
tcl_units:
	$(MAKE) -C tcl units
tcl_examples:
	$(MAKE) -C tcl examples
tcl_shared:
	$(MAKE) -C tcl shared
tcl_install:
	$(MAKE) -C tcl install
tcl_sourceinstall:
	$(MAKE) -C tcl sourceinstall
tcl_exampleinstall:
	$(MAKE) -C tcl exampleinstall
tcl_distinstall:
	$(MAKE) -C tcl distinstall
tcl_zipinstall:
	$(MAKE) -C tcl zipinstall
tcl_zipsourceinstall:
	$(MAKE) -C tcl zipsourceinstall
tcl_zipexampleinstall:
	$(MAKE) -C tcl zipexampleinstall
tcl_zipdistinstall:
	$(MAKE) -C tcl zipdistinstall
tcl_clean:
	$(MAKE) -C tcl clean
tcl_distclean:
	$(MAKE) -C tcl distclean
tcl_cleanall:
	$(MAKE) -C tcl cleanall
tcl_info:
	$(MAKE) -C tcl info
tcl_makefiles:
	$(MAKE) -C tcl makefiles
tcl:
	$(MAKE) -C tcl all
.PHONY: tcl_all tcl_debug tcl_smart tcl_release tcl_units tcl_examples tcl_shared tcl_install tcl_sourceinstall tcl_exampleinstall tcl_distinstall tcl_zipinstall tcl_zipsourceinstall tcl_zipexampleinstall tcl_zipdistinstall tcl_clean tcl_distclean tcl_cleanall tcl_info tcl_makefiles tcl
endif
ifdef TARGET_DIRS_SYSLOG
syslog_all:
	$(MAKE) -C syslog all
syslog_debug:
	$(MAKE) -C syslog debug
syslog_smart:
	$(MAKE) -C syslog smart
syslog_release:
	$(MAKE) -C syslog release
syslog_units:
	$(MAKE) -C syslog units
syslog_examples:
	$(MAKE) -C syslog examples
syslog_shared:
	$(MAKE) -C syslog shared
syslog_install:
	$(MAKE) -C syslog install
syslog_sourceinstall:
	$(MAKE) -C syslog sourceinstall
syslog_exampleinstall:
	$(MAKE) -C syslog exampleinstall
syslog_distinstall:
	$(MAKE) -C syslog distinstall
syslog_zipinstall:
	$(MAKE) -C syslog zipinstall
syslog_zipsourceinstall:
	$(MAKE) -C syslog zipsourceinstall
syslog_zipexampleinstall:
	$(MAKE) -C syslog zipexampleinstall
syslog_zipdistinstall:
	$(MAKE) -C syslog zipdistinstall
syslog_clean:
	$(MAKE) -C syslog clean
syslog_distclean:
	$(MAKE) -C syslog distclean
syslog_cleanall:
	$(MAKE) -C syslog cleanall
syslog_info:
	$(MAKE) -C syslog info
syslog_makefiles:
	$(MAKE) -C syslog makefiles
syslog:
	$(MAKE) -C syslog all
.PHONY: syslog_all syslog_debug syslog_smart syslog_release syslog_units syslog_examples syslog_shared syslog_install syslog_sourceinstall syslog_exampleinstall syslog_distinstall syslog_zipinstall syslog_zipsourceinstall syslog_zipexampleinstall syslog_zipdistinstall syslog_clean syslog_distclean syslog_cleanall syslog_info syslog_makefiles syslog
endif
ifdef TARGET_DIRS_LIBCURL
libcurl_all:
	$(MAKE) -C libcurl all
libcurl_debug:
	$(MAKE) -C libcurl debug
libcurl_smart:
	$(MAKE) -C libcurl smart
libcurl_release:
	$(MAKE) -C libcurl release
libcurl_units:
	$(MAKE) -C libcurl units
libcurl_examples:
	$(MAKE) -C libcurl examples
libcurl_shared:
	$(MAKE) -C libcurl shared
libcurl_install:
	$(MAKE) -C libcurl install
libcurl_sourceinstall:
	$(MAKE) -C libcurl sourceinstall
libcurl_exampleinstall:
	$(MAKE) -C libcurl exampleinstall
libcurl_distinstall:
	$(MAKE) -C libcurl distinstall
libcurl_zipinstall:
	$(MAKE) -C libcurl zipinstall
libcurl_zipsourceinstall:
	$(MAKE) -C libcurl zipsourceinstall
libcurl_zipexampleinstall:
	$(MAKE) -C libcurl zipexampleinstall
libcurl_zipdistinstall:
	$(MAKE) -C libcurl zipdistinstall
libcurl_clean:
	$(MAKE) -C libcurl clean
libcurl_distclean:
	$(MAKE) -C libcurl distclean
libcurl_cleanall:
	$(MAKE) -C libcurl cleanall
libcurl_info:
	$(MAKE) -C libcurl info
libcurl_makefiles:
	$(MAKE) -C libcurl makefiles
libcurl:
	$(MAKE) -C libcurl all
.PHONY: libcurl_all libcurl_debug libcurl_smart libcurl_release libcurl_units libcurl_examples libcurl_shared libcurl_install libcurl_sourceinstall libcurl_exampleinstall libcurl_distinstall libcurl_zipinstall libcurl_zipsourceinstall libcurl_zipexampleinstall libcurl_zipdistinstall libcurl_clean libcurl_distclean libcurl_cleanall libcurl_info libcurl_makefiles libcurl
endif
ifdef TARGET_DIRS_OPENGL
opengl_all:
	$(MAKE) -C opengl all
opengl_debug:
	$(MAKE) -C opengl debug
opengl_smart:
	$(MAKE) -C opengl smart
opengl_release:
	$(MAKE) -C opengl release
opengl_units:
	$(MAKE) -C opengl units
opengl_examples:
	$(MAKE) -C opengl examples
opengl_shared:
	$(MAKE) -C opengl shared
opengl_install:
	$(MAKE) -C opengl install
opengl_sourceinstall:
	$(MAKE) -C opengl sourceinstall
opengl_exampleinstall:
	$(MAKE) -C opengl exampleinstall
opengl_distinstall:
	$(MAKE) -C opengl distinstall
opengl_zipinstall:
	$(MAKE) -C opengl zipinstall
opengl_zipsourceinstall:
	$(MAKE) -C opengl zipsourceinstall
opengl_zipexampleinstall:
	$(MAKE) -C opengl zipexampleinstall
opengl_zipdistinstall:
	$(MAKE) -C opengl zipdistinstall
opengl_clean:
	$(MAKE) -C opengl clean
opengl_distclean:
	$(MAKE) -C opengl distclean
opengl_cleanall:
	$(MAKE) -C opengl cleanall
opengl_info:
	$(MAKE) -C opengl info
opengl_makefiles:
	$(MAKE) -C opengl makefiles
opengl:
	$(MAKE) -C opengl all
.PHONY: opengl_all opengl_debug opengl_smart opengl_release opengl_units opengl_examples opengl_shared opengl_install opengl_sourceinstall opengl_exampleinstall opengl_distinstall opengl_zipinstall opengl_zipsourceinstall opengl_zipexampleinstall opengl_zipdistinstall opengl_clean opengl_distclean opengl_cleanall opengl_info opengl_makefiles opengl
endif
ifdef TARGET_DIRS_OPENCL
opencl_all:
	$(MAKE) -C opencl all
opencl_debug:
	$(MAKE) -C opencl debug
opencl_smart:
	$(MAKE) -C opencl smart
opencl_release:
	$(MAKE) -C opencl release
opencl_units:
	$(MAKE) -C opencl units
opencl_examples:
	$(MAKE) -C opencl examples
opencl_shared:
	$(MAKE) -C opencl shared
opencl_install:
	$(MAKE) -C opencl install
opencl_sourceinstall:
	$(MAKE) -C opencl sourceinstall
opencl_exampleinstall:
	$(MAKE) -C opencl exampleinstall
opencl_distinstall:
	$(MAKE) -C opencl distinstall
opencl_zipinstall:
	$(MAKE) -C opencl zipinstall
opencl_zipsourceinstall:
	$(MAKE) -C opencl zipsourceinstall
opencl_zipexampleinstall:
	$(MAKE) -C opencl zipexampleinstall
opencl_zipdistinstall:
	$(MAKE) -C opencl zipdistinstall
opencl_clean:
	$(MAKE) -C opencl clean
opencl_distclean:
	$(MAKE) -C opencl distclean
opencl_cleanall:
	$(MAKE) -C opencl cleanall
opencl_info:
	$(MAKE) -C opencl info
opencl_makefiles:
	$(MAKE) -C opencl makefiles
opencl:
	$(MAKE) -C opencl all
.PHONY: opencl_all opencl_debug opencl_smart opencl_release opencl_units opencl_examples opencl_shared opencl_install opencl_sourceinstall opencl_exampleinstall opencl_distinstall opencl_zipinstall opencl_zipsourceinstall opencl_zipexampleinstall opencl_zipdistinstall opencl_clean opencl_distclean opencl_cleanall opencl_info opencl_makefiles opencl
endif
ifdef TARGET_DIRS_CAIRO
cairo_all:
	$(MAKE) -C cairo all
cairo_debug:
	$(MAKE) -C cairo debug
cairo_smart:
	$(MAKE) -C cairo smart
cairo_release:
	$(MAKE) -C cairo release
cairo_units:
	$(MAKE) -C cairo units
cairo_examples:
	$(MAKE) -C cairo examples
cairo_shared:
	$(MAKE) -C cairo shared
cairo_install:
	$(MAKE) -C cairo install
cairo_sourceinstall:
	$(MAKE) -C cairo sourceinstall
cairo_exampleinstall:
	$(MAKE) -C cairo exampleinstall
cairo_distinstall:
	$(MAKE) -C cairo distinstall
cairo_zipinstall:
	$(MAKE) -C cairo zipinstall
cairo_zipsourceinstall:
	$(MAKE) -C cairo zipsourceinstall
cairo_zipexampleinstall:
	$(MAKE) -C cairo zipexampleinstall
cairo_zipdistinstall:
	$(MAKE) -C cairo zipdistinstall
cairo_clean:
	$(MAKE) -C cairo clean
cairo_distclean:
	$(MAKE) -C cairo distclean
cairo_cleanall:
	$(MAKE) -C cairo cleanall
cairo_info:
	$(MAKE) -C cairo info
cairo_makefiles:
	$(MAKE) -C cairo makefiles
cairo:
	$(MAKE) -C cairo all
.PHONY: cairo_all cairo_debug cairo_smart cairo_release cairo_units cairo_examples cairo_shared cairo_install cairo_sourceinstall cairo_exampleinstall cairo_distinstall cairo_zipinstall cairo_zipsourceinstall cairo_zipexampleinstall cairo_zipdistinstall cairo_clean cairo_distclean cairo_cleanall cairo_info cairo_makefiles cairo
endif
ifdef TARGET_DIRS_GTK1
gtk1_all:
	$(MAKE) -C gtk1 all
gtk1_debug:
	$(MAKE) -C gtk1 debug
gtk1_smart:
	$(MAKE) -C gtk1 smart
gtk1_release:
	$(MAKE) -C gtk1 release
gtk1_units:
	$(MAKE) -C gtk1 units
gtk1_examples:
	$(MAKE) -C gtk1 examples
gtk1_shared:
	$(MAKE) -C gtk1 shared
gtk1_install:
	$(MAKE) -C gtk1 install
gtk1_sourceinstall:
	$(MAKE) -C gtk1 sourceinstall
gtk1_exampleinstall:
	$(MAKE) -C gtk1 exampleinstall
gtk1_distinstall:
	$(MAKE) -C gtk1 distinstall
gtk1_zipinstall:
	$(MAKE) -C gtk1 zipinstall
gtk1_zipsourceinstall:
	$(MAKE) -C gtk1 zipsourceinstall
gtk1_zipexampleinstall:
	$(MAKE) -C gtk1 zipexampleinstall
gtk1_zipdistinstall:
	$(MAKE) -C gtk1 zipdistinstall
gtk1_clean:
	$(MAKE) -C gtk1 clean
gtk1_distclean:
	$(MAKE) -C gtk1 distclean
gtk1_cleanall:
	$(MAKE) -C gtk1 cleanall
gtk1_info:
	$(MAKE) -C gtk1 info
gtk1_makefiles:
	$(MAKE) -C gtk1 makefiles
gtk1:
	$(MAKE) -C gtk1 all
.PHONY: gtk1_all gtk1_debug gtk1_smart gtk1_release gtk1_units gtk1_examples gtk1_shared gtk1_install gtk1_sourceinstall gtk1_exampleinstall gtk1_distinstall gtk1_zipinstall gtk1_zipsourceinstall gtk1_zipexampleinstall gtk1_zipdistinstall gtk1_clean gtk1_distclean gtk1_cleanall gtk1_info gtk1_makefiles gtk1
endif
ifdef TARGET_DIRS_GTK2
gtk2_all:
	$(MAKE) -C gtk2 all
gtk2_debug:
	$(MAKE) -C gtk2 debug
gtk2_smart:
	$(MAKE) -C gtk2 smart
gtk2_release:
	$(MAKE) -C gtk2 release
gtk2_units:
	$(MAKE) -C gtk2 units
gtk2_examples:
	$(MAKE) -C gtk2 examples
gtk2_shared:
	$(MAKE) -C gtk2 shared
gtk2_install:
	$(MAKE) -C gtk2 install
gtk2_sourceinstall:
	$(MAKE) -C gtk2 sourceinstall
gtk2_exampleinstall:
	$(MAKE) -C gtk2 exampleinstall
gtk2_distinstall:
	$(MAKE) -C gtk2 distinstall
gtk2_zipinstall:
	$(MAKE) -C gtk2 zipinstall
gtk2_zipsourceinstall:
	$(MAKE) -C gtk2 zipsourceinstall
gtk2_zipexampleinstall:
	$(MAKE) -C gtk2 zipexampleinstall
gtk2_zipdistinstall:
	$(MAKE) -C gtk2 zipdistinstall
gtk2_clean:
	$(MAKE) -C gtk2 clean
gtk2_distclean:
	$(MAKE) -C gtk2 distclean
gtk2_cleanall:
	$(MAKE) -C gtk2 cleanall
gtk2_info:
	$(MAKE) -C gtk2 info
gtk2_makefiles:
	$(MAKE) -C gtk2 makefiles
gtk2:
	$(MAKE) -C gtk2 all
.PHONY: gtk2_all gtk2_debug gtk2_smart gtk2_release gtk2_units gtk2_examples gtk2_shared gtk2_install gtk2_sourceinstall gtk2_exampleinstall gtk2_distinstall gtk2_zipinstall gtk2_zipsourceinstall gtk2_zipexampleinstall gtk2_zipdistinstall gtk2_clean gtk2_distclean gtk2_cleanall gtk2_info gtk2_makefiles gtk2
endif
ifdef TARGET_DIRS_LIBRSVG
librsvg_all:
	$(MAKE) -C librsvg all
librsvg_debug:
	$(MAKE) -C librsvg debug
librsvg_smart:
	$(MAKE) -C librsvg smart
librsvg_release:
	$(MAKE) -C librsvg release
librsvg_units:
	$(MAKE) -C librsvg units
librsvg_examples:
	$(MAKE) -C librsvg examples
librsvg_shared:
	$(MAKE) -C librsvg shared
librsvg_install:
	$(MAKE) -C librsvg install
librsvg_sourceinstall:
	$(MAKE) -C librsvg sourceinstall
librsvg_exampleinstall:
	$(MAKE) -C librsvg exampleinstall
librsvg_distinstall:
	$(MAKE) -C librsvg distinstall
librsvg_zipinstall:
	$(MAKE) -C librsvg zipinstall
librsvg_zipsourceinstall:
	$(MAKE) -C librsvg zipsourceinstall
librsvg_zipexampleinstall:
	$(MAKE) -C librsvg zipexampleinstall
librsvg_zipdistinstall:
	$(MAKE) -C librsvg zipdistinstall
librsvg_clean:
	$(MAKE) -C librsvg clean
librsvg_distclean:
	$(MAKE) -C librsvg distclean
librsvg_cleanall:
	$(MAKE) -C librsvg cleanall
librsvg_info:
	$(MAKE) -C librsvg info
librsvg_makefiles:
	$(MAKE) -C librsvg makefiles
librsvg:
	$(MAKE) -C librsvg all
.PHONY: librsvg_all librsvg_debug librsvg_smart librsvg_release librsvg_units librsvg_examples librsvg_shared librsvg_install librsvg_sourceinstall librsvg_exampleinstall librsvg_distinstall librsvg_zipinstall librsvg_zipsourceinstall librsvg_zipexampleinstall librsvg_zipdistinstall librsvg_clean librsvg_distclean librsvg_cleanall librsvg_info librsvg_makefiles librsvg
endif
ifdef TARGET_DIRS_A52
a52_all:
	$(MAKE) -C a52 all
a52_debug:
	$(MAKE) -C a52 debug
a52_smart:
	$(MAKE) -C a52 smart
a52_release:
	$(MAKE) -C a52 release
a52_units:
	$(MAKE) -C a52 units
a52_examples:
	$(MAKE) -C a52 examples
a52_shared:
	$(MAKE) -C a52 shared
a52_install:
	$(MAKE) -C a52 install
a52_sourceinstall:
	$(MAKE) -C a52 sourceinstall
a52_exampleinstall:
	$(MAKE) -C a52 exampleinstall
a52_distinstall:
	$(MAKE) -C a52 distinstall
a52_zipinstall:
	$(MAKE) -C a52 zipinstall
a52_zipsourceinstall:
	$(MAKE) -C a52 zipsourceinstall
a52_zipexampleinstall:
	$(MAKE) -C a52 zipexampleinstall
a52_zipdistinstall:
	$(MAKE) -C a52 zipdistinstall
a52_clean:
	$(MAKE) -C a52 clean
a52_distclean:
	$(MAKE) -C a52 distclean
a52_cleanall:
	$(MAKE) -C a52 cleanall
a52_info:
	$(MAKE) -C a52 info
a52_makefiles:
	$(MAKE) -C a52 makefiles
a52:
	$(MAKE) -C a52 all
.PHONY: a52_all a52_debug a52_smart a52_release a52_units a52_examples a52_shared a52_install a52_sourceinstall a52_exampleinstall a52_distinstall a52_zipinstall a52_zipsourceinstall a52_zipexampleinstall a52_zipdistinstall a52_clean a52_distclean a52_cleanall a52_info a52_makefiles a52
endif
ifdef TARGET_DIRS_BFD
bfd_all:
	$(MAKE) -C bfd all
bfd_debug:
	$(MAKE) -C bfd debug
bfd_smart:
	$(MAKE) -C bfd smart
bfd_release:
	$(MAKE) -C bfd release
bfd_units:
	$(MAKE) -C bfd units
bfd_examples:
	$(MAKE) -C bfd examples
bfd_shared:
	$(MAKE) -C bfd shared
bfd_install:
	$(MAKE) -C bfd install
bfd_sourceinstall:
	$(MAKE) -C bfd sourceinstall
bfd_exampleinstall:
	$(MAKE) -C bfd exampleinstall
bfd_distinstall:
	$(MAKE) -C bfd distinstall
bfd_zipinstall:
	$(MAKE) -C bfd zipinstall
bfd_zipsourceinstall:
	$(MAKE) -C bfd zipsourceinstall
bfd_zipexampleinstall:
	$(MAKE) -C bfd zipexampleinstall
bfd_zipdistinstall:
	$(MAKE) -C bfd zipdistinstall
bfd_clean:
	$(MAKE) -C bfd clean
bfd_distclean:
	$(MAKE) -C bfd distclean
bfd_cleanall:
	$(MAKE) -C bfd cleanall
bfd_info:
	$(MAKE) -C bfd info
bfd_makefiles:
	$(MAKE) -C bfd makefiles
bfd:
	$(MAKE) -C bfd all
.PHONY: bfd_all bfd_debug bfd_smart bfd_release bfd_units bfd_examples bfd_shared bfd_install bfd_sourceinstall bfd_exampleinstall bfd_distinstall bfd_zipinstall bfd_zipsourceinstall bfd_zipexampleinstall bfd_zipdistinstall bfd_clean bfd_distclean bfd_cleanall bfd_info bfd_makefiles bfd
endif
ifdef TARGET_DIRS_ASPELL
aspell_all:
	$(MAKE) -C aspell all
aspell_debug:
	$(MAKE) -C aspell debug
aspell_smart:
	$(MAKE) -C aspell smart
aspell_release:
	$(MAKE) -C aspell release
aspell_units:
	$(MAKE) -C aspell units
aspell_examples:
	$(MAKE) -C aspell examples
aspell_shared:
	$(MAKE) -C aspell shared
aspell_install:
	$(MAKE) -C aspell install
aspell_sourceinstall:
	$(MAKE) -C aspell sourceinstall
aspell_exampleinstall:
	$(MAKE) -C aspell exampleinstall
aspell_distinstall:
	$(MAKE) -C aspell distinstall
aspell_zipinstall:
	$(MAKE) -C aspell zipinstall
aspell_zipsourceinstall:
	$(MAKE) -C aspell zipsourceinstall
aspell_zipexampleinstall:
	$(MAKE) -C aspell zipexampleinstall
aspell_zipdistinstall:
	$(MAKE) -C aspell zipdistinstall
aspell_clean:
	$(MAKE) -C aspell clean
aspell_distclean:
	$(MAKE) -C aspell distclean
aspell_cleanall:
	$(MAKE) -C aspell cleanall
aspell_info:
	$(MAKE) -C aspell info
aspell_makefiles:
	$(MAKE) -C aspell makefiles
aspell:
	$(MAKE) -C aspell all
.PHONY: aspell_all aspell_debug aspell_smart aspell_release aspell_units aspell_examples aspell_shared aspell_install aspell_sourceinstall aspell_exampleinstall aspell_distinstall aspell_zipinstall aspell_zipsourceinstall aspell_zipexampleinstall aspell_zipdistinstall aspell_clean aspell_distclean aspell_cleanall aspell_info aspell_makefiles aspell
endif
ifdef TARGET_DIRS_SVGALIB
svgalib_all:
	$(MAKE) -C svgalib all
svgalib_debug:
	$(MAKE) -C svgalib debug
svgalib_smart:
	$(MAKE) -C svgalib smart
svgalib_release:
	$(MAKE) -C svgalib release
svgalib_units:
	$(MAKE) -C svgalib units
svgalib_examples:
	$(MAKE) -C svgalib examples
svgalib_shared:
	$(MAKE) -C svgalib shared
svgalib_install:
	$(MAKE) -C svgalib install
svgalib_sourceinstall:
	$(MAKE) -C svgalib sourceinstall
svgalib_exampleinstall:
	$(MAKE) -C svgalib exampleinstall
svgalib_distinstall:
	$(MAKE) -C svgalib distinstall
svgalib_zipinstall:
	$(MAKE) -C svgalib zipinstall
svgalib_zipsourceinstall:
	$(MAKE) -C svgalib zipsourceinstall
svgalib_zipexampleinstall:
	$(MAKE) -C svgalib zipexampleinstall
svgalib_zipdistinstall:
	$(MAKE) -C svgalib zipdistinstall
svgalib_clean:
	$(MAKE) -C svgalib clean
svgalib_distclean:
	$(MAKE) -C svgalib distclean
svgalib_cleanall:
	$(MAKE) -C svgalib cleanall
svgalib_info:
	$(MAKE) -C svgalib info
svgalib_makefiles:
	$(MAKE) -C svgalib makefiles
svgalib:
	$(MAKE) -C svgalib all
.PHONY: svgalib_all svgalib_debug svgalib_smart svgalib_release svgalib_units svgalib_examples svgalib_shared svgalib_install svgalib_sourceinstall svgalib_exampleinstall svgalib_distinstall svgalib_zipinstall svgalib_zipsourceinstall svgalib_zipexampleinstall svgalib_zipdistinstall svgalib_clean svgalib_distclean svgalib_cleanall svgalib_info svgalib_makefiles svgalib
endif
ifdef TARGET_DIRS_NEWT
newt_all:
	$(MAKE) -C newt all
newt_debug:
	$(MAKE) -C newt debug
newt_smart:
	$(MAKE) -C newt smart
newt_release:
	$(MAKE) -C newt release
newt_units:
	$(MAKE) -C newt units
newt_examples:
	$(MAKE) -C newt examples
newt_shared:
	$(MAKE) -C newt shared
newt_install:
	$(MAKE) -C newt install
newt_sourceinstall:
	$(MAKE) -C newt sourceinstall
newt_exampleinstall:
	$(MAKE) -C newt exampleinstall
newt_distinstall:
	$(MAKE) -C newt distinstall
newt_zipinstall:
	$(MAKE) -C newt zipinstall
newt_zipsourceinstall:
	$(MAKE) -C newt zipsourceinstall
newt_zipexampleinstall:
	$(MAKE) -C newt zipexampleinstall
newt_zipdistinstall:
	$(MAKE) -C newt zipdistinstall
newt_clean:
	$(MAKE) -C newt clean
newt_distclean:
	$(MAKE) -C newt distclean
newt_cleanall:
	$(MAKE) -C newt cleanall
newt_info:
	$(MAKE) -C newt info
newt_makefiles:
	$(MAKE) -C newt makefiles
newt:
	$(MAKE) -C newt all
.PHONY: newt_all newt_debug newt_smart newt_release newt_units newt_examples newt_shared newt_install newt_sourceinstall newt_exampleinstall newt_distinstall newt_zipinstall newt_zipsourceinstall newt_zipexampleinstall newt_zipdistinstall newt_clean newt_distclean newt_cleanall newt_info newt_makefiles newt
endif
ifdef TARGET_DIRS_CDROM
cdrom_all:
	$(MAKE) -C cdrom all
cdrom_debug:
	$(MAKE) -C cdrom debug
cdrom_smart:
	$(MAKE) -C cdrom smart
cdrom_release:
	$(MAKE) -C cdrom release
cdrom_units:
	$(MAKE) -C cdrom units
cdrom_examples:
	$(MAKE) -C cdrom examples
cdrom_shared:
	$(MAKE) -C cdrom shared
cdrom_install:
	$(MAKE) -C cdrom install
cdrom_sourceinstall:
	$(MAKE) -C cdrom sourceinstall
cdrom_exampleinstall:
	$(MAKE) -C cdrom exampleinstall
cdrom_distinstall:
	$(MAKE) -C cdrom distinstall
cdrom_zipinstall:
	$(MAKE) -C cdrom zipinstall
cdrom_zipsourceinstall:
	$(MAKE) -C cdrom zipsourceinstall
cdrom_zipexampleinstall:
	$(MAKE) -C cdrom zipexampleinstall
cdrom_zipdistinstall:
	$(MAKE) -C cdrom zipdistinstall
cdrom_clean:
	$(MAKE) -C cdrom clean
cdrom_distclean:
	$(MAKE) -C cdrom distclean
cdrom_cleanall:
	$(MAKE) -C cdrom cleanall
cdrom_info:
	$(MAKE) -C cdrom info
cdrom_makefiles:
	$(MAKE) -C cdrom makefiles
cdrom:
	$(MAKE) -C cdrom all
.PHONY: cdrom_all cdrom_debug cdrom_smart cdrom_release cdrom_units cdrom_examples cdrom_shared cdrom_install cdrom_sourceinstall cdrom_exampleinstall cdrom_distinstall cdrom_zipinstall cdrom_zipsourceinstall cdrom_zipexampleinstall cdrom_zipdistinstall cdrom_clean cdrom_distclean cdrom_cleanall cdrom_info cdrom_makefiles cdrom
endif
ifdef TARGET_DIRS_USERS
users_all:
	$(MAKE) -C users all
users_debug:
	$(MAKE) -C users debug
users_smart:
	$(MAKE) -C users smart
users_release:
	$(MAKE) -C users release
users_units:
	$(MAKE) -C users units
users_examples:
	$(MAKE) -C users examples
users_shared:
	$(MAKE) -C users shared
users_install:
	$(MAKE) -C users install
users_sourceinstall:
	$(MAKE) -C users sourceinstall
users_exampleinstall:
	$(MAKE) -C users exampleinstall
users_distinstall:
	$(MAKE) -C users distinstall
users_zipinstall:
	$(MAKE) -C users zipinstall
users_zipsourceinstall:
	$(MAKE) -C users zipsourceinstall
users_zipexampleinstall:
	$(MAKE) -C users zipexampleinstall
users_zipdistinstall:
	$(MAKE) -C users zipdistinstall
users_clean:
	$(MAKE) -C users clean
users_distclean:
	$(MAKE) -C users distclean
users_cleanall:
	$(MAKE) -C users cleanall
users_info:
	$(MAKE) -C users info
users_makefiles:
	$(MAKE) -C users makefiles
users:
	$(MAKE) -C users all
.PHONY: users_all users_debug users_smart users_release users_units users_examples users_shared users_install users_sourceinstall users_exampleinstall users_distinstall users_zipinstall users_zipsourceinstall users_zipexampleinstall users_zipdistinstall users_clean users_distclean users_cleanall users_info users_makefiles users
endif
ifdef TARGET_DIRS_ICONVENC
iconvenc_all:
	$(MAKE) -C iconvenc all
iconvenc_debug:
	$(MAKE) -C iconvenc debug
iconvenc_smart:
	$(MAKE) -C iconvenc smart
iconvenc_release:
	$(MAKE) -C iconvenc release
iconvenc_units:
	$(MAKE) -C iconvenc units
iconvenc_examples:
	$(MAKE) -C iconvenc examples
iconvenc_shared:
	$(MAKE) -C iconvenc shared
iconvenc_install:
	$(MAKE) -C iconvenc install
iconvenc_sourceinstall:
	$(MAKE) -C iconvenc sourceinstall
iconvenc_exampleinstall:
	$(MAKE) -C iconvenc exampleinstall
iconvenc_distinstall:
	$(MAKE) -C iconvenc distinstall
iconvenc_zipinstall:
	$(MAKE) -C iconvenc zipinstall
iconvenc_zipsourceinstall:
	$(MAKE) -C iconvenc zipsourceinstall
iconvenc_zipexampleinstall:
	$(MAKE) -C iconvenc zipexampleinstall
iconvenc_zipdistinstall:
	$(MAKE) -C iconvenc zipdistinstall
iconvenc_clean:
	$(MAKE) -C iconvenc clean
iconvenc_distclean:
	$(MAKE) -C iconvenc distclean
iconvenc_cleanall:
	$(MAKE) -C iconvenc cleanall
iconvenc_info:
	$(MAKE) -C iconvenc info
iconvenc_makefiles:
	$(MAKE) -C iconvenc makefiles
iconvenc:
	$(MAKE) -C iconvenc all
.PHONY: iconvenc_all iconvenc_debug iconvenc_smart iconvenc_release iconvenc_units iconvenc_examples iconvenc_shared iconvenc_install iconvenc_sourceinstall iconvenc_exampleinstall iconvenc_distinstall iconvenc_zipinstall iconvenc_zipsourceinstall iconvenc_zipexampleinstall iconvenc_zipdistinstall iconvenc_clean iconvenc_distclean iconvenc_cleanall iconvenc_info iconvenc_makefiles iconvenc
endif
ifdef TARGET_DIRS_LIBXML
libxml_all:
	$(MAKE) -C libxml all
libxml_debug:
	$(MAKE) -C libxml debug
libxml_smart:
	$(MAKE) -C libxml smart
libxml_release:
	$(MAKE) -C libxml release
libxml_units:
	$(MAKE) -C libxml units
libxml_examples:
	$(MAKE) -C libxml examples
libxml_shared:
	$(MAKE) -C libxml shared
libxml_install:
	$(MAKE) -C libxml install
libxml_sourceinstall:
	$(MAKE) -C libxml sourceinstall
libxml_exampleinstall:
	$(MAKE) -C libxml exampleinstall
libxml_distinstall:
	$(MAKE) -C libxml distinstall
libxml_zipinstall:
	$(MAKE) -C libxml zipinstall
libxml_zipsourceinstall:
	$(MAKE) -C libxml zipsourceinstall
libxml_zipexampleinstall:
	$(MAKE) -C libxml zipexampleinstall
libxml_zipdistinstall:
	$(MAKE) -C libxml zipdistinstall
libxml_clean:
	$(MAKE) -C libxml clean
libxml_distclean:
	$(MAKE) -C libxml distclean
libxml_cleanall:
	$(MAKE) -C libxml cleanall
libxml_info:
	$(MAKE) -C libxml info
libxml_makefiles:
	$(MAKE) -C libxml makefiles
libxml:
	$(MAKE) -C libxml all
.PHONY: libxml_all libxml_debug libxml_smart libxml_release libxml_units libxml_examples libxml_shared libxml_install libxml_sourceinstall libxml_exampleinstall libxml_distinstall libxml_zipinstall libxml_zipsourceinstall libxml_zipexampleinstall libxml_zipdistinstall libxml_clean libxml_distclean libxml_cleanall libxml_info libxml_makefiles libxml
endif
ifdef TARGET_DIRS_PROJ4
proj4_all:
	$(MAKE) -C proj4 all
proj4_debug:
	$(MAKE) -C proj4 debug
proj4_smart:
	$(MAKE) -C proj4 smart
proj4_release:
	$(MAKE) -C proj4 release
proj4_units:
	$(MAKE) -C proj4 units
proj4_examples:
	$(MAKE) -C proj4 examples
proj4_shared:
	$(MAKE) -C proj4 shared
proj4_install:
	$(MAKE) -C proj4 install
proj4_sourceinstall:
	$(MAKE) -C proj4 sourceinstall
proj4_exampleinstall:
	$(MAKE) -C proj4 exampleinstall
proj4_distinstall:
	$(MAKE) -C proj4 distinstall
proj4_zipinstall:
	$(MAKE) -C proj4 zipinstall
proj4_zipsourceinstall:
	$(MAKE) -C proj4 zipsourceinstall
proj4_zipexampleinstall:
	$(MAKE) -C proj4 zipexampleinstall
proj4_zipdistinstall:
	$(MAKE) -C proj4 zipdistinstall
proj4_clean:
	$(MAKE) -C proj4 clean
proj4_distclean:
	$(MAKE) -C proj4 distclean
proj4_cleanall:
	$(MAKE) -C proj4 cleanall
proj4_info:
	$(MAKE) -C proj4 info
proj4_makefiles:
	$(MAKE) -C proj4 makefiles
proj4:
	$(MAKE) -C proj4 all
.PHONY: proj4_all proj4_debug proj4_smart proj4_release proj4_units proj4_examples proj4_shared proj4_install proj4_sourceinstall proj4_exampleinstall proj4_distinstall proj4_zipinstall proj4_zipsourceinstall proj4_zipexampleinstall proj4_zipdistinstall proj4_clean proj4_distclean proj4_cleanall proj4_info proj4_makefiles proj4
endif
ifdef TARGET_DIRS_FCL-EXTRA
fcl-extra_all:
	$(MAKE) -C fcl-extra all
fcl-extra_debug:
	$(MAKE) -C fcl-extra debug
fcl-extra_smart:
	$(MAKE) -C fcl-extra smart
fcl-extra_release:
	$(MAKE) -C fcl-extra release
fcl-extra_units:
	$(MAKE) -C fcl-extra units
fcl-extra_examples:
	$(MAKE) -C fcl-extra examples
fcl-extra_shared:
	$(MAKE) -C fcl-extra shared
fcl-extra_install:
	$(MAKE) -C fcl-extra install
fcl-extra_sourceinstall:
	$(MAKE) -C fcl-extra sourceinstall
fcl-extra_exampleinstall:
	$(MAKE) -C fcl-extra exampleinstall
fcl-extra_distinstall:
	$(MAKE) -C fcl-extra distinstall
fcl-extra_zipinstall:
	$(MAKE) -C fcl-extra zipinstall
fcl-extra_zipsourceinstall:
	$(MAKE) -C fcl-extra zipsourceinstall
fcl-extra_zipexampleinstall:
	$(MAKE) -C fcl-extra zipexampleinstall
fcl-extra_zipdistinstall:
	$(MAKE) -C fcl-extra zipdistinstall
fcl-extra_clean:
	$(MAKE) -C fcl-extra clean
fcl-extra_distclean:
	$(MAKE) -C fcl-extra distclean
fcl-extra_cleanall:
	$(MAKE) -C fcl-extra cleanall
fcl-extra_info:
	$(MAKE) -C fcl-extra info
fcl-extra_makefiles:
	$(MAKE) -C fcl-extra makefiles
fcl-extra:
	$(MAKE) -C fcl-extra all
.PHONY: fcl-extra_all fcl-extra_debug fcl-extra_smart fcl-extra_release fcl-extra_units fcl-extra_examples fcl-extra_shared fcl-extra_install fcl-extra_sourceinstall fcl-extra_exampleinstall fcl-extra_distinstall fcl-extra_zipinstall fcl-extra_zipsourceinstall fcl-extra_zipexampleinstall fcl-extra_zipdistinstall fcl-extra_clean fcl-extra_distclean fcl-extra_cleanall fcl-extra_info fcl-extra_makefiles fcl-extra
endif
ifdef TARGET_DIRS_ZORBA
zorba_all:
	$(MAKE) -C zorba all
zorba_debug:
	$(MAKE) -C zorba debug
zorba_smart:
	$(MAKE) -C zorba smart
zorba_release:
	$(MAKE) -C zorba release
zorba_units:
	$(MAKE) -C zorba units
zorba_examples:
	$(MAKE) -C zorba examples
zorba_shared:
	$(MAKE) -C zorba shared
zorba_install:
	$(MAKE) -C zorba install
zorba_sourceinstall:
	$(MAKE) -C zorba sourceinstall
zorba_exampleinstall:
	$(MAKE) -C zorba exampleinstall
zorba_distinstall:
	$(MAKE) -C zorba distinstall
zorba_zipinstall:
	$(MAKE) -C zorba zipinstall
zorba_zipsourceinstall:
	$(MAKE) -C zorba zipsourceinstall
zorba_zipexampleinstall:
	$(MAKE) -C zorba zipexampleinstall
zorba_zipdistinstall:
	$(MAKE) -C zorba zipdistinstall
zorba_clean:
	$(MAKE) -C zorba clean
zorba_distclean:
	$(MAKE) -C zorba distclean
zorba_cleanall:
	$(MAKE) -C zorba cleanall
zorba_info:
	$(MAKE) -C zorba info
zorba_makefiles:
	$(MAKE) -C zorba makefiles
zorba:
	$(MAKE) -C zorba all
.PHONY: zorba_all zorba_debug zorba_smart zorba_release zorba_units zorba_examples zorba_shared zorba_install zorba_sourceinstall zorba_exampleinstall zorba_distinstall zorba_zipinstall zorba_zipsourceinstall zorba_zipexampleinstall zorba_zipdistinstall zorba_clean zorba_distclean zorba_cleanall zorba_info zorba_makefiles zorba
endif
ifdef TARGET_DIRS_IMLIB
imlib_all:
	$(MAKE) -C imlib all
imlib_debug:
	$(MAKE) -C imlib debug
imlib_smart:
	$(MAKE) -C imlib smart
imlib_release:
	$(MAKE) -C imlib release
imlib_units:
	$(MAKE) -C imlib units
imlib_examples:
	$(MAKE) -C imlib examples
imlib_shared:
	$(MAKE) -C imlib shared
imlib_install:
	$(MAKE) -C imlib install
imlib_sourceinstall:
	$(MAKE) -C imlib sourceinstall
imlib_exampleinstall:
	$(MAKE) -C imlib exampleinstall
imlib_distinstall:
	$(MAKE) -C imlib distinstall
imlib_zipinstall:
	$(MAKE) -C imlib zipinstall
imlib_zipsourceinstall:
	$(MAKE) -C imlib zipsourceinstall
imlib_zipexampleinstall:
	$(MAKE) -C imlib zipexampleinstall
imlib_zipdistinstall:
	$(MAKE) -C imlib zipdistinstall
imlib_clean:
	$(MAKE) -C imlib clean
imlib_distclean:
	$(MAKE) -C imlib distclean
imlib_cleanall:
	$(MAKE) -C imlib cleanall
imlib_info:
	$(MAKE) -C imlib info
imlib_makefiles:
	$(MAKE) -C imlib makefiles
imlib:
	$(MAKE) -C imlib all
.PHONY: imlib_all imlib_debug imlib_smart imlib_release imlib_units imlib_examples imlib_shared imlib_install imlib_sourceinstall imlib_exampleinstall imlib_distinstall imlib_zipinstall imlib_zipsourceinstall imlib_zipexampleinstall imlib_zipdistinstall imlib_clean imlib_distclean imlib_cleanall imlib_info imlib_makefiles imlib
endif
ifdef TARGET_DIRS_UTMP
utmp_all:
	$(MAKE) -C utmp all
utmp_debug:
	$(MAKE) -C utmp debug
utmp_smart:
	$(MAKE) -C utmp smart
utmp_release:
	$(MAKE) -C utmp release
utmp_units:
	$(MAKE) -C utmp units
utmp_examples:
	$(MAKE) -C utmp examples
utmp_shared:
	$(MAKE) -C utmp shared
utmp_install:
	$(MAKE) -C utmp install
utmp_sourceinstall:
	$(MAKE) -C utmp sourceinstall
utmp_exampleinstall:
	$(MAKE) -C utmp exampleinstall
utmp_distinstall:
	$(MAKE) -C utmp distinstall
utmp_zipinstall:
	$(MAKE) -C utmp zipinstall
utmp_zipsourceinstall:
	$(MAKE) -C utmp zipsourceinstall
utmp_zipexampleinstall:
	$(MAKE) -C utmp zipexampleinstall
utmp_zipdistinstall:
	$(MAKE) -C utmp zipdistinstall
utmp_clean:
	$(MAKE) -C utmp clean
utmp_distclean:
	$(MAKE) -C utmp distclean
utmp_cleanall:
	$(MAKE) -C utmp cleanall
utmp_info:
	$(MAKE) -C utmp info
utmp_makefiles:
	$(MAKE) -C utmp makefiles
utmp:
	$(MAKE) -C utmp all
.PHONY: utmp_all utmp_debug utmp_smart utmp_release utmp_units utmp_examples utmp_shared utmp_install utmp_sourceinstall utmp_exampleinstall utmp_distinstall utmp_zipinstall utmp_zipsourceinstall utmp_zipexampleinstall utmp_zipdistinstall utmp_clean utmp_distclean utmp_cleanall utmp_info utmp_makefiles utmp
endif
ifdef TARGET_DIRS_FPGTK
fpgtk_all:
	$(MAKE) -C fpgtk all
fpgtk_debug:
	$(MAKE) -C fpgtk debug
fpgtk_smart:
	$(MAKE) -C fpgtk smart
fpgtk_release:
	$(MAKE) -C fpgtk release
fpgtk_units:
	$(MAKE) -C fpgtk units
fpgtk_examples:
	$(MAKE) -C fpgtk examples
fpgtk_shared:
	$(MAKE) -C fpgtk shared
fpgtk_install:
	$(MAKE) -C fpgtk install
fpgtk_sourceinstall:
	$(MAKE) -C fpgtk sourceinstall
fpgtk_exampleinstall:
	$(MAKE) -C fpgtk exampleinstall
fpgtk_distinstall:
	$(MAKE) -C fpgtk distinstall
fpgtk_zipinstall:
	$(MAKE) -C fpgtk zipinstall
fpgtk_zipsourceinstall:
	$(MAKE) -C fpgtk zipsourceinstall
fpgtk_zipexampleinstall:
	$(MAKE) -C fpgtk zipexampleinstall
fpgtk_zipdistinstall:
	$(MAKE) -C fpgtk zipdistinstall
fpgtk_clean:
	$(MAKE) -C fpgtk clean
fpgtk_distclean:
	$(MAKE) -C fpgtk distclean
fpgtk_cleanall:
	$(MAKE) -C fpgtk cleanall
fpgtk_info:
	$(MAKE) -C fpgtk info
fpgtk_makefiles:
	$(MAKE) -C fpgtk makefiles
fpgtk:
	$(MAKE) -C fpgtk all
.PHONY: fpgtk_all fpgtk_debug fpgtk_smart fpgtk_release fpgtk_units fpgtk_examples fpgtk_shared fpgtk_install fpgtk_sourceinstall fpgtk_exampleinstall fpgtk_distinstall fpgtk_zipinstall fpgtk_zipsourceinstall fpgtk_zipexampleinstall fpgtk_zipdistinstall fpgtk_clean fpgtk_distclean fpgtk_cleanall fpgtk_info fpgtk_makefiles fpgtk
endif
ifdef TARGET_DIRS_OPENAL
openal_all:
	$(MAKE) -C openal all
openal_debug:
	$(MAKE) -C openal debug
openal_smart:
	$(MAKE) -C openal smart
openal_release:
	$(MAKE) -C openal release
openal_units:
	$(MAKE) -C openal units
openal_examples:
	$(MAKE) -C openal examples
openal_shared:
	$(MAKE) -C openal shared
openal_install:
	$(MAKE) -C openal install
openal_sourceinstall:
	$(MAKE) -C openal sourceinstall
openal_exampleinstall:
	$(MAKE) -C openal exampleinstall
openal_distinstall:
	$(MAKE) -C openal distinstall
openal_zipinstall:
	$(MAKE) -C openal zipinstall
openal_zipsourceinstall:
	$(MAKE) -C openal zipsourceinstall
openal_zipexampleinstall:
	$(MAKE) -C openal zipexampleinstall
openal_zipdistinstall:
	$(MAKE) -C openal zipdistinstall
openal_clean:
	$(MAKE) -C openal clean
openal_distclean:
	$(MAKE) -C openal distclean
openal_cleanall:
	$(MAKE) -C openal cleanall
openal_info:
	$(MAKE) -C openal info
openal_makefiles:
	$(MAKE) -C openal makefiles
openal:
	$(MAKE) -C openal all
.PHONY: openal_all openal_debug openal_smart openal_release openal_units openal_examples openal_shared openal_install openal_sourceinstall openal_exampleinstall openal_distinstall openal_zipinstall openal_zipsourceinstall openal_zipexampleinstall openal_zipdistinstall openal_clean openal_distclean openal_cleanall openal_info openal_makefiles openal
endif
ifdef TARGET_DIRS_LUA
lua_all:
	$(MAKE) -C lua all
lua_debug:
	$(MAKE) -C lua debug
lua_smart:
	$(MAKE) -C lua smart
lua_release:
	$(MAKE) -C lua release
lua_units:
	$(MAKE) -C lua units
lua_examples:
	$(MAKE) -C lua examples
lua_shared:
	$(MAKE) -C lua shared
lua_install:
	$(MAKE) -C lua install
lua_sourceinstall:
	$(MAKE) -C lua sourceinstall
lua_exampleinstall:
	$(MAKE) -C lua exampleinstall
lua_distinstall:
	$(MAKE) -C lua distinstall
lua_zipinstall:
	$(MAKE) -C lua zipinstall
lua_zipsourceinstall:
	$(MAKE) -C lua zipsourceinstall
lua_zipexampleinstall:
	$(MAKE) -C lua zipexampleinstall
lua_zipdistinstall:
	$(MAKE) -C lua zipdistinstall
lua_clean:
	$(MAKE) -C lua clean
lua_distclean:
	$(MAKE) -C lua distclean
lua_cleanall:
	$(MAKE) -C lua cleanall
lua_info:
	$(MAKE) -C lua info
lua_makefiles:
	$(MAKE) -C lua makefiles
lua:
	$(MAKE) -C lua all
.PHONY: lua_all lua_debug lua_smart lua_release lua_units lua_examples lua_shared lua_install lua_sourceinstall lua_exampleinstall lua_distinstall lua_zipinstall lua_zipsourceinstall lua_zipexampleinstall lua_zipdistinstall lua_clean lua_distclean lua_cleanall lua_info lua_makefiles lua
endif
ifdef TARGET_DIRS_OGGVORBIS
oggvorbis_all:
	$(MAKE) -C oggvorbis all
oggvorbis_debug:
	$(MAKE) -C oggvorbis debug
oggvorbis_smart:
	$(MAKE) -C oggvorbis smart
oggvorbis_release:
	$(MAKE) -C oggvorbis release
oggvorbis_units:
	$(MAKE) -C oggvorbis units
oggvorbis_examples:
	$(MAKE) -C oggvorbis examples
oggvorbis_shared:
	$(MAKE) -C oggvorbis shared
oggvorbis_install:
	$(MAKE) -C oggvorbis install
oggvorbis_sourceinstall:
	$(MAKE) -C oggvorbis sourceinstall
oggvorbis_exampleinstall:
	$(MAKE) -C oggvorbis exampleinstall
oggvorbis_distinstall:
	$(MAKE) -C oggvorbis distinstall
oggvorbis_zipinstall:
	$(MAKE) -C oggvorbis zipinstall
oggvorbis_zipsourceinstall:
	$(MAKE) -C oggvorbis zipsourceinstall
oggvorbis_zipexampleinstall:
	$(MAKE) -C oggvorbis zipexampleinstall
oggvorbis_zipdistinstall:
	$(MAKE) -C oggvorbis zipdistinstall
oggvorbis_clean:
	$(MAKE) -C oggvorbis clean
oggvorbis_distclean:
	$(MAKE) -C oggvorbis distclean
oggvorbis_cleanall:
	$(MAKE) -C oggvorbis cleanall
oggvorbis_info:
	$(MAKE) -C oggvorbis info
oggvorbis_makefiles:
	$(MAKE) -C oggvorbis makefiles
oggvorbis:
	$(MAKE) -C oggvorbis all
.PHONY: oggvorbis_all oggvorbis_debug oggvorbis_smart oggvorbis_release oggvorbis_units oggvorbis_examples oggvorbis_shared oggvorbis_install oggvorbis_sourceinstall oggvorbis_exampleinstall oggvorbis_distinstall oggvorbis_zipinstall oggvorbis_zipsourceinstall oggvorbis_zipexampleinstall oggvorbis_zipdistinstall oggvorbis_clean oggvorbis_distclean oggvorbis_cleanall oggvorbis_info oggvorbis_makefiles oggvorbis
endif
ifdef TARGET_DIRS_XFORMS
xforms_all:
	$(MAKE) -C xforms all
xforms_debug:
	$(MAKE) -C xforms debug
xforms_smart:
	$(MAKE) -C xforms smart
xforms_release:
	$(MAKE) -C xforms release
xforms_units:
	$(MAKE) -C xforms units
xforms_examples:
	$(MAKE) -C xforms examples
xforms_shared:
	$(MAKE) -C xforms shared
xforms_install:
	$(MAKE) -C xforms install
xforms_sourceinstall:
	$(MAKE) -C xforms sourceinstall
xforms_exampleinstall:
	$(MAKE) -C xforms exampleinstall
xforms_distinstall:
	$(MAKE) -C xforms distinstall
xforms_zipinstall:
	$(MAKE) -C xforms zipinstall
xforms_zipsourceinstall:
	$(MAKE) -C xforms zipsourceinstall
xforms_zipexampleinstall:
	$(MAKE) -C xforms zipexampleinstall
xforms_zipdistinstall:
	$(MAKE) -C xforms zipdistinstall
xforms_clean:
	$(MAKE) -C xforms clean
xforms_distclean:
	$(MAKE) -C xforms distclean
xforms_cleanall:
	$(MAKE) -C xforms cleanall
xforms_info:
	$(MAKE) -C xforms info
xforms_makefiles:
	$(MAKE) -C xforms makefiles
xforms:
	$(MAKE) -C xforms all
.PHONY: xforms_all xforms_debug xforms_smart xforms_release xforms_units xforms_examples xforms_shared xforms_install xforms_sourceinstall xforms_exampleinstall xforms_distinstall xforms_zipinstall xforms_zipsourceinstall xforms_zipexampleinstall xforms_zipdistinstall xforms_clean xforms_distclean xforms_cleanall xforms_info xforms_makefiles xforms
endif
ifdef TARGET_DIRS_FFTW
fftw_all:
	$(MAKE) -C fftw all
fftw_debug:
	$(MAKE) -C fftw debug
fftw_smart:
	$(MAKE) -C fftw smart
fftw_release:
	$(MAKE) -C fftw release
fftw_units:
	$(MAKE) -C fftw units
fftw_examples:
	$(MAKE) -C fftw examples
fftw_shared:
	$(MAKE) -C fftw shared
fftw_install:
	$(MAKE) -C fftw install
fftw_sourceinstall:
	$(MAKE) -C fftw sourceinstall
fftw_exampleinstall:
	$(MAKE) -C fftw exampleinstall
fftw_distinstall:
	$(MAKE) -C fftw distinstall
fftw_zipinstall:
	$(MAKE) -C fftw zipinstall
fftw_zipsourceinstall:
	$(MAKE) -C fftw zipsourceinstall
fftw_zipexampleinstall:
	$(MAKE) -C fftw zipexampleinstall
fftw_zipdistinstall:
	$(MAKE) -C fftw zipdistinstall
fftw_clean:
	$(MAKE) -C fftw clean
fftw_distclean:
	$(MAKE) -C fftw distclean
fftw_cleanall:
	$(MAKE) -C fftw cleanall
fftw_info:
	$(MAKE) -C fftw info
fftw_makefiles:
	$(MAKE) -C fftw makefiles
fftw:
	$(MAKE) -C fftw all
.PHONY: fftw_all fftw_debug fftw_smart fftw_release fftw_units fftw_examples fftw_shared fftw_install fftw_sourceinstall fftw_exampleinstall fftw_distinstall fftw_zipinstall fftw_zipsourceinstall fftw_zipexampleinstall fftw_zipdistinstall fftw_clean fftw_distclean fftw_cleanall fftw_info fftw_makefiles fftw
endif
ifdef TARGET_DIRS_PCAP
pcap_all:
	$(MAKE) -C pcap all
pcap_debug:
	$(MAKE) -C pcap debug
pcap_smart:
	$(MAKE) -C pcap smart
pcap_release:
	$(MAKE) -C pcap release
pcap_units:
	$(MAKE) -C pcap units
pcap_examples:
	$(MAKE) -C pcap examples
pcap_shared:
	$(MAKE) -C pcap shared
pcap_install:
	$(MAKE) -C pcap install
pcap_sourceinstall:
	$(MAKE) -C pcap sourceinstall
pcap_exampleinstall:
	$(MAKE) -C pcap exampleinstall
pcap_distinstall:
	$(MAKE) -C pcap distinstall
pcap_zipinstall:
	$(MAKE) -C pcap zipinstall
pcap_zipsourceinstall:
	$(MAKE) -C pcap zipsourceinstall
pcap_zipexampleinstall:
	$(MAKE) -C pcap zipexampleinstall
pcap_zipdistinstall:
	$(MAKE) -C pcap zipdistinstall
pcap_clean:
	$(MAKE) -C pcap clean
pcap_distclean:
	$(MAKE) -C pcap distclean
pcap_cleanall:
	$(MAKE) -C pcap cleanall
pcap_info:
	$(MAKE) -C pcap info
pcap_makefiles:
	$(MAKE) -C pcap makefiles
pcap:
	$(MAKE) -C pcap all
.PHONY: pcap_all pcap_debug pcap_smart pcap_release pcap_units pcap_examples pcap_shared pcap_install pcap_sourceinstall pcap_exampleinstall pcap_distinstall pcap_zipinstall pcap_zipsourceinstall pcap_zipexampleinstall pcap_zipdistinstall pcap_clean pcap_distclean pcap_cleanall pcap_info pcap_makefiles pcap
endif
ifdef TARGET_DIRS_GGI
ggi_all:
	$(MAKE) -C ggi all
ggi_debug:
	$(MAKE) -C ggi debug
ggi_smart:
	$(MAKE) -C ggi smart
ggi_release:
	$(MAKE) -C ggi release
ggi_units:
	$(MAKE) -C ggi units
ggi_examples:
	$(MAKE) -C ggi examples
ggi_shared:
	$(MAKE) -C ggi shared
ggi_install:
	$(MAKE) -C ggi install
ggi_sourceinstall:
	$(MAKE) -C ggi sourceinstall
ggi_exampleinstall:
	$(MAKE) -C ggi exampleinstall
ggi_distinstall:
	$(MAKE) -C ggi distinstall
ggi_zipinstall:
	$(MAKE) -C ggi zipinstall
ggi_zipsourceinstall:
	$(MAKE) -C ggi zipsourceinstall
ggi_zipexampleinstall:
	$(MAKE) -C ggi zipexampleinstall
ggi_zipdistinstall:
	$(MAKE) -C ggi zipdistinstall
ggi_clean:
	$(MAKE) -C ggi clean
ggi_distclean:
	$(MAKE) -C ggi distclean
ggi_cleanall:
	$(MAKE) -C ggi cleanall
ggi_info:
	$(MAKE) -C ggi info
ggi_makefiles:
	$(MAKE) -C ggi makefiles
ggi:
	$(MAKE) -C ggi all
.PHONY: ggi_all ggi_debug ggi_smart ggi_release ggi_units ggi_examples ggi_shared ggi_install ggi_sourceinstall ggi_exampleinstall ggi_distinstall ggi_zipinstall ggi_zipsourceinstall ggi_zipexampleinstall ggi_zipdistinstall ggi_clean ggi_distclean ggi_cleanall ggi_info ggi_makefiles ggi
endif
ifdef TARGET_DIRS_SDL
sdl_all:
	$(MAKE) -C sdl all
sdl_debug:
	$(MAKE) -C sdl debug
sdl_smart:
	$(MAKE) -C sdl smart
sdl_release:
	$(MAKE) -C sdl release
sdl_units:
	$(MAKE) -C sdl units
sdl_examples:
	$(MAKE) -C sdl examples
sdl_shared:
	$(MAKE) -C sdl shared
sdl_install:
	$(MAKE) -C sdl install
sdl_sourceinstall:
	$(MAKE) -C sdl sourceinstall
sdl_exampleinstall:
	$(MAKE) -C sdl exampleinstall
sdl_distinstall:
	$(MAKE) -C sdl distinstall
sdl_zipinstall:
	$(MAKE) -C sdl zipinstall
sdl_zipsourceinstall:
	$(MAKE) -C sdl zipsourceinstall
sdl_zipexampleinstall:
	$(MAKE) -C sdl zipexampleinstall
sdl_zipdistinstall:
	$(MAKE) -C sdl zipdistinstall
sdl_clean:
	$(MAKE) -C sdl clean
sdl_distclean:
	$(MAKE) -C sdl distclean
sdl_cleanall:
	$(MAKE) -C sdl cleanall
sdl_info:
	$(MAKE) -C sdl info
sdl_makefiles:
	$(MAKE) -C sdl makefiles
sdl:
	$(MAKE) -C sdl all
.PHONY: sdl_all sdl_debug sdl_smart sdl_release sdl_units sdl_examples sdl_shared sdl_install sdl_sourceinstall sdl_exampleinstall sdl_distinstall sdl_zipinstall sdl_zipsourceinstall sdl_zipexampleinstall sdl_zipdistinstall sdl_clean sdl_distclean sdl_cleanall sdl_info sdl_makefiles sdl
endif
ifdef TARGET_DIRS_OPENSSL
openssl_all:
	$(MAKE) -C openssl all
openssl_debug:
	$(MAKE) -C openssl debug
openssl_smart:
	$(MAKE) -C openssl smart
openssl_release:
	$(MAKE) -C openssl release
openssl_units:
	$(MAKE) -C openssl units
openssl_examples:
	$(MAKE) -C openssl examples
openssl_shared:
	$(MAKE) -C openssl shared
openssl_install:
	$(MAKE) -C openssl install
openssl_sourceinstall:
	$(MAKE) -C openssl sourceinstall
openssl_exampleinstall:
	$(MAKE) -C openssl exampleinstall
openssl_distinstall:
	$(MAKE) -C openssl distinstall
openssl_zipinstall:
	$(MAKE) -C openssl zipinstall
openssl_zipsourceinstall:
	$(MAKE) -C openssl zipsourceinstall
openssl_zipexampleinstall:
	$(MAKE) -C openssl zipexampleinstall
openssl_zipdistinstall:
	$(MAKE) -C openssl zipdistinstall
openssl_clean:
	$(MAKE) -C openssl clean
openssl_distclean:
	$(MAKE) -C openssl distclean
openssl_cleanall:
	$(MAKE) -C openssl cleanall
openssl_info:
	$(MAKE) -C openssl info
openssl_makefiles:
	$(MAKE) -C openssl makefiles
openssl:
	$(MAKE) -C openssl all
.PHONY: openssl_all openssl_debug openssl_smart openssl_release openssl_units openssl_examples openssl_shared openssl_install openssl_sourceinstall openssl_exampleinstall openssl_distinstall openssl_zipinstall openssl_zipsourceinstall openssl_zipexampleinstall openssl_zipdistinstall openssl_clean openssl_distclean openssl_cleanall openssl_info openssl_makefiles openssl
endif
ifdef TARGET_DIRS_GNOME1
gnome1_all:
	$(MAKE) -C gnome1 all
gnome1_debug:
	$(MAKE) -C gnome1 debug
gnome1_smart:
	$(MAKE) -C gnome1 smart
gnome1_release:
	$(MAKE) -C gnome1 release
gnome1_units:
	$(MAKE) -C gnome1 units
gnome1_examples:
	$(MAKE) -C gnome1 examples
gnome1_shared:
	$(MAKE) -C gnome1 shared
gnome1_install:
	$(MAKE) -C gnome1 install
gnome1_sourceinstall:
	$(MAKE) -C gnome1 sourceinstall
gnome1_exampleinstall:
	$(MAKE) -C gnome1 exampleinstall
gnome1_distinstall:
	$(MAKE) -C gnome1 distinstall
gnome1_zipinstall:
	$(MAKE) -C gnome1 zipinstall
gnome1_zipsourceinstall:
	$(MAKE) -C gnome1 zipsourceinstall
gnome1_zipexampleinstall:
	$(MAKE) -C gnome1 zipexampleinstall
gnome1_zipdistinstall:
	$(MAKE) -C gnome1 zipdistinstall
gnome1_clean:
	$(MAKE) -C gnome1 clean
gnome1_distclean:
	$(MAKE) -C gnome1 distclean
gnome1_cleanall:
	$(MAKE) -C gnome1 cleanall
gnome1_info:
	$(MAKE) -C gnome1 info
gnome1_makefiles:
	$(MAKE) -C gnome1 makefiles
gnome1:
	$(MAKE) -C gnome1 all
.PHONY: gnome1_all gnome1_debug gnome1_smart gnome1_release gnome1_units gnome1_examples gnome1_shared gnome1_install gnome1_sourceinstall gnome1_exampleinstall gnome1_distinstall gnome1_zipinstall gnome1_zipsourceinstall gnome1_zipexampleinstall gnome1_zipdistinstall gnome1_clean gnome1_distclean gnome1_cleanall gnome1_info gnome1_makefiles gnome1
endif
ifdef TARGET_DIRS_HTTPD22
httpd22_all:
	$(MAKE) -C httpd22 all
httpd22_debug:
	$(MAKE) -C httpd22 debug
httpd22_smart:
	$(MAKE) -C httpd22 smart
httpd22_release:
	$(MAKE) -C httpd22 release
httpd22_units:
	$(MAKE) -C httpd22 units
httpd22_examples:
	$(MAKE) -C httpd22 examples
httpd22_shared:
	$(MAKE) -C httpd22 shared
httpd22_install:
	$(MAKE) -C httpd22 install
httpd22_sourceinstall:
	$(MAKE) -C httpd22 sourceinstall
httpd22_exampleinstall:
	$(MAKE) -C httpd22 exampleinstall
httpd22_distinstall:
	$(MAKE) -C httpd22 distinstall
httpd22_zipinstall:
	$(MAKE) -C httpd22 zipinstall
httpd22_zipsourceinstall:
	$(MAKE) -C httpd22 zipsourceinstall
httpd22_zipexampleinstall:
	$(MAKE) -C httpd22 zipexampleinstall
httpd22_zipdistinstall:
	$(MAKE) -C httpd22 zipdistinstall
httpd22_clean:
	$(MAKE) -C httpd22 clean
httpd22_distclean:
	$(MAKE) -C httpd22 distclean
httpd22_cleanall:
	$(MAKE) -C httpd22 cleanall
httpd22_info:
	$(MAKE) -C httpd22 info
httpd22_makefiles:
	$(MAKE) -C httpd22 makefiles
httpd22:
	$(MAKE) -C httpd22 all
.PHONY: httpd22_all httpd22_debug httpd22_smart httpd22_release httpd22_units httpd22_examples httpd22_shared httpd22_install httpd22_sourceinstall httpd22_exampleinstall httpd22_distinstall httpd22_zipinstall httpd22_zipsourceinstall httpd22_zipexampleinstall httpd22_zipdistinstall httpd22_clean httpd22_distclean httpd22_cleanall httpd22_info httpd22_makefiles httpd22
endif
ifdef TARGET_DIRS_HTTPD24
httpd24_all:
	$(MAKE) -C httpd24 all
httpd24_debug:
	$(MAKE) -C httpd24 debug
httpd24_smart:
	$(MAKE) -C httpd24 smart
httpd24_release:
	$(MAKE) -C httpd24 release
httpd24_units:
	$(MAKE) -C httpd24 units
httpd24_examples:
	$(MAKE) -C httpd24 examples
httpd24_shared:
	$(MAKE) -C httpd24 shared
httpd24_install:
	$(MAKE) -C httpd24 install
httpd24_sourceinstall:
	$(MAKE) -C httpd24 sourceinstall
httpd24_exampleinstall:
	$(MAKE) -C httpd24 exampleinstall
httpd24_distinstall:
	$(MAKE) -C httpd24 distinstall
httpd24_zipinstall:
	$(MAKE) -C httpd24 zipinstall
httpd24_zipsourceinstall:
	$(MAKE) -C httpd24 zipsourceinstall
httpd24_zipexampleinstall:
	$(MAKE) -C httpd24 zipexampleinstall
httpd24_zipdistinstall:
	$(MAKE) -C httpd24 zipdistinstall
httpd24_clean:
	$(MAKE) -C httpd24 clean
httpd24_distclean:
	$(MAKE) -C httpd24 distclean
httpd24_cleanall:
	$(MAKE) -C httpd24 cleanall
httpd24_info:
	$(MAKE) -C httpd24 info
httpd24_makefiles:
	$(MAKE) -C httpd24 makefiles
httpd24:
	$(MAKE) -C httpd24 all
.PHONY: httpd24_all httpd24_debug httpd24_smart httpd24_release httpd24_units httpd24_examples httpd24_shared httpd24_install httpd24_sourceinstall httpd24_exampleinstall httpd24_distinstall httpd24_zipinstall httpd24_zipsourceinstall httpd24_zipexampleinstall httpd24_zipdistinstall httpd24_clean httpd24_distclean httpd24_cleanall httpd24_info httpd24_makefiles httpd24
endif
ifdef TARGET_DIRS_PXLIB
pxlib_all:
	$(MAKE) -C pxlib all
pxlib_debug:
	$(MAKE) -C pxlib debug
pxlib_smart:
	$(MAKE) -C pxlib smart
pxlib_release:
	$(MAKE) -C pxlib release
pxlib_units:
	$(MAKE) -C pxlib units
pxlib_examples:
	$(MAKE) -C pxlib examples
pxlib_shared:
	$(MAKE) -C pxlib shared
pxlib_install:
	$(MAKE) -C pxlib install
pxlib_sourceinstall:
	$(MAKE) -C pxlib sourceinstall
pxlib_exampleinstall:
	$(MAKE) -C pxlib exampleinstall
pxlib_distinstall:
	$(MAKE) -C pxlib distinstall
pxlib_zipinstall:
	$(MAKE) -C pxlib zipinstall
pxlib_zipsourceinstall:
	$(MAKE) -C pxlib zipsourceinstall
pxlib_zipexampleinstall:
	$(MAKE) -C pxlib zipexampleinstall
pxlib_zipdistinstall:
	$(MAKE) -C pxlib zipdistinstall
pxlib_clean:
	$(MAKE) -C pxlib clean
pxlib_distclean:
	$(MAKE) -C pxlib distclean
pxlib_cleanall:
	$(MAKE) -C pxlib cleanall
pxlib_info:
	$(MAKE) -C pxlib info
pxlib_makefiles:
	$(MAKE) -C pxlib makefiles
pxlib:
	$(MAKE) -C pxlib all
.PHONY: pxlib_all pxlib_debug pxlib_smart pxlib_release pxlib_units pxlib_examples pxlib_shared pxlib_install pxlib_sourceinstall pxlib_exampleinstall pxlib_distinstall pxlib_zipinstall pxlib_zipsourceinstall pxlib_zipexampleinstall pxlib_zipdistinstall pxlib_clean pxlib_distclean pxlib_cleanall pxlib_info pxlib_makefiles pxlib
endif
ifdef TARGET_DIRS_NUMLIB
numlib_all:
	$(MAKE) -C numlib all
numlib_debug:
	$(MAKE) -C numlib debug
numlib_smart:
	$(MAKE) -C numlib smart
numlib_release:
	$(MAKE) -C numlib release
numlib_units:
	$(MAKE) -C numlib units
numlib_examples:
	$(MAKE) -C numlib examples
numlib_shared:
	$(MAKE) -C numlib shared
numlib_install:
	$(MAKE) -C numlib install
numlib_sourceinstall:
	$(MAKE) -C numlib sourceinstall
numlib_exampleinstall:
	$(MAKE) -C numlib exampleinstall
numlib_distinstall:
	$(MAKE) -C numlib distinstall
numlib_zipinstall:
	$(MAKE) -C numlib zipinstall
numlib_zipsourceinstall:
	$(MAKE) -C numlib zipsourceinstall
numlib_zipexampleinstall:
	$(MAKE) -C numlib zipexampleinstall
numlib_zipdistinstall:
	$(MAKE) -C numlib zipdistinstall
numlib_clean:
	$(MAKE) -C numlib clean
numlib_distclean:
	$(MAKE) -C numlib distclean
numlib_cleanall:
	$(MAKE) -C numlib cleanall
numlib_info:
	$(MAKE) -C numlib info
numlib_makefiles:
	$(MAKE) -C numlib makefiles
numlib:
	$(MAKE) -C numlib all
.PHONY: numlib_all numlib_debug numlib_smart numlib_release numlib_units numlib_examples numlib_shared numlib_install numlib_sourceinstall numlib_exampleinstall numlib_distinstall numlib_zipinstall numlib_zipsourceinstall numlib_zipexampleinstall numlib_zipdistinstall numlib_clean numlib_distclean numlib_cleanall numlib_info numlib_makefiles numlib
endif
ifdef TARGET_DIRS_GMP
gmp_all:
	$(MAKE) -C gmp all
gmp_debug:
	$(MAKE) -C gmp debug
gmp_smart:
	$(MAKE) -C gmp smart
gmp_release:
	$(MAKE) -C gmp release
gmp_units:
	$(MAKE) -C gmp units
gmp_examples:
	$(MAKE) -C gmp examples
gmp_shared:
	$(MAKE) -C gmp shared
gmp_install:
	$(MAKE) -C gmp install
gmp_sourceinstall:
	$(MAKE) -C gmp sourceinstall
gmp_exampleinstall:
	$(MAKE) -C gmp exampleinstall
gmp_distinstall:
	$(MAKE) -C gmp distinstall
gmp_zipinstall:
	$(MAKE) -C gmp zipinstall
gmp_zipsourceinstall:
	$(MAKE) -C gmp zipsourceinstall
gmp_zipexampleinstall:
	$(MAKE) -C gmp zipexampleinstall
gmp_zipdistinstall:
	$(MAKE) -C gmp zipdistinstall
gmp_clean:
	$(MAKE) -C gmp clean
gmp_distclean:
	$(MAKE) -C gmp distclean
gmp_cleanall:
	$(MAKE) -C gmp cleanall
gmp_info:
	$(MAKE) -C gmp info
gmp_makefiles:
	$(MAKE) -C gmp makefiles
gmp:
	$(MAKE) -C gmp all
.PHONY: gmp_all gmp_debug gmp_smart gmp_release gmp_units gmp_examples gmp_shared gmp_install gmp_sourceinstall gmp_exampleinstall gmp_distinstall gmp_zipinstall gmp_zipsourceinstall gmp_zipexampleinstall gmp_zipdistinstall gmp_clean gmp_distclean gmp_cleanall gmp_info gmp_makefiles gmp
endif
ifdef TARGET_DIRS_LIBSEE
libsee_all:
	$(MAKE) -C libsee all
libsee_debug:
	$(MAKE) -C libsee debug
libsee_smart:
	$(MAKE) -C libsee smart
libsee_release:
	$(MAKE) -C libsee release
libsee_units:
	$(MAKE) -C libsee units
libsee_examples:
	$(MAKE) -C libsee examples
libsee_shared:
	$(MAKE) -C libsee shared
libsee_install:
	$(MAKE) -C libsee install
libsee_sourceinstall:
	$(MAKE) -C libsee sourceinstall
libsee_exampleinstall:
	$(MAKE) -C libsee exampleinstall
libsee_distinstall:
	$(MAKE) -C libsee distinstall
libsee_zipinstall:
	$(MAKE) -C libsee zipinstall
libsee_zipsourceinstall:
	$(MAKE) -C libsee zipsourceinstall
libsee_zipexampleinstall:
	$(MAKE) -C libsee zipexampleinstall
libsee_zipdistinstall:
	$(MAKE) -C libsee zipdistinstall
libsee_clean:
	$(MAKE) -C libsee clean
libsee_distclean:
	$(MAKE) -C libsee distclean
libsee_cleanall:
	$(MAKE) -C libsee cleanall
libsee_info:
	$(MAKE) -C libsee info
libsee_makefiles:
	$(MAKE) -C libsee makefiles
libsee:
	$(MAKE) -C libsee all
.PHONY: libsee_all libsee_debug libsee_smart libsee_release libsee_units libsee_examples libsee_shared libsee_install libsee_sourceinstall libsee_exampleinstall libsee_distinstall libsee_zipinstall libsee_zipsourceinstall libsee_zipexampleinstall libsee_zipdistinstall libsee_clean libsee_distclean libsee_cleanall libsee_info libsee_makefiles libsee
endif
ifdef TARGET_DIRS_PTC
ptc_all:
	$(MAKE) -C ptc all
ptc_debug:
	$(MAKE) -C ptc debug
ptc_smart:
	$(MAKE) -C ptc smart
ptc_release:
	$(MAKE) -C ptc release
ptc_units:
	$(MAKE) -C ptc units
ptc_examples:
	$(MAKE) -C ptc examples
ptc_shared:
	$(MAKE) -C ptc shared
ptc_install:
	$(MAKE) -C ptc install
ptc_sourceinstall:
	$(MAKE) -C ptc sourceinstall
ptc_exampleinstall:
	$(MAKE) -C ptc exampleinstall
ptc_distinstall:
	$(MAKE) -C ptc distinstall
ptc_zipinstall:
	$(MAKE) -C ptc zipinstall
ptc_zipsourceinstall:
	$(MAKE) -C ptc zipsourceinstall
ptc_zipexampleinstall:
	$(MAKE) -C ptc zipexampleinstall
ptc_zipdistinstall:
	$(MAKE) -C ptc zipdistinstall
ptc_clean:
	$(MAKE) -C ptc clean
ptc_distclean:
	$(MAKE) -C ptc distclean
ptc_cleanall:
	$(MAKE) -C ptc cleanall
ptc_info:
	$(MAKE) -C ptc info
ptc_makefiles:
	$(MAKE) -C ptc makefiles
ptc:
	$(MAKE) -C ptc all
.PHONY: ptc_all ptc_debug ptc_smart ptc_release ptc_units ptc_examples ptc_shared ptc_install ptc_sourceinstall ptc_exampleinstall ptc_distinstall ptc_zipinstall ptc_zipsourceinstall ptc_zipexampleinstall ptc_zipdistinstall ptc_clean ptc_distclean ptc_cleanall ptc_info ptc_makefiles ptc
endif
ifdef TARGET_DIRS_DBLIB
dblib_all:
	$(MAKE) -C dblib all
dblib_debug:
	$(MAKE) -C dblib debug
dblib_smart:
	$(MAKE) -C dblib smart
dblib_release:
	$(MAKE) -C dblib release
dblib_units:
	$(MAKE) -C dblib units
dblib_examples:
	$(MAKE) -C dblib examples
dblib_shared:
	$(MAKE) -C dblib shared
dblib_install:
	$(MAKE) -C dblib install
dblib_sourceinstall:
	$(MAKE) -C dblib sourceinstall
dblib_exampleinstall:
	$(MAKE) -C dblib exampleinstall
dblib_distinstall:
	$(MAKE) -C dblib distinstall
dblib_zipinstall:
	$(MAKE) -C dblib zipinstall
dblib_zipsourceinstall:
	$(MAKE) -C dblib zipsourceinstall
dblib_zipexampleinstall:
	$(MAKE) -C dblib zipexampleinstall
dblib_zipdistinstall:
	$(MAKE) -C dblib zipdistinstall
dblib_clean:
	$(MAKE) -C dblib clean
dblib_distclean:
	$(MAKE) -C dblib distclean
dblib_cleanall:
	$(MAKE) -C dblib cleanall
dblib_info:
	$(MAKE) -C dblib info
dblib_makefiles:
	$(MAKE) -C dblib makefiles
dblib:
	$(MAKE) -C dblib all
.PHONY: dblib_all dblib_debug dblib_smart dblib_release dblib_units dblib_examples dblib_shared dblib_install dblib_sourceinstall dblib_exampleinstall dblib_distinstall dblib_zipinstall dblib_zipsourceinstall dblib_zipexampleinstall dblib_zipdistinstall dblib_clean dblib_distclean dblib_cleanall dblib_info dblib_makefiles dblib
endif
ifdef TARGET_DIRS_FPINDEXER
fpindexer_all:
	$(MAKE) -C fpindexer all
fpindexer_debug:
	$(MAKE) -C fpindexer debug
fpindexer_smart:
	$(MAKE) -C fpindexer smart
fpindexer_release:
	$(MAKE) -C fpindexer release
fpindexer_units:
	$(MAKE) -C fpindexer units
fpindexer_examples:
	$(MAKE) -C fpindexer examples
fpindexer_shared:
	$(MAKE) -C fpindexer shared
fpindexer_install:
	$(MAKE) -C fpindexer install
fpindexer_sourceinstall:
	$(MAKE) -C fpindexer sourceinstall
fpindexer_exampleinstall:
	$(MAKE) -C fpindexer exampleinstall
fpindexer_distinstall:
	$(MAKE) -C fpindexer distinstall
fpindexer_zipinstall:
	$(MAKE) -C fpindexer zipinstall
fpindexer_zipsourceinstall:
	$(MAKE) -C fpindexer zipsourceinstall
fpindexer_zipexampleinstall:
	$(MAKE) -C fpindexer zipexampleinstall
fpindexer_zipdistinstall:
	$(MAKE) -C fpindexer zipdistinstall
fpindexer_clean:
	$(MAKE) -C fpindexer clean
fpindexer_distclean:
	$(MAKE) -C fpindexer distclean
fpindexer_cleanall:
	$(MAKE) -C fpindexer cleanall
fpindexer_info:
	$(MAKE) -C fpindexer info
fpindexer_makefiles:
	$(MAKE) -C fpindexer makefiles
fpindexer:
	$(MAKE) -C fpindexer all
.PHONY: fpindexer_all fpindexer_debug fpindexer_smart fpindexer_release fpindexer_units fpindexer_examples fpindexer_shared fpindexer_install fpindexer_sourceinstall fpindexer_exampleinstall fpindexer_distinstall fpindexer_zipinstall fpindexer_zipsourceinstall fpindexer_zipexampleinstall fpindexer_zipdistinstall fpindexer_clean fpindexer_distclean fpindexer_cleanall fpindexer_info fpindexer_makefiles fpindexer
endif
ifdef TARGET_DIRS_LIBVLC
libvlc_all:
	$(MAKE) -C libvlc all
libvlc_debug:
	$(MAKE) -C libvlc debug
libvlc_smart:
	$(MAKE) -C libvlc smart
libvlc_release:
	$(MAKE) -C libvlc release
libvlc_units:
	$(MAKE) -C libvlc units
libvlc_examples:
	$(MAKE) -C libvlc examples
libvlc_shared:
	$(MAKE) -C libvlc shared
libvlc_install:
	$(MAKE) -C libvlc install
libvlc_sourceinstall:
	$(MAKE) -C libvlc sourceinstall
libvlc_exampleinstall:
	$(MAKE) -C libvlc exampleinstall
libvlc_distinstall:
	$(MAKE) -C libvlc distinstall
libvlc_zipinstall:
	$(MAKE) -C libvlc zipinstall
libvlc_zipsourceinstall:
	$(MAKE) -C libvlc zipsourceinstall
libvlc_zipexampleinstall:
	$(MAKE) -C libvlc zipexampleinstall
libvlc_zipdistinstall:
	$(MAKE) -C libvlc zipdistinstall
libvlc_clean:
	$(MAKE) -C libvlc clean
libvlc_distclean:
	$(MAKE) -C libvlc distclean
libvlc_cleanall:
	$(MAKE) -C libvlc cleanall
libvlc_info:
	$(MAKE) -C libvlc info
libvlc_makefiles:
	$(MAKE) -C libvlc makefiles
libvlc:
	$(MAKE) -C libvlc all
.PHONY: libvlc_all libvlc_debug libvlc_smart libvlc_release libvlc_units libvlc_examples libvlc_shared libvlc_install libvlc_sourceinstall libvlc_exampleinstall libvlc_distinstall libvlc_zipinstall libvlc_zipsourceinstall libvlc_zipexampleinstall libvlc_zipdistinstall libvlc_clean libvlc_distclean libvlc_cleanall libvlc_info libvlc_makefiles libvlc
endif
ifdef TARGET_DIRS_GRAPH
graph_all:
	$(MAKE) -C graph all
graph_debug:
	$(MAKE) -C graph debug
graph_smart:
	$(MAKE) -C graph smart
graph_release:
	$(MAKE) -C graph release
graph_units:
	$(MAKE) -C graph units
graph_examples:
	$(MAKE) -C graph examples
graph_shared:
	$(MAKE) -C graph shared
graph_install:
	$(MAKE) -C graph install
graph_sourceinstall:
	$(MAKE) -C graph sourceinstall
graph_exampleinstall:
	$(MAKE) -C graph exampleinstall
graph_distinstall:
	$(MAKE) -C graph distinstall
graph_zipinstall:
	$(MAKE) -C graph zipinstall
graph_zipsourceinstall:
	$(MAKE) -C graph zipsourceinstall
graph_zipexampleinstall:
	$(MAKE) -C graph zipexampleinstall
graph_zipdistinstall:
	$(MAKE) -C graph zipdistinstall
graph_clean:
	$(MAKE) -C graph clean
graph_distclean:
	$(MAKE) -C graph distclean
graph_cleanall:
	$(MAKE) -C graph cleanall
graph_info:
	$(MAKE) -C graph info
graph_makefiles:
	$(MAKE) -C graph makefiles
graph:
	$(MAKE) -C graph all
.PHONY: graph_all graph_debug graph_smart graph_release graph_units graph_examples graph_shared graph_install graph_sourceinstall graph_exampleinstall graph_distinstall graph_zipinstall graph_zipsourceinstall graph_zipexampleinstall graph_zipdistinstall graph_clean graph_distclean graph_cleanall graph_info graph_makefiles graph
endif
ifdef TARGET_DIRS_LIBC
libc_all:
	$(MAKE) -C libc all
libc_debug:
	$(MAKE) -C libc debug
libc_smart:
	$(MAKE) -C libc smart
libc_release:
	$(MAKE) -C libc release
libc_units:
	$(MAKE) -C libc units
libc_examples:
	$(MAKE) -C libc examples
libc_shared:
	$(MAKE) -C libc shared
libc_install:
	$(MAKE) -C libc install
libc_sourceinstall:
	$(MAKE) -C libc sourceinstall
libc_exampleinstall:
	$(MAKE) -C libc exampleinstall
libc_distinstall:
	$(MAKE) -C libc distinstall
libc_zipinstall:
	$(MAKE) -C libc zipinstall
libc_zipsourceinstall:
	$(MAKE) -C libc zipsourceinstall
libc_zipexampleinstall:
	$(MAKE) -C libc zipexampleinstall
libc_zipdistinstall:
	$(MAKE) -C libc zipdistinstall
libc_clean:
	$(MAKE) -C libc clean
libc_distclean:
	$(MAKE) -C libc distclean
libc_cleanall:
	$(MAKE) -C libc cleanall
libc_info:
	$(MAKE) -C libc info
libc_makefiles:
	$(MAKE) -C libc makefiles
libc:
	$(MAKE) -C libc all
.PHONY: libc_all libc_debug libc_smart libc_release libc_units libc_examples libc_shared libc_install libc_sourceinstall libc_exampleinstall libc_distinstall libc_zipinstall libc_zipsourceinstall libc_zipexampleinstall libc_zipdistinstall libc_clean libc_distclean libc_cleanall libc_info libc_makefiles libc
endif
ifdef TARGET_DIRS_UNIXUTIL
unixutil_all:
	$(MAKE) -C unixutil all
unixutil_debug:
	$(MAKE) -C unixutil debug
unixutil_smart:
	$(MAKE) -C unixutil smart
unixutil_release:
	$(MAKE) -C unixutil release
unixutil_units:
	$(MAKE) -C unixutil units
unixutil_examples:
	$(MAKE) -C unixutil examples
unixutil_shared:
	$(MAKE) -C unixutil shared
unixutil_install:
	$(MAKE) -C unixutil install
unixutil_sourceinstall:
	$(MAKE) -C unixutil sourceinstall
unixutil_exampleinstall:
	$(MAKE) -C unixutil exampleinstall
unixutil_distinstall:
	$(MAKE) -C unixutil distinstall
unixutil_zipinstall:
	$(MAKE) -C unixutil zipinstall
unixutil_zipsourceinstall:
	$(MAKE) -C unixutil zipsourceinstall
unixutil_zipexampleinstall:
	$(MAKE) -C unixutil zipexampleinstall
unixutil_zipdistinstall:
	$(MAKE) -C unixutil zipdistinstall
unixutil_clean:
	$(MAKE) -C unixutil clean
unixutil_distclean:
	$(MAKE) -C unixutil distclean
unixutil_cleanall:
	$(MAKE) -C unixutil cleanall
unixutil_info:
	$(MAKE) -C unixutil info
unixutil_makefiles:
	$(MAKE) -C unixutil makefiles
unixutil:
	$(MAKE) -C unixutil all
.PHONY: unixutil_all unixutil_debug unixutil_smart unixutil_release unixutil_units unixutil_examples unixutil_shared unixutil_install unixutil_sourceinstall unixutil_exampleinstall unixutil_distinstall unixutil_zipinstall unixutil_zipsourceinstall unixutil_zipexampleinstall unixutil_zipdistinstall unixutil_clean unixutil_distclean unixutil_cleanall unixutil_info unixutil_makefiles unixutil
endif
ifdef TARGET_DIRS_WINUNITS-BASE
winunits-base_all:
	$(MAKE) -C winunits-base all
winunits-base_debug:
	$(MAKE) -C winunits-base debug
winunits-base_smart:
	$(MAKE) -C winunits-base smart
winunits-base_release:
	$(MAKE) -C winunits-base release
winunits-base_units:
	$(MAKE) -C winunits-base units
winunits-base_examples:
	$(MAKE) -C winunits-base examples
winunits-base_shared:
	$(MAKE) -C winunits-base shared
winunits-base_install:
	$(MAKE) -C winunits-base install
winunits-base_sourceinstall:
	$(MAKE) -C winunits-base sourceinstall
winunits-base_exampleinstall:
	$(MAKE) -C winunits-base exampleinstall
winunits-base_distinstall:
	$(MAKE) -C winunits-base distinstall
winunits-base_zipinstall:
	$(MAKE) -C winunits-base zipinstall
winunits-base_zipsourceinstall:
	$(MAKE) -C winunits-base zipsourceinstall
winunits-base_zipexampleinstall:
	$(MAKE) -C winunits-base zipexampleinstall
winunits-base_zipdistinstall:
	$(MAKE) -C winunits-base zipdistinstall
winunits-base_clean:
	$(MAKE) -C winunits-base clean
winunits-base_distclean:
	$(MAKE) -C winunits-base distclean
winunits-base_cleanall:
	$(MAKE) -C winunits-base cleanall
winunits-base_info:
	$(MAKE) -C winunits-base info
winunits-base_makefiles:
	$(MAKE) -C winunits-base makefiles
winunits-base:
	$(MAKE) -C winunits-base all
.PHONY: winunits-base_all winunits-base_debug winunits-base_smart winunits-base_release winunits-base_units winunits-base_examples winunits-base_shared winunits-base_install winunits-base_sourceinstall winunits-base_exampleinstall winunits-base_distinstall winunits-base_zipinstall winunits-base_zipsourceinstall winunits-base_zipexampleinstall winunits-base_zipdistinstall winunits-base_clean winunits-base_distclean winunits-base_cleanall winunits-base_info winunits-base_makefiles winunits-base
endif
ifdef TARGET_DIRS_WINUNITS-JEDI
winunits-jedi_all:
	$(MAKE) -C winunits-jedi all
winunits-jedi_debug:
	$(MAKE) -C winunits-jedi debug
winunits-jedi_smart:
	$(MAKE) -C winunits-jedi smart
winunits-jedi_release:
	$(MAKE) -C winunits-jedi release
winunits-jedi_units:
	$(MAKE) -C winunits-jedi units
winunits-jedi_examples:
	$(MAKE) -C winunits-jedi examples
winunits-jedi_shared:
	$(MAKE) -C winunits-jedi shared
winunits-jedi_install:
	$(MAKE) -C winunits-jedi install
winunits-jedi_sourceinstall:
	$(MAKE) -C winunits-jedi sourceinstall
winunits-jedi_exampleinstall:
	$(MAKE) -C winunits-jedi exampleinstall
winunits-jedi_distinstall:
	$(MAKE) -C winunits-jedi distinstall
winunits-jedi_zipinstall:
	$(MAKE) -C winunits-jedi zipinstall
winunits-jedi_zipsourceinstall:
	$(MAKE) -C winunits-jedi zipsourceinstall
winunits-jedi_zipexampleinstall:
	$(MAKE) -C winunits-jedi zipexampleinstall
winunits-jedi_zipdistinstall:
	$(MAKE) -C winunits-jedi zipdistinstall
winunits-jedi_clean:
	$(MAKE) -C winunits-jedi clean
winunits-jedi_distclean:
	$(MAKE) -C winunits-jedi distclean
winunits-jedi_cleanall:
	$(MAKE) -C winunits-jedi cleanall
winunits-jedi_info:
	$(MAKE) -C winunits-jedi info
winunits-jedi_makefiles:
	$(MAKE) -C winunits-jedi makefiles
winunits-jedi:
	$(MAKE) -C winunits-jedi all
.PHONY: winunits-jedi_all winunits-jedi_debug winunits-jedi_smart winunits-jedi_release winunits-jedi_units winunits-jedi_examples winunits-jedi_shared winunits-jedi_install winunits-jedi_sourceinstall winunits-jedi_exampleinstall winunits-jedi_distinstall winunits-jedi_zipinstall winunits-jedi_zipsourceinstall winunits-jedi_zipexampleinstall winunits-jedi_zipdistinstall winunits-jedi_clean winunits-jedi_distclean winunits-jedi_cleanall winunits-jedi_info winunits-jedi_makefiles winunits-jedi
endif
ifdef TARGET_DIRS_WINCEUNITS
winceunits_all:
	$(MAKE) -C winceunits all
winceunits_debug:
	$(MAKE) -C winceunits debug
winceunits_smart:
	$(MAKE) -C winceunits smart
winceunits_release:
	$(MAKE) -C winceunits release
winceunits_units:
	$(MAKE) -C winceunits units
winceunits_examples:
	$(MAKE) -C winceunits examples
winceunits_shared:
	$(MAKE) -C winceunits shared
winceunits_install:
	$(MAKE) -C winceunits install
winceunits_sourceinstall:
	$(MAKE) -C winceunits sourceinstall
winceunits_exampleinstall:
	$(MAKE) -C winceunits exampleinstall
winceunits_distinstall:
	$(MAKE) -C winceunits distinstall
winceunits_zipinstall:
	$(MAKE) -C winceunits zipinstall
winceunits_zipsourceinstall:
	$(MAKE) -C winceunits zipsourceinstall
winceunits_zipexampleinstall:
	$(MAKE) -C winceunits zipexampleinstall
winceunits_zipdistinstall:
	$(MAKE) -C winceunits zipdistinstall
winceunits_clean:
	$(MAKE) -C winceunits clean
winceunits_distclean:
	$(MAKE) -C winceunits distclean
winceunits_cleanall:
	$(MAKE) -C winceunits cleanall
winceunits_info:
	$(MAKE) -C winceunits info
winceunits_makefiles:
	$(MAKE) -C winceunits makefiles
winceunits:
	$(MAKE) -C winceunits all
.PHONY: winceunits_all winceunits_debug winceunits_smart winceunits_release winceunits_units winceunits_examples winceunits_shared winceunits_install winceunits_sourceinstall winceunits_exampleinstall winceunits_distinstall winceunits_zipinstall winceunits_zipsourceinstall winceunits_zipexampleinstall winceunits_zipdistinstall winceunits_clean winceunits_distclean winceunits_cleanall winceunits_info winceunits_makefiles winceunits
endif
ifdef TARGET_DIRS_NVAPI
nvapi_all:
	$(MAKE) -C nvapi all
nvapi_debug:
	$(MAKE) -C nvapi debug
nvapi_smart:
	$(MAKE) -C nvapi smart
nvapi_release:
	$(MAKE) -C nvapi release
nvapi_units:
	$(MAKE) -C nvapi units
nvapi_examples:
	$(MAKE) -C nvapi examples
nvapi_shared:
	$(MAKE) -C nvapi shared
nvapi_install:
	$(MAKE) -C nvapi install
nvapi_sourceinstall:
	$(MAKE) -C nvapi sourceinstall
nvapi_exampleinstall:
	$(MAKE) -C nvapi exampleinstall
nvapi_distinstall:
	$(MAKE) -C nvapi distinstall
nvapi_zipinstall:
	$(MAKE) -C nvapi zipinstall
nvapi_zipsourceinstall:
	$(MAKE) -C nvapi zipsourceinstall
nvapi_zipexampleinstall:
	$(MAKE) -C nvapi zipexampleinstall
nvapi_zipdistinstall:
	$(MAKE) -C nvapi zipdistinstall
nvapi_clean:
	$(MAKE) -C nvapi clean
nvapi_distclean:
	$(MAKE) -C nvapi distclean
nvapi_cleanall:
	$(MAKE) -C nvapi cleanall
nvapi_info:
	$(MAKE) -C nvapi info
nvapi_makefiles:
	$(MAKE) -C nvapi makefiles
nvapi:
	$(MAKE) -C nvapi all
.PHONY: nvapi_all nvapi_debug nvapi_smart nvapi_release nvapi_units nvapi_examples nvapi_shared nvapi_install nvapi_sourceinstall nvapi_exampleinstall nvapi_distinstall nvapi_zipinstall nvapi_zipsourceinstall nvapi_zipexampleinstall nvapi_zipdistinstall nvapi_clean nvapi_distclean nvapi_cleanall nvapi_info nvapi_makefiles nvapi
endif
ifdef TARGET_DIRS_REXX
rexx_all:
	$(MAKE) -C rexx all
rexx_debug:
	$(MAKE) -C rexx debug
rexx_smart:
	$(MAKE) -C rexx smart
rexx_release:
	$(MAKE) -C rexx release
rexx_units:
	$(MAKE) -C rexx units
rexx_examples:
	$(MAKE) -C rexx examples
rexx_shared:
	$(MAKE) -C rexx shared
rexx_install:
	$(MAKE) -C rexx install
rexx_sourceinstall:
	$(MAKE) -C rexx sourceinstall
rexx_exampleinstall:
	$(MAKE) -C rexx exampleinstall
rexx_distinstall:
	$(MAKE) -C rexx distinstall
rexx_zipinstall:
	$(MAKE) -C rexx zipinstall
rexx_zipsourceinstall:
	$(MAKE) -C rexx zipsourceinstall
rexx_zipexampleinstall:
	$(MAKE) -C rexx zipexampleinstall
rexx_zipdistinstall:
	$(MAKE) -C rexx zipdistinstall
rexx_clean:
	$(MAKE) -C rexx clean
rexx_distclean:
	$(MAKE) -C rexx distclean
rexx_cleanall:
	$(MAKE) -C rexx cleanall
rexx_info:
	$(MAKE) -C rexx info
rexx_makefiles:
	$(MAKE) -C rexx makefiles
rexx:
	$(MAKE) -C rexx all
.PHONY: rexx_all rexx_debug rexx_smart rexx_release rexx_units rexx_examples rexx_shared rexx_install rexx_sourceinstall rexx_exampleinstall rexx_distinstall rexx_zipinstall rexx_zipsourceinstall rexx_zipexampleinstall rexx_zipdistinstall rexx_clean rexx_distclean rexx_cleanall rexx_info rexx_makefiles rexx
endif
ifdef TARGET_DIRS_OS2UNITS
os2units_all:
	$(MAKE) -C os2units all
os2units_debug:
	$(MAKE) -C os2units debug
os2units_smart:
	$(MAKE) -C os2units smart
os2units_release:
	$(MAKE) -C os2units release
os2units_units:
	$(MAKE) -C os2units units
os2units_examples:
	$(MAKE) -C os2units examples
os2units_shared:
	$(MAKE) -C os2units shared
os2units_install:
	$(MAKE) -C os2units install
os2units_sourceinstall:
	$(MAKE) -C os2units sourceinstall
os2units_exampleinstall:
	$(MAKE) -C os2units exampleinstall
os2units_distinstall:
	$(MAKE) -C os2units distinstall
os2units_zipinstall:
	$(MAKE) -C os2units zipinstall
os2units_zipsourceinstall:
	$(MAKE) -C os2units zipsourceinstall
os2units_zipexampleinstall:
	$(MAKE) -C os2units zipexampleinstall
os2units_zipdistinstall:
	$(MAKE) -C os2units zipdistinstall
os2units_clean:
	$(MAKE) -C os2units clean
os2units_distclean:
	$(MAKE) -C os2units distclean
os2units_cleanall:
	$(MAKE) -C os2units cleanall
os2units_info:
	$(MAKE) -C os2units info
os2units_makefiles:
	$(MAKE) -C os2units makefiles
os2units:
	$(MAKE) -C os2units all
.PHONY: os2units_all os2units_debug os2units_smart os2units_release os2units_units os2units_examples os2units_shared os2units_install os2units_sourceinstall os2units_exampleinstall os2units_distinstall os2units_zipinstall os2units_zipsourceinstall os2units_zipexampleinstall os2units_zipdistinstall os2units_clean os2units_distclean os2units_cleanall os2units_info os2units_makefiles os2units
endif
ifdef TARGET_DIRS_UNIVINT
univint_all:
	$(MAKE) -C univint all
univint_debug:
	$(MAKE) -C univint debug
univint_smart:
	$(MAKE) -C univint smart
univint_release:
	$(MAKE) -C univint release
univint_units:
	$(MAKE) -C univint units
univint_examples:
	$(MAKE) -C univint examples
univint_shared:
	$(MAKE) -C univint shared
univint_install:
	$(MAKE) -C univint install
univint_sourceinstall:
	$(MAKE) -C univint sourceinstall
univint_exampleinstall:
	$(MAKE) -C univint exampleinstall
univint_distinstall:
	$(MAKE) -C univint distinstall
univint_zipinstall:
	$(MAKE) -C univint zipinstall
univint_zipsourceinstall:
	$(MAKE) -C univint zipsourceinstall
univint_zipexampleinstall:
	$(MAKE) -C univint zipexampleinstall
univint_zipdistinstall:
	$(MAKE) -C univint zipdistinstall
univint_clean:
	$(MAKE) -C univint clean
univint_distclean:
	$(MAKE) -C univint distclean
univint_cleanall:
	$(MAKE) -C univint cleanall
univint_info:
	$(MAKE) -C univint info
univint_makefiles:
	$(MAKE) -C univint makefiles
univint:
	$(MAKE) -C univint all
.PHONY: univint_all univint_debug univint_smart univint_release univint_units univint_examples univint_shared univint_install univint_sourceinstall univint_exampleinstall univint_distinstall univint_zipinstall univint_zipsourceinstall univint_zipexampleinstall univint_zipdistinstall univint_clean univint_distclean univint_cleanall univint_info univint_makefiles univint
endif
ifdef TARGET_DIRS_OBJCRTL
objcrtl_all:
	$(MAKE) -C objcrtl all
objcrtl_debug:
	$(MAKE) -C objcrtl debug
objcrtl_smart:
	$(MAKE) -C objcrtl smart
objcrtl_release:
	$(MAKE) -C objcrtl release
objcrtl_units:
	$(MAKE) -C objcrtl units
objcrtl_examples:
	$(MAKE) -C objcrtl examples
objcrtl_shared:
	$(MAKE) -C objcrtl shared
objcrtl_install:
	$(MAKE) -C objcrtl install
objcrtl_sourceinstall:
	$(MAKE) -C objcrtl sourceinstall
objcrtl_exampleinstall:
	$(MAKE) -C objcrtl exampleinstall
objcrtl_distinstall:
	$(MAKE) -C objcrtl distinstall
objcrtl_zipinstall:
	$(MAKE) -C objcrtl zipinstall
objcrtl_zipsourceinstall:
	$(MAKE) -C objcrtl zipsourceinstall
objcrtl_zipexampleinstall:
	$(MAKE) -C objcrtl zipexampleinstall
objcrtl_zipdistinstall:
	$(MAKE) -C objcrtl zipdistinstall
objcrtl_clean:
	$(MAKE) -C objcrtl clean
objcrtl_distclean:
	$(MAKE) -C objcrtl distclean
objcrtl_cleanall:
	$(MAKE) -C objcrtl cleanall
objcrtl_info:
	$(MAKE) -C objcrtl info
objcrtl_makefiles:
	$(MAKE) -C objcrtl makefiles
objcrtl:
	$(MAKE) -C objcrtl all
.PHONY: objcrtl_all objcrtl_debug objcrtl_smart objcrtl_release objcrtl_units objcrtl_examples objcrtl_shared objcrtl_install objcrtl_sourceinstall objcrtl_exampleinstall objcrtl_distinstall objcrtl_zipinstall objcrtl_zipsourceinstall objcrtl_zipexampleinstall objcrtl_zipdistinstall objcrtl_clean objcrtl_distclean objcrtl_cleanall objcrtl_info objcrtl_makefiles objcrtl
endif
ifdef TARGET_DIRS_COCOAINT
cocoaint_all:
	$(MAKE) -C cocoaint all
cocoaint_debug:
	$(MAKE) -C cocoaint debug
cocoaint_smart:
	$(MAKE) -C cocoaint smart
cocoaint_release:
	$(MAKE) -C cocoaint release
cocoaint_units:
	$(MAKE) -C cocoaint units
cocoaint_examples:
	$(MAKE) -C cocoaint examples
cocoaint_shared:
	$(MAKE) -C cocoaint shared
cocoaint_install:
	$(MAKE) -C cocoaint install
cocoaint_sourceinstall:
	$(MAKE) -C cocoaint sourceinstall
cocoaint_exampleinstall:
	$(MAKE) -C cocoaint exampleinstall
cocoaint_distinstall:
	$(MAKE) -C cocoaint distinstall
cocoaint_zipinstall:
	$(MAKE) -C cocoaint zipinstall
cocoaint_zipsourceinstall:
	$(MAKE) -C cocoaint zipsourceinstall
cocoaint_zipexampleinstall:
	$(MAKE) -C cocoaint zipexampleinstall
cocoaint_zipdistinstall:
	$(MAKE) -C cocoaint zipdistinstall
cocoaint_clean:
	$(MAKE) -C cocoaint clean
cocoaint_distclean:
	$(MAKE) -C cocoaint distclean
cocoaint_cleanall:
	$(MAKE) -C cocoaint cleanall
cocoaint_info:
	$(MAKE) -C cocoaint info
cocoaint_makefiles:
	$(MAKE) -C cocoaint makefiles
cocoaint:
	$(MAKE) -C cocoaint all
.PHONY: cocoaint_all cocoaint_debug cocoaint_smart cocoaint_release cocoaint_units cocoaint_examples cocoaint_shared cocoaint_install cocoaint_sourceinstall cocoaint_exampleinstall cocoaint_distinstall cocoaint_zipinstall cocoaint_zipsourceinstall cocoaint_zipexampleinstall cocoaint_zipdistinstall cocoaint_clean cocoaint_distclean cocoaint_cleanall cocoaint_info cocoaint_makefiles cocoaint
endif
ifdef TARGET_DIRS_OPENGLES
opengles_all:
	$(MAKE) -C opengles all
opengles_debug:
	$(MAKE) -C opengles debug
opengles_smart:
	$(MAKE) -C opengles smart
opengles_release:
	$(MAKE) -C opengles release
opengles_units:
	$(MAKE) -C opengles units
opengles_examples:
	$(MAKE) -C opengles examples
opengles_shared:
	$(MAKE) -C opengles shared
opengles_install:
	$(MAKE) -C opengles install
opengles_sourceinstall:
	$(MAKE) -C opengles sourceinstall
opengles_exampleinstall:
	$(MAKE) -C opengles exampleinstall
opengles_distinstall:
	$(MAKE) -C opengles distinstall
opengles_zipinstall:
	$(MAKE) -C opengles zipinstall
opengles_zipsourceinstall:
	$(MAKE) -C opengles zipsourceinstall
opengles_zipexampleinstall:
	$(MAKE) -C opengles zipexampleinstall
opengles_zipdistinstall:
	$(MAKE) -C opengles zipdistinstall
opengles_clean:
	$(MAKE) -C opengles clean
opengles_distclean:
	$(MAKE) -C opengles distclean
opengles_cleanall:
	$(MAKE) -C opengles cleanall
opengles_info:
	$(MAKE) -C opengles info
opengles_makefiles:
	$(MAKE) -C opengles makefiles
opengles:
	$(MAKE) -C opengles all
.PHONY: opengles_all opengles_debug opengles_smart opengles_release opengles_units opengles_examples opengles_shared opengles_install opengles_sourceinstall opengles_exampleinstall opengles_distinstall opengles_zipinstall opengles_zipsourceinstall opengles_zipexampleinstall opengles_zipdistinstall opengles_clean opengles_distclean opengles_cleanall opengles_info opengles_makefiles opengles
endif
ifdef TARGET_DIRS_AMUNITS
amunits_all:
	$(MAKE) -C amunits all
amunits_debug:
	$(MAKE) -C amunits debug
amunits_smart:
	$(MAKE) -C amunits smart
amunits_release:
	$(MAKE) -C amunits release
amunits_units:
	$(MAKE) -C amunits units
amunits_examples:
	$(MAKE) -C amunits examples
amunits_shared:
	$(MAKE) -C amunits shared
amunits_install:
	$(MAKE) -C amunits install
amunits_sourceinstall:
	$(MAKE) -C amunits sourceinstall
amunits_exampleinstall:
	$(MAKE) -C amunits exampleinstall
amunits_distinstall:
	$(MAKE) -C amunits distinstall
amunits_zipinstall:
	$(MAKE) -C amunits zipinstall
amunits_zipsourceinstall:
	$(MAKE) -C amunits zipsourceinstall
amunits_zipexampleinstall:
	$(MAKE) -C amunits zipexampleinstall
amunits_zipdistinstall:
	$(MAKE) -C amunits zipdistinstall
amunits_clean:
	$(MAKE) -C amunits clean
amunits_distclean:
	$(MAKE) -C amunits distclean
amunits_cleanall:
	$(MAKE) -C amunits cleanall
amunits_info:
	$(MAKE) -C amunits info
amunits_makefiles:
	$(MAKE) -C amunits makefiles
amunits:
	$(MAKE) -C amunits all
.PHONY: amunits_all amunits_debug amunits_smart amunits_release amunits_units amunits_examples amunits_shared amunits_install amunits_sourceinstall amunits_exampleinstall amunits_distinstall amunits_zipinstall amunits_zipsourceinstall amunits_zipexampleinstall amunits_zipdistinstall amunits_clean amunits_distclean amunits_cleanall amunits_info amunits_makefiles amunits
endif
ifdef TARGET_DIRS_PALMUNITS
palmunits_all:
	$(MAKE) -C palmunits all
palmunits_debug:
	$(MAKE) -C palmunits debug
palmunits_smart:
	$(MAKE) -C palmunits smart
palmunits_release:
	$(MAKE) -C palmunits release
palmunits_units:
	$(MAKE) -C palmunits units
palmunits_examples:
	$(MAKE) -C palmunits examples
palmunits_shared:
	$(MAKE) -C palmunits shared
palmunits_install:
	$(MAKE) -C palmunits install
palmunits_sourceinstall:
	$(MAKE) -C palmunits sourceinstall
palmunits_exampleinstall:
	$(MAKE) -C palmunits exampleinstall
palmunits_distinstall:
	$(MAKE) -C palmunits distinstall
palmunits_zipinstall:
	$(MAKE) -C palmunits zipinstall
palmunits_zipsourceinstall:
	$(MAKE) -C palmunits zipsourceinstall
palmunits_zipexampleinstall:
	$(MAKE) -C palmunits zipexampleinstall
palmunits_zipdistinstall:
	$(MAKE) -C palmunits zipdistinstall
palmunits_clean:
	$(MAKE) -C palmunits clean
palmunits_distclean:
	$(MAKE) -C palmunits distclean
palmunits_cleanall:
	$(MAKE) -C palmunits cleanall
palmunits_info:
	$(MAKE) -C palmunits info
palmunits_makefiles:
	$(MAKE) -C palmunits makefiles
palmunits:
	$(MAKE) -C palmunits all
.PHONY: palmunits_all palmunits_debug palmunits_smart palmunits_release palmunits_units palmunits_examples palmunits_shared palmunits_install palmunits_sourceinstall palmunits_exampleinstall palmunits_distinstall palmunits_zipinstall palmunits_zipsourceinstall palmunits_zipexampleinstall palmunits_zipdistinstall palmunits_clean palmunits_distclean palmunits_cleanall palmunits_info palmunits_makefiles palmunits
endif
ifdef TARGET_DIRS_LIBOGCFPC
libogcfpc_all:
	$(MAKE) -C libogcfpc all
libogcfpc_debug:
	$(MAKE) -C libogcfpc debug
libogcfpc_smart:
	$(MAKE) -C libogcfpc smart
libogcfpc_release:
	$(MAKE) -C libogcfpc release
libogcfpc_units:
	$(MAKE) -C libogcfpc units
libogcfpc_examples:
	$(MAKE) -C libogcfpc examples
libogcfpc_shared:
	$(MAKE) -C libogcfpc shared
libogcfpc_install:
	$(MAKE) -C libogcfpc install
libogcfpc_sourceinstall:
	$(MAKE) -C libogcfpc sourceinstall
libogcfpc_exampleinstall:
	$(MAKE) -C libogcfpc exampleinstall
libogcfpc_distinstall:
	$(MAKE) -C libogcfpc distinstall
libogcfpc_zipinstall:
	$(MAKE) -C libogcfpc zipinstall
libogcfpc_zipsourceinstall:
	$(MAKE) -C libogcfpc zipsourceinstall
libogcfpc_zipexampleinstall:
	$(MAKE) -C libogcfpc zipexampleinstall
libogcfpc_zipdistinstall:
	$(MAKE) -C libogcfpc zipdistinstall
libogcfpc_clean:
	$(MAKE) -C libogcfpc clean
libogcfpc_distclean:
	$(MAKE) -C libogcfpc distclean
libogcfpc_cleanall:
	$(MAKE) -C libogcfpc cleanall
libogcfpc_info:
	$(MAKE) -C libogcfpc info
libogcfpc_makefiles:
	$(MAKE) -C libogcfpc makefiles
libogcfpc:
	$(MAKE) -C libogcfpc all
.PHONY: libogcfpc_all libogcfpc_debug libogcfpc_smart libogcfpc_release libogcfpc_units libogcfpc_examples libogcfpc_shared libogcfpc_install libogcfpc_sourceinstall libogcfpc_exampleinstall libogcfpc_distinstall libogcfpc_zipinstall libogcfpc_zipsourceinstall libogcfpc_zipexampleinstall libogcfpc_zipdistinstall libogcfpc_clean libogcfpc_distclean libogcfpc_cleanall libogcfpc_info libogcfpc_makefiles libogcfpc
endif
all: $(addsuffix _all,$(TARGET_DIRS))
debug: $(addsuffix _debug,$(TARGET_DIRS))
smart: $(addsuffix _smart,$(TARGET_DIRS))
release: $(addsuffix _release,$(TARGET_DIRS))
units: $(addsuffix _units,$(TARGET_DIRS))
examples: $(addsuffix _examples,$(TARGET_DIRS))
shared: $(addsuffix _shared,$(TARGET_DIRS))
install: $(addsuffix _install,$(TARGET_DIRS))
sourceinstall: $(addsuffix _sourceinstall,$(TARGET_DIRS))
exampleinstall: $(addsuffix _exampleinstall,$(TARGET_DIRS))
distinstall: $(addsuffix _distinstall,$(TARGET_DIRS))
zipinstall: $(addsuffix _zipinstall,$(TARGET_DIRS))
zipsourceinstall: $(addsuffix _zipsourceinstall,$(TARGET_DIRS))
zipexampleinstall: $(addsuffix _zipexampleinstall,$(TARGET_DIRS))
zipdistinstall: $(addsuffix _zipdistinstall,$(TARGET_DIRS))
clean: $(addsuffix _clean,$(TARGET_DIRS))
distclean: $(addsuffix _distclean,$(TARGET_DIRS))
cleanall: $(addsuffix _cleanall,$(TARGET_DIRS))
info: fpc_info
makefiles: fpc_makefiles $(addsuffix _makefiles,$(TARGET_DIRS))
.PHONY: all debug smart release units examples shared install sourceinstall exampleinstall distinstall zipinstall zipsourceinstall zipexampleinstall zipdistinstall clean distclean cleanall info makefiles
ifneq ($(wildcard fpcmake.loc),)
include fpcmake.loc
endif
fpmkunit_bootstrap:
ifdef CROSSCOMPILE
	$(MAKE) -C fpmkunit bootstrap
endif
fpmkunit_all: fpmkunit_bootstrap fcl-base_all fcl-process_all paszlib_all
fpmkunit_debug: fpmkunit_bootstrap fcl-base_debug fcl-process_debug paszlib_debug
fpmkunit_smart: fpmkunit_bootstrap fcl-base_smart fcl-process_smart paszlib_smart
fpmkunit_release: fpmkunit_bootstrap fcl-base_release fcl-process_release paszlib_release
fpmkunit_shared: fpmkunit_bootstrap fcl-base_shared fcl-process_shared paszlib_shared
ifneq ($(findstring $(OS_TARGET),darwin iphonesim),)
fcl-base_all: univint_all paszlib_all
fcl-base_debug: univint_debug paszlib_debug
fcl-base_smart: univint_smart paszlib_smart
fcl-base_release: univint_release paszlib_release
fcl-base_shared: univint_shared paszlib_shared
else
fcl-base_all: paszlib_all
fcl-base_debug: paszlib_debug
fcl-base_smart: paszlib_smart
fcl-base_release: paszlib_release
fcl-base_shared: paszlib_shared
endif
ifneq ($(findstring $(OS_TARGET),win32 win64),)
fcl-extra_all: fcl-base winunits-base_all winunits-jedi_all
fcl-extra_debug: fcl-base_debug winunits-base_debug winunits-jedi_debug
fcl-extra_smart: fcl-base_smart winunits-base_smart winunits-jedi_smart
fcl-extra_release: fcl-base_release winunits-base_release winunits-jedi_release
fcl-extra_shared: fcl-base_shared winunits-base_shared winunits-jedi_shared
else
ifneq ($(findstring $(OS_TARGET),darwin iphonesim),)
fcl-extra_all: univint_all fcl-base_all
fcl-extra_debug: univint_debug fcl-base_debug
fcl-extra_smart: univint_smart fcl-base_smart
fcl-extra_release: univint_release fcl-base_release
fcl-extra_shared: univint_shared fcl-base_shared
else
fcl-extra_all: fcl-base_all
fcl-extra_debug: fcl-base_debug
fcl-extra_smart: fcl-base_smart
fcl-extra_release: fcl-base_release
fcl-extra_shared: fcl-base_shared
endif
endif
ifneq ($(findstring $(FULL_TARGET),i386-darwin powerpc-darwin x86_64-darwin powerpc64-darwin),)
cocoaint_all: univint_all
cocoaint_debug: univint_debug
cocoaint_smart: univint_smart
cocoaint_release: univint_release
cocoaint_shared: univint_shared
endif
ifneq ($(findstring $(OS_TARGET),beos haiku freebsd darwin iphonesim solaris netbsd openbsd linux win32 win64 wince),)
fppkg_all: fpmkunit_all fcl-base_all fcl-xml_all fcl-process_all fcl-net_all paszlib_all fcl-web_all
fppkg_debug: fpmkunit_debug fcl-base_debug fcl-xml_debug fcl-process_debug fcl-net_debug paszlib_debug fcl-web_debug
fppkg_smart: fpmkunit_smart fcl-base_smart fcl-xml_smart fcl-process_smart fcl-net_smart paszlib_smart fcl-web_smart
fppkg_release: fpmkunit_release fcl-base_release fcl-xml_release fcl-process_release fcl-net_release paszlib_release fcl-web_release
fppkg_shared: fpmkunit_shared fcl-base_shared fcl-xml_shared fcl-process_shared fcl-net_shared paszlib_shared fcl-web_shared
else
fppkg_all: fpmkunit_all fcl-base_all fcl-xml_all fcl-process_all paszlib_all
fppkg_debug: fpmkunit_debug fcl-base_debug fcl-xml_debug fcl-process_debug paszlib_debug
fppkg_smart: fpmkunit_smart fcl-base_smart fcl-xml_smart fcl-process_smart paszlib_smart
fppkg_release: fpmkunit_release fcl-base_release fcl-xml_release fcl-process_release paszlib_release
fppkg_shared: fpmkunit_shared fcl-base_shared fcl-xml_shared fcl-process_shared paszlib_shared
endif
fcl-xml_all: fcl-base_all
fcl-xml_debug: fcl-base_debug
fcl-xml_smart: fcl-base_smart
fcl-xml_release: fcl-base_release
fcl-xml_shared: fcl-base_shared
fcl-json_all: fcl-base_all
fcl-json_debug: fcl-base_debug
fcl-json_smart: fcl-base_smart
fcl-json_release: fcl-base_release
fcl-json_shared: fcl-base_shared
fcl-js_all: fcl-base_all
fcl-js_debug: fcl-base_debug
fcl-js_smart: fcl-base_smart
fcl-js_release: fcl-base_release
fcl-js_shared: fcl-base_shared
fcl-image_all: fcl-base_all paszlib_all pasjpeg_all
fcl-image_debug: fcl-base_debug paszlib_debug pasjpeg_debug
fcl-image_smart: fcl-base_smart paszlib_smart pasjpeg_smart
fcl-image_release: fcl-base_release paszlib_release pasjpeg_release
fcl-image_shared: fcl-base_shared paszlib_shared pasjpeg_shared
fcl-fpcunit_all: fcl-xml_all paszlib_all
fcl-fpcunit_debug: fcl-xml_debug paszlib_debug
fcl-fpcunit_smart: fcl-xml_smart paszlib_smart
fcl-fpcunit_release: fcl-xml_release paszlib_release
fcl-fpcunit_shared: fcl-xml_shared paszlib_shared
fcl-registry_all: fcl-xml_all
fcl-registry_debug: fcl-xml_debug
fcl-registry_smart: fcl-xml_smart
fcl-registry_release: fcl-xml_release
fcl-registry_shared: fcl-xml_shared
libvlc_all: fcl-base_all
libvlc_debug: fcl-base_debug
libvlc_smart: fcl-base_smart
libvlc_release: fcl-base_release
libvlc_shared: fcl-base_shared
ifeq ($(findstring $(OS_TARGET),linux darwin iphonesim freebsd openbsd netbsd solaris),)
fcl-net_all: fcl-passrc_all fcl-xml_all
fcl-net_debug: fcl-passrc_debug fcl-xml_debug
fcl-net_smart: fcl-passrc_smart fcl-xml_smart
fcl-net_release: fcl-passrc_release fcl-xml_release
fcl-net_shared: fcl-passrc_shared fcl-xml_shared
else
fcl-net_all: fcl-passrc_all fcl-xml_all fcl-async_all
fcl-net_debug: fcl-passrc_debug fcl-xml_debug fcl-async_debug
fcl-net_smart: fcl-passrc_smart fcl-xml_smart fcl-async_smart
fcl-net_release: fcl-passrc_release fcl-xml_release fcl-async_release
fcl-net_shared: fcl-passrc_shared fcl-xml_shared fcl-async_shared
endif
fcl-web_all: fpmkunit_all fcl-db_all fcl-xml_all fcl-process_all httpd22_all httpd24_all fastcgi_all fcl-net_all fcl-json_all
fcl-web_debug: fpmkunit_debug fcl-db_debug fcl-xml_debug fcl-process_debug httpd22_debug httpd24_debug fastcgi_debug fcl-net_debug fcl-json_debug
fcl-web_smart: fpmkunit_smart fcl-db_smart fcl-xml_smart fcl-process_smart httpd22_smart httpd24_smart fastcgi_smart fcl-net_smart fcl-json_smart
fcl-web_release: fpmkunit_release fcl-db_release fcl-xml_release fcl-process_release httpd22_release httpd24_release fastcgi_release fcl-net_release fcl-json_release
fcl-web_shared: fpmkunit_shared fcl-db_shared fcl-xml_shared fcl-process_shared httpd22_shared httpd24_shared fastcgi_shared fcl-net_shared fcl-json_shared
fastcgi_all: fpmkunit_all
fastcgi_debug: fpmkunit_debug
fastcgi_smart: fpmkunit_smart
fastcgi_release: fpmkunit_release
fastcgi_shared: fpmkunit_shared
ifneq ($(findstring $(OS_TARGET),linux freebsd openbsd netbsd win32 beos haiku),)
fcl-db_all: fcl-xml_all fcl-base_all mysql_all ibase_all oracle_all odbc_all postgres_all sqlite_all pxlib_all fcl-json_all dblib_all
fcl-db_debug: fcl-xml_debug fcl-base_debug mysql_debug ibase_debug oracle_debug odbc_debug postgres_debug sqlite_debug pxlib_debug fcl-json_debug dblib_debug
fcl-db_smart: fcl-xml_smart fcl-base_smart mysql_smart ibase_smart oracle_smart odbc_smart postgres_smart sqlite_smart pxlib_smart fcl-json_smart dblib_smart
fcl-db_release: fcl-xml_release fcl-base_release mysql_release ibase_release oracle_release odbc_release postgres_release sqlite_release pxlib_release fcl-json_release dblib_release
fcl-db_shared: fcl-xml_shared fcl-base_shared mysql_shared ibase_shared oracle_shared odbc_shared postgres_shared sqlite_shared pxlib_shared fcl-json_shared dblib_shared
else
ifneq ($(findstring $(OS_TARGET),win64 wince solaris darwin iphonesim),)
fcl-db_all: fcl-xml_all fcl-base_all mysql_all ibase_all oracle_all odbc_all postgres_all sqlite_all fcl-json_all dblib_all
fcl-db_debug: fcl-xml_debug fcl-base_debug mysql_debug ibase_debug oracle_debug odbc_debug postgres_debug sqlite_debug fcl-json_debug dblib_debug
fcl-db_smart: fcl-xml_smart fcl-base_smart mysql_smart ibase_smart oracle_smart odbc_smart postgres_smart sqlite_smart fcl-json_smart dblib_smart
fcl-db_release: fcl-xml_release fcl-base_release mysql_release ibase_release oracle_release odbc_release postgres_release sqlite_release fcl-json_release dblib_release
fcl-db_shared: fcl-xml_shared fcl-base_shared mysql_shared ibase_shared oracle_shared odbc_shared postgres_shared sqlite_shared fcl-json_shared dblib_shared
else
fcl-db_all: fcl-xml_all fcl-base_all fcl-json_all 
fcl-db_debug: fcl-xml_debug fcl-base_debug fcl-json_debug
fcl-db_smart: fcl-xml_smart fcl-base_smart fcl-json_smart
fcl-db_release: fcl-xml_release fcl-base_release fcl-json_release
fcl-db_shared: fcl-xml_shared fcl-base_shared fcl-json_shared
endif
endif
fcl_all: fcl-base_all fcl-xml_all fcl-fpcunit_all fcl-db_all fcl-web_all fcl-registry_all fcl-passrc_all fcl-image_all fcl-net_all fcl-json_all fcl-res_all
fcl_debug: fcl-base_debug fcl-xml_debug fcl-fpcunit_debug fcl-db_debug fcl-web_debug fcl-registry_debug fcl-passrc_debug fcl-image_debug fcl-net_debug fcl-json_debug fcl-res_debug
fcl_smart: fcl-base_smart fcl-xml_smart fcl-fpcunit_smart fcl-db_smart fcl-web_smart fcl-registry_smart fcl-passrc_smart fcl-image_smart fcl-net_smart fcl-json_smart fcl-res_smart
fcl_release: fcl-base_release fcl-xml_release fcl-fpcunit_release fcl-db_release fcl-web_release fcl-registry_release fcl-passrc_release fcl-image_release fcl-net_release fcl-json_release fcl-res_release
fcl_shared: fcl-base_shared fcl-xml_shared fcl-fpcunit_shared fcl-db_shared fcl-web_shared fcl-registry_shared fcl-passrc_shared fcl-image_shared fcl-net_shared fcl-json_shared fcl-res_shared
libpng_all: zlib_all
libpng_debug: zlib_debug
libpng_smart: zlib_smart
libpng_release: zlib_release
libpng_shared: zlib_shared
ifneq ($(findstring $(OS_TARGET),linux darwin iphonesim freebsd openbsd netbsd solaris),)
cairo_all: x11_all fcl-image_all
cairo_debug: x11_debug fcl-image_debug
cairo_smart: x11_smart fcl-image_smart
cairo_release: x11_release fcl-image_release
cairo_shared: x11_shared fcl-image_shared
else
cairo_all:  fcl-image_all
cairo_debug:  fcl-image_debug
cairo_smart:  fcl-image_smart
cairo_release:  fcl-image_release
cairo_shared:  fcl-image_shared
endif
chm_all:  fcl-xml_all
chm_shared:  fcl-xml_shared
chm_smart:  fcl-xml_smart
chm_debug:  fcl-xml_debug
chm_release:  fcl-xml_release
fpgtk_all: fcl-base_all gtk1_all
fpgtk_shared: fcl-base_shared gtk1_shared
fpgtk_smart: fcl-base_smart gtk1_smart
fpgtk_debug: fcl-base_debug gtk1_debug
fpgtk_release: fcl-base_release gtk1_release
ifeq ($(findstring $(OS_TARGET),go32v2),)
graph_all: sdl_all
graph_shared: sdl_shared
graph_smart: sdl_smart
graph_debug: sdl_debug
graph_release: sdl_release
endif
ifneq ($(findstring $(OS_TARGET),linux win32 win64),)
graph_all: ptc_all opengl_all
graph_shared: ptc_shared opengl_shared
graph_smart: ptc_smart opengl_smart
graph_debug: ptc_debug opengl_debug
graph_release: ptc_release opengl_release
ptc_all: opengl_all
ptc_shared: opengl_shared
ptc_smart: opengl_smart
ptc_debug: opengl_debug
ptc_release: opengl_release
endif
ifneq ($(findstring $(OS_TARGET),linux darwin iphonesim freebsd openbsd netbsd solaris),)
gtk1_all: x11_all opengl_all
gtk1_debug: x11_debug opengl_debug
gtk1_smart: x11_smart opengl_smart
gtk1_release: x11_release opengl_release
gtk1_shared: x11_shared opengl_shared
gtk2_all: x11_all cairo_all
gtk2_shared: x11_shared cairo_shared
gtk2_smart: x11_smart cairo_smart
gtk2_debug: x11_debug cairo_debug
gtk2_release: x11_release cairo_release
else
ifeq ($(findstring $(OS_TARGET),os2 emx),)
gtk1_all:  opengl_all
gtk1_debug:  opengl_debug
gtk1_smart:  opengl_smart
gtk1_release:  opengl_release
gtk1_shared:  opengl_shared
endif
gtk2_all: cairo_all
gtk2_shared: cairo_shared
gtk2_smart: cairo_smart
gtk2_debug: cairo_debug
gtk2_release: cairo_release
endif
imlib_all: gtk1_all x11_all
imlib_shared: gtk1_shared x11_shared
imlib_smart: gtk1_smart x11_smart
imlib_debug: gtk1_debug x11_debug
imlib_release: gtk1_release x11_release
ldap_all: hash_all
ldap_shared: hash_shared
ldap_smart: hash_smart
ldap_debug: hash_debug
ldap_release: hash_release
libpng_all: zlib_all
libpng_shared: zlib_shared
libpng_smart: zlib_smart
libpng_debug: zlib_debug
libpng_release: zlib_release
paszlib_all: hash_all
paszlib_shared: hash_shared
paszlib_smart: hash_smart
paszlib_debug: hash_debug
paszlib_release: hash_release
ifneq ($(findstring $(OS_TARGET),linux darwin iphonesim freebsd openbsd netbsd solaris),)
sdl_all: pthreads_all x11_all
sdl_shared: pthreads_shared x11_shared
sdl_smart: pthreads_smart x11_smart
sdl_debug: pthreads_debug x11_debug
sdl_release: pthreads_release x11_release
opengl_all: x11_all
opengl_shared: x11_shared
opengl_smart: x11_smart
opengl_debug: x11_debug
opengl_release: x11_release
ptc_all: x11_all opengl_all
ptc_shared: x11_shared opengl_shared
ptc_smart: x11_smart opengl_smart
ptc_debug: x11_debug opengl_debug
ptc_release: x11_release opengl_release
endif
tcl_all: fcl-base_all
tcl_shared: fcl-base_shared
tcl_smart: fcl-base_smart
tcl_debug: fcl-base_debug
tcl_release: fcl-base_release
unixutil_all: libc_all fcl-base_all
unixutil_shared: libc_shared fcl-base_shared
unixutil_smart: libc_smart fcl-base_smart
unixutil_debug: libc_debug fcl-base_debug
unixutil_release: libc_release fcl-base_release
winunits-base_all: fcl-registry_all fcl-base_all
winunits-base_shared: fcl-registry_shared fcl-base_shared
winunits-base_smart: fcl-registry_smart fcl-base_smart
winunits-base_debug: fcl-registry_debug fcl-base_debug
winunits-base_release: fcl-registry_release fcl-base_release
winunits-jedi_all: winunits-base_all fcl-registry_all fcl-base_all
winunits-jedi_shared: winunits-base_shared fcl-registry_shared fcl-base_shared
winunits-jedi_smart: winunits-base_smart fcl-registry_smart fcl-base_smart
winunits-jedi_debug: winunits-base_debug fcl-registry_debug fcl-base_debug
winunits-jedi_release: winunits-base_release fcl-registry_release fcl-base_release
xforms_all: x11_all
xforms_shared: x11_shared
xforms_smart: x11_smart
xforms_debug: x11_debug
xforms_release: x11_release
gnome1_all: gtk1_all imlib_all
gnome1_shared: gtk1_shared imlib_shared
gnome1_smart: gtk1_smart imlib_smart
gnome1_debug: gtk1_debug imlib_debug
gnome1_release: gtk1_release imlib_release
ptc_all: hermes_all fcl-base_all
ptc_shared: hermes_shared fcl-base_shared
ptc_smart: hermes_smart fcl-base_smart
ptc_debug: hermes_debug fcl-base_debug
ptc_release: hermes_release fcl-base_release
librsvg_all: gtk2_all
librsvg_shared: gtk2_shared
librsvg_smart: gtk2_smart
librsvg_debug: gtk2_debug
librsvg_release: gtk2_release
ifneq ($(findstring $(OS_TARGET),linux freebsd darwin iphonesim beos haiku),)
fcl-xml_all: iconvenc_all
fcl-xml_shared: iconvenc_shared
fcl-xml_smart: iconvenc_smart
fcl-xml_debug: iconvenc_debug
fcl-xml_release: iconvenc_release
endif
opencl_all:  opengl_all
opencl_debug:  opengl_debug
opencl_smart:  opengl_smart
opencl_release:  opengl_release
opencl_shared:  opengl_shared
fpindexer_all: fcl-db_all fcl-base_all chm_all sqlite_all
fpindexer_shared: fcl-db_shared fcl-base_shared chm_shared sqlite_shared
fpindexer_smart: fcl-db_smart fcl-base_smart chm_smart sqlite_smart
fpindexer_debug: fcl-db_debug fcl-base_debug chm_debug sqlite_debug
fpindexer_release: fcl-db_release fcl-base_release chm_release sqlite_release
