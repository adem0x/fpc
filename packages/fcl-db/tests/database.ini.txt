; This file contains several sections, one for each database type. 

; Select here which section has to be used currently, 
; i.e. which database you want to use
[Database]
type=bufdataset


; These sections are for the several SQLDB-types of databases:

; PostgreSQL database:
[postgresql]
; The connector specifies the DB-component that has to be used. The 'sql'
; connector tests the SQLDB components
connector=sql

; Here you can give some parameters, which are specific for each connector. The
; SQL connector uses this parameter to specify the connection that should be
; used;
connectorparams=postgresql

; The name of the database. The database could be empty. You only need read and
; write rights.
name=testdb

; user to log in with
user=

; password to log in with
password=

; hostname of the database-server
hostname=127.0.0.1

; MySQL 4.0 database:
[mysql40]
connector=sql
connectorparams=mysql40
name=testdb
user=root
password=
hostname=127.0.0.1

; MySQL 4.1 database:
[mysql41]
connector=sql
connectorparams=mysql41
name=testdb
user=root
password=
hostname=127.0.0.1

; MySQL 5.0 database:
[mysql50]
connector=sql
connectorparams=mysql50
name=testdb
user=root
password=
hostname=127.0.0.1

; MySQL 5.1 database:
[mysql51]
connector=sql
connectorparams=mysql51
name=testdb
user=root
password=
hostname=127.0.0.1

; MySQL 5.5 database:
[mysql55]
connector=sql
connectorparams=mysql55
name=testdb
user=root
password=
hostname=127.0.0.1

; Oracle database:
[oracle]
connector=sql
connectorparams=oracle
name=xe
user=system
password=
hostname=127.0.0.1

; Interbase or Firebird database:
[interbase]
connector=sql
connectorparams=interbase
name=/opt/firebird/data/testdb.fdb
; Default username/password for Interbase/Firebird
; is sysdba/masterkey. Change to your situation.
user=sysdba
password=masterkey
hostname=localhost

; Firebird embedded
; Same as Firebird, except we leave the host name blank
; and specify a db without path.
; Make sure your Firebird embedded library files (.dll/.so/.dylib)
; are installed; e.g. on Windows, you can put them in this
; directory.
; Test code will create db if it doesn't exist; you can
; delete an existing db file before the test to start
; fresh.
[firebirdembedded]
connector=sql
connectorparams=interbase
name=fbembedtest.fdb
user=sysdba
password=masterkey
hostname=

; ODBC database:
[odbc]
connector=sql
connectorparams=odbc
name=testdb
user=root
password=
hostname=127.0.0.1

; SQLite database:
[sqlite]
connector=sql
connectorparams=sqlite3
name=test.db

; MS SQL Server database:
[mssql]
connector=sql
connectorparams=mssql
name=pubs
; If you want to use trusted authentication/SSPI, leave
; user and password blank
user=sa
password=
; You can specify the port after a colon, e.g.
; hostname=mssqlserver:1433
; You can also specify the instance after a backslash, e.g.
; hostname=127.0.0.1\SQLEXPRESS
; See mssqlconn documentation
hostname=127.0.0.1

; Sybase ASE database
[sybase]
connector=sql
connectorparams=sybase
name=testdb
user=sa
password=
; You can specify the port after a colon, e.g.
; hostname=bigbadserver:5000
; See mssqlconn documentation
hostname=127.0.0.1

; TDBf: DBase/FoxPro database:
[dbf]
connector=dbf
; Connectorparams specifies table level/compatibility level:
; 3=DBase III
; 4=DBase IV
; 7=Visual DBase 7 for Windows
; 25=FoxPro
; 30=Visual FoxPro
connectorparams=4

; TDBf: DBase/FoxPro database:
[dbase3]
connector=dbf
connectorparams=3

; TDBf: DBase/FoxPro database:
[dbase4]
connector=dbf
connectorparams=4

; TDBf: DBase/FoxPro database:
[dbase7]
connector=dbf
; 7=Visual DBase 7 for Windows
connectorparams=7

; TDBf: DBase/FoxPro database:
[foxpro]
connector=dbf
; 25=FoxPro
connectorparams=25

; TDBf: DBase/FoxPro database:
[visualfoxpro]
connector=dbf
; 30=Visual FoxPro
connectorparams=25

; MemDS in memory dataset:
[memds]
connector=memds

; BufDataset in memory dataset:
[bufdataset]
connector=bufdataset

; sdfdataset file-based dataset:
[sdfdataset]
connector=sdfds
; subdirectory for the sdf files:
name=sdftest