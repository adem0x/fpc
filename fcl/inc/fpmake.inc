{ Make general directory and all subdirectories }
{ FULLFCL will be defined if included from main FCL directory, }
{ which should always be the case for this file }

Targets.ResetDefaults;
Targets.DefaultDir:='inc';
T:=Targets.AddUnit('contnrs');
T:=Targets.AddUnit('inifiles');
T:=Targets.AddUnit('ezcgi');
T:=Targets.AddUnit('pipes');
T:=Targets.AddUnit('rtfpars');
T:=Targets.AddUnit('idea');
T:=Targets.AddUnit('base64');
T:=Targets.AddUnit('gettext');
T:=Targets.AddUnit('iostream');
T:=Targets.AddUnit('zstream');
T:=Targets.AddUnit('cachecls');
T.ResourceStrings:=True;
T:=Targets.AddUnit('avl_tree');
T:=Targets.AddUnit('xmlreg');
T:=Targets.AddUnit('registry');
T.ResourceStrings:=True;
T:=Targets.AddUnit('eventlog');
T.ResourceStrings:=True;
T:=Targets.AddUnit('custapp');
T.ResourceStrings:=True;
T:=Targets.AddUnit('cgiapp');
T.ResourceStrings:=True;
T:=Targets.AddUnit('wformat');
T:=Targets.AddUnit('whtml');
T:=Targets.AddUnit('wtex');
T:=Targets.AddUnit('rttiutils');
T:=Targets.AddUnit('bufstream');
T.ResourceStrings:=True;
T:=Targets.AddUnit('streamex');
T:=Targets.AddUnit('process');
T.OS:=[freebsd,darwin,netbsd,openbsd,linux,win32];
T:=Targets.AddUnit('ssockets');
T.OS:=[freebsd,darwin,netbsd,openbsd,linux,win32,os2,emx,netware,netwlibc];
T.ResourceStrings:=True;
T:=Targets.AddUnit('resolve');
T.OS:=[freebsd,darwin,netbsd,openbsd,linux,win32,os2,emx,netware,netwlibc];
T.ResourceStrings:=True;
T:=Targets.AddUnit('fpasync');
T.OS:=[freebsd,darwin,netbsd,openbsd,linux];
T:=Targets.AddUnit('syncobjs');
T.OS:=[freebsd,darwin,linux,win32,netwlibc];
T.Directory:=OSToString(Defaults.OS);
T:=Targets.AddUnit('win32/fileinfo');
T.OS:=[win32];

{ Clean files. }  
CleanFiles.add('adler.o');
CleanFiles.add('adler.ppu');
CleanFiles.add('gzcrc.o');
CleanFiles.add('gzcrc.ppu');
CleanFiles.add('gzio.o');
CleanFiles.add('gzio.ppu');
CleanFiles.add('infblock.o');
CleanFiles.add('infblock.ppu');
CleanFiles.add('infcodes.o');
CleanFiles.add('infcodes.ppu');
CleanFiles.add('inffast.o');
CleanFiles.add('inffast.ppu');
CleanFiles.add('inftrees.o');
CleanFiles.add('inftrees.ppu');
CleanFiles.add('infutil.o');
CleanFiles.add('infutil.ppu');
CleanFiles.add('minigzip.o');
CleanFiles.add('minigzip.ppu');
CleanFiles.add('paszlib.o');
CleanFiles.add('paszlib.ppu');
CleanFiles.add('trees.o');
CleanFiles.add('trees.ppu');
CleanFiles.add('zbase.o');
CleanFiles.add('zbase.ppu');
CleanFiles.add('zcompres.o');
CleanFiles.add('zcompres.ppu');
CleanFiles.add('zdeflate.o');
CleanFiles.add('zdeflate.ppu');
CleanFiles.add('zinflate.o');
CleanFiles.add('zinflate.ppu');
CleanFiles.add('zuncompr.o');
CleanFiles.add('zuncompr.ppu');
CleanFiles.add('zutil.o');
CleanFiles.add('zutil.ppu');
CleanFiles.add('pthreads.o');
CleanFiles.add('pthreads.ppu');
CleanFiles.add('streamio.o');
CleanFiles.add('streamio.ppu');
